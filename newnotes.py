#!/usr/bin/env python

# 2011-06-02
# Daniel B. Rollings
# Edited by Ray Swingle


from string import *
import math
import re
# from Types import CyclicList

# The dividers for display of the string - these need to be removed
g_sTableStart = '' # '\n  '
g_sTableEnd = '' #' \n    '
g_sTableHeaderStart = ''
g_sTableHeaderEnd = ''
g_sTableRowStart = ''
g_sTableRowEnd = ''
g_sTableRowBorder = ' | '
g_serialized = "~/.newnotes_ratios"

lFractions256 = [(1,256),(1,255),(1,254),(1,253),(1,252),(1,251),(1,250),(1,249),(1,248),(1,247),(1,246),(1,245),(1,244),(1,243),(1,242),(1,241),(1,240),(1,239),(1,238),(1,237),(1,236),(1,235),(1,234),(1,233),(1,232),(1,231),(1,230),(1,229),(1,228),(1,227),(1,226),(1,225),(1,224),(1,223),(1,222),(1,221),(1,220),(1,219),(1,218),(1,217),(1,216),(1,215),(1,214),(1,213),(1,212),(1,211),(1,210),(1,209),(1,208),(1,207),(1,206),(1,205),(1,204),(1,203),(1,202),(1,201),(1,200),(1,199),(1,198),(1,197),(1,196),(1,195),(1,194),(1,193),(1,192),(1,191),(1,190),(1,189),(1,188),(1,187),(1,186),(1,185),(1,184),(1,183),(1,182),(1,181),(1,180),(1,179),(1,178),(1,177),(1,176),(1,175),(1,174),(1,173),(1,172),(1,171),(1,170),(1,169),(1,168),(1,167),(1,166),(1,165),(1,164),(1,163),(1,162),(1,161),(1,160),(1,159),(1,158),(1,157),(1,156),(1,155),(1,154),(1,153),(1,152),(1,151),(1,150),(1,149),(1,148),(1,147),(1,146),(1,145),(1,144),(1,143),(1,142),(1,141),(1,140),(1,139),(1,138),(1,137),(1,136),(1,135),(1,134),(1,133),(1,132),(1,131),(1,130),(1,129),(1,128),(2,255),(1,127),(2,253),(1,126),(2,251),(1,125),(2,249),(1,124),(2,247),(1,123),(2,245),(1,122),(2,243),(1,121),(2,241),(1,120),(2,239),(1,119),(2,237),(1,118),(2,235),(1,117),(2,233),(1,116),(2,231),(1,115),(2,229),(1,114),(2,227),(1,113),(2,225),(1,112),(2,223),(1,111),(2,221),(1,110),(2,219),(1,109),(2,217),(1,108),(2,215),(1,107),(2,213),(1,106),(2,211),(1,105),(2,209),(1,104),(2,207),(1,103),(2,205),(1,102),(2,203),(1,101),(2,201),(1,100),(2,199),(1,99),(2,197),(1,98),(2,195),(1,97),(2,193),(1,96),(2,191),(1,95),(2,189),(1,94),(2,187),(1,93),(2,185),(1,92),(2,183),(1,91),(2,181),(1,90),(2,179),(1,89),(2,177),(1,88),(2,175),(1,87),(2,173),(1,86),(2,171),(3,256),(1,85),(3,254),(2,169),(3,253),(1,84),(3,251),(2,167),(3,250),(1,83),(3,248),(2,165),(3,247),(1,82),(3,245),(2,163),(3,244),(1,81),(3,242),(2,161),(3,241),(1,80),(3,239),(2,159),(3,238),(1,79),(3,236),(2,157),(3,235),(1,78),(3,233),(2,155),(3,232),(1,77),(3,230),(2,153),(3,229),(1,76),(3,227),(2,151),(3,226),(1,75),(3,224),(2,149),(3,223),(1,74),(3,221),(2,147),(3,220),(1,73),(3,218),(2,145),(3,217),(1,72),(3,215),(2,143),(3,214),(1,71),(3,212),(2,141),(3,211),(1,70),(3,209),(2,139),(3,208),(1,69),(3,206),(2,137),(3,205),(1,68),(3,203),(2,135),(3,202),(1,67),(3,200),(2,133),(3,199),(1,66),(3,197),(2,131),(3,196),(1,65),(3,194),(2,129),(3,193),(1,64),(4,255),(3,191),(2,127),(3,190),(4,253),(1,63),(4,251),(3,188),(2,125),(3,187),(4,249),(1,62),(4,247),(3,185),(2,123),(3,184),(4,245),(1,61),(4,243),(3,182),(2,121),(3,181),(4,241),(1,60),(4,239),(3,179),(2,119),(3,178),(4,237),(1,59),(4,235),(3,176),(2,117),(3,175),(4,233),(1,58),(4,231),(3,173),(2,115),(3,172),(4,229),(1,57),(4,227),(3,170),(2,113),(3,169),(4,225),(1,56),(4,223),(3,167),(2,111),(3,166),(4,221),(1,55),(4,219),(3,164),(2,109),(3,163),(4,217),(1,54),(4,215),(3,161),(2,107),(3,160),(4,213),(1,53),(4,211),(3,158),(2,105),(3,157),(4,209),(1,52),(4,207),(3,155),(2,103),(3,154),(4,205),(5,256),(1,51),(5,254),(4,203),(3,152),(5,253),(2,101),(5,252),(3,151),(4,201),(5,251),(1,50),(5,249),(4,199),(3,149),(5,248),(2,99),(5,247),(3,148),(4,197),(5,246),(1,49),(5,244),(4,195),(3,146),(5,243),(2,97),(5,242),(3,145),(4,193),(5,241),(1,48),(5,239),(4,191),(3,143),(5,238),(2,95),(5,237),(3,142),(4,189),(5,236),(1,47),(5,234),(4,187),(3,140),(5,233),(2,93),(5,232),(3,139),(4,185),(5,231),(1,46),(5,229),(4,183),(3,137),(5,228),(2,91),(5,227),(3,136),(4,181),(5,226),(1,45),(5,224),(4,179),(3,134),(5,223),(2,89),(5,222),(3,133),(4,177),(5,221),(1,44),(5,219),(4,175),(3,131),(5,218),(2,87),(5,217),(3,130),(4,173),(5,216),(1,43),(5,214),(4,171),(3,128),(5,213),(2,85),(5,212),(3,127),(4,169),(5,211),(6,253),(1,42),(6,251),(5,209),(4,167),(3,125),(5,208),(2,83),(5,207),(3,124),(4,165),(5,206),(6,247),(1,41),(6,245),(5,204),(4,163),(3,122),(5,203),(2,81),(5,202),(3,121),(4,161),(5,201),(6,241),(1,40),(6,239),(5,199),(4,159),(3,119),(5,198),(2,79),(5,197),(3,118),(4,157),(5,196),(6,235),(1,39),(6,233),(5,194),(4,155),(3,116),(5,193),(2,77),(5,192),(3,115),(4,153),(5,191),(6,229),(1,38),(6,227),(5,189),(4,151),(3,113),(5,188),(2,75),(5,187),(3,112),(4,149),(5,186),(6,223),(1,37),(6,221),(5,184),(4,147),(3,110),(5,183),(7,256),(2,73),(7,255),(5,182),(3,109),(7,254),(4,145),(5,181),(6,217),(7,253),(1,36),(7,251),(6,215),(5,179),(4,143),(7,250),(3,107),(5,178),(7,249),(2,71),(7,248),(5,177),(3,106),(7,247),(4,141),(5,176),(6,211),(7,246),(1,35),(7,244),(6,209),(5,174),(4,139),(7,243),(3,104),(5,173),(7,242),(2,69),(7,241),(5,172),(3,103),(7,240),(4,137),(5,171),(6,205),(7,239),(1,34),(7,237),(6,203),(5,169),(4,135),(7,236),(3,101),(5,168),(7,235),(2,67),(7,234),(5,167),(3,100),(7,233),(4,133),(5,166),(6,199),(7,232),(1,33),(7,230),(6,197),(5,164),(4,131),(7,229),(3,98),(5,163),(7,228),(2,65),(7,227),(5,162),(3,97),(7,226),(4,129),(5,161),(6,193),(7,225),(1,32),(8,255),(7,223),(6,191),(5,159),(4,127),(7,222),(3,95),(8,253),(5,158),(7,221),(2,63),(7,220),(5,157),(8,251),(3,94),(7,219),(4,125),(5,156),(6,187),(7,218),(8,249),(1,31),(8,247),(7,216),(6,185),(5,154),(4,123),(7,215),(3,92),(8,245),(5,153),(7,214),(2,61),(7,213),(5,152),(8,243),(3,91),(7,212),(4,121),(5,151),(6,181),(7,211),(8,241),(1,30),(8,239),(7,209),(6,179),(5,149),(4,119),(7,208),(3,89),(8,237),(5,148),(7,207),(2,59),(7,206),(5,147),(8,235),(3,88),(7,205),(4,117),(5,146),(6,175),(7,204),(8,233),(1,29),(8,231),(7,202),(6,173),(5,144),(4,115),(7,201),(3,86),(8,229),(5,143),(7,200),(2,57),(9,256),(7,199),(5,142),(8,227),(3,85),(7,198),(4,113),(9,254),(5,141),(6,169),(7,197),(8,225),(9,253),(1,28),(9,251),(8,223),(7,195),(6,167),(5,139),(9,250),(4,111),(7,194),(3,83),(8,221),(5,138),(7,193),(9,248),(2,55),(9,247),(7,192),(5,137),(8,219),(3,82),(7,191),(4,109),(9,245),(5,136),(6,163),(7,190),(8,217),(9,244),(1,27),(9,242),(8,215),(7,188),(6,161),(5,134),(9,241),(4,107),(7,187),(3,80),(8,213),(5,133),(7,186),(9,239),(2,53),(9,238),(7,185),(5,132),(8,211),(3,79),(7,184),(4,105),(9,236),(5,131),(6,157),(7,183),(8,209),(9,235),(1,26),(9,233),(8,207),(7,181),(6,155),(5,129),(9,232),(4,103),(7,180),(3,77),(8,205),(5,128),(7,179),(9,230),(2,51),(9,229),(7,178),(5,127),(8,203),(3,76),(10,253),(7,177),(4,101),(9,227),(5,126),(6,151),(7,176),(8,201),(9,226),(10,251),(1,25),(10,249),(9,224),(8,199),(7,174),(6,149),(5,124),(9,223),(4,99),(7,173),(10,247),(3,74),(8,197),(5,123),(7,172),(9,221),(2,49),(9,220),(7,171),(5,122),(8,195),(3,73),(10,243),(7,170),(4,97),(9,218),(5,121),(6,145),(7,169),(8,193),(9,217),(10,241),(1,24),(10,239),(9,215),(8,191),(7,167),(6,143),(5,119),(9,214),(4,95),(7,166),(10,237),(3,71),(8,189),(5,118),(7,165),(9,212),(2,47),(9,211),(7,164),(5,117),(8,187),(3,70),(10,233),(7,163),(11,256),(4,93),(9,209),(5,116),(11,255),(6,139),(7,162),(8,185),(9,208),(10,231),(11,254),(1,23),(11,252),(10,229),(9,206),(8,183),(7,160),(6,137),(11,251),(5,114),(9,205),(4,91),(11,250),(7,159),(10,227),(3,68),(11,249),(8,181),(5,113),(7,158),(9,203),(11,248),(2,45),(11,247),(9,202),(7,157),(5,112),(8,179),(11,246),(3,67),(10,223),(7,156),(11,245),(4,89),(9,200),(5,111),(11,244),(6,133),(7,155),(8,177),(9,199),(10,221),(11,243),(1,22),(11,241),(10,219),(9,197),(8,175),(7,153),(6,131),(11,240),(5,109),(9,196),(4,87),(11,239),(7,152),(10,217),(3,65),(11,238),(8,173),(5,108),(7,151),(9,194),(11,237),(2,43),(11,236),(9,193),(7,150),(5,107),(8,171),(11,235),(3,64),(10,213),(7,149),(11,234),(4,85),(9,191),(5,106),(11,233),(6,127),(7,148),(8,169),(9,190),(10,211),(11,232),(12,253),(1,21),(12,251),(11,230),(10,209),(9,188),(8,167),(7,146),(6,125),(11,229),(5,104),(9,187),(4,83),(11,228),(7,145),(10,207),(3,62),(11,227),(8,165),(5,103),(12,247),(7,144),(9,185),(11,226),(2,41),(11,225),(9,184),(7,143),(12,245),(5,102),(8,163),(11,224),(3,61),(10,203),(7,142),(11,223),(4,81),(9,182),(5,101),(11,222),(6,121),(7,141),(8,161),(9,181),(10,201),(11,221),(12,241),(1,20),(12,239),(11,219),(10,199),(9,179),(8,159),(7,139),(6,119),(11,218),(5,99),(9,178),(4,79),(11,217),(7,138),(10,197),(13,256),(3,59),(11,216),(8,157),(13,255),(5,98),(12,235),(7,137),(9,176),(11,215),(13,254),(2,39),(13,253),(11,214),(9,175),(7,136),(12,233),(5,97),(13,252),(8,155),(11,213),(3,58),(13,251),(10,193),(7,135),(11,212),(4,77),(13,250),(9,173),(5,96),(11,211),(6,115),(13,249),(7,134),(8,153),(9,172),(10,191),(11,210),(12,229),(13,248),(1,19),(13,246),(12,227),(11,208),(10,189),(9,170),(8,151),(7,132),(13,245),(6,113),(11,207),(5,94),(9,169),(13,244),(4,75),(11,206),(7,131),(10,187),(13,243),(3,56),(11,205),(8,149),(13,242),(5,93),(12,223),(7,130),(9,167),(11,204),(13,241),(2,37),(13,240),(11,203),(9,166),(7,129),(12,221),(5,92),(13,239),(8,147),(11,202),(3,55),(13,238),(10,183),(7,128),(11,201),(4,73),(13,237),(9,164),(14,255),(5,91),(11,200),(6,109),(13,236),(7,127),(8,145),(9,163),(10,181),(11,199),(12,217),(13,235),(14,253),(1,18),(14,251),(13,233),(12,215),(11,197),(10,179),(9,161),(8,143),(7,125),(13,232),(6,107),(11,196),(5,89),(14,249),(9,160),(13,231),(4,71),(11,195),(7,124),(10,177),(13,230),(3,53),(14,247),(11,194),(8,141),(13,229),(5,88),(12,211),(7,123),(9,158),(11,193),(13,228),(2,35),(13,227),(11,192),(9,157),(7,122),(12,209),(5,87),(13,226),(8,139),(11,191),(14,243),(3,52),(13,225),(10,173),(7,121),(11,190),(4,69),(13,224),(9,155),(14,241),(5,86),(11,189),(6,103),(13,223),(7,120),(8,137),(9,154),(10,171),(11,188),(12,205),(13,222),(14,239),(15,256),(1,17),(15,254),(14,237),(13,220),(12,203),(11,186),(10,169),(9,152),(8,135),(15,253),(7,118),(13,219),(6,101),(11,185),(5,84),(14,235),(9,151),(13,218),(4,67),(15,251),(11,184),(7,117),(10,167),(13,217),(3,50),(14,233),(11,183),(8,133),(13,216),(5,83),(12,199),(7,116),(9,149),(11,182),(13,215),(15,248),(2,33),(15,247),(13,214),(11,181),(9,148),(7,115),(12,197),(5,82),(13,213),(8,131),(11,180),(14,229),(3,49),(13,212),(10,163),(7,114),(11,179),(15,244),(4,65),(13,211),(9,146),(14,227),(5,81),(11,178),(6,97),(13,210),(7,113),(15,242),(8,129),(9,145),(10,161),(11,177),(12,193),(13,209),(14,225),(15,241),(1,16),(16,255),(15,239),(14,223),(13,207),(12,191),(11,175),(10,159),(9,143),(8,127),(15,238),(7,111),(13,206),(6,95),(11,174),(16,253),(5,79),(14,221),(9,142),(13,205),(4,63),(15,236),(11,173),(7,110),(10,157),(13,204),(16,251),(3,47),(14,219),(11,172),(8,125),(13,203),(5,78),(12,187),(7,109),(16,249),(9,140),(11,171),(13,202),(15,233),(2,31),(15,232),(13,201),(11,170),(9,139),(16,247),(7,108),(12,185),(5,77),(13,200),(8,123),(11,169),(14,215),(3,46),(16,245),(13,199),(10,153),(7,107),(11,168),(15,229),(4,61),(13,198),(9,137),(14,213),(5,76),(16,243),(11,167),(6,91),(13,197),(7,106),(15,227),(8,121),(9,136),(10,151),(11,166),(12,181),(13,196),(14,211),(15,226),(16,241),(17,256),(1,15),(17,254),(16,239),(15,224),(14,209),(13,194),(12,179),(11,164),(10,149),(9,134),(17,253),(8,119),(15,223),(7,104),(13,193),(6,89),(17,252),(11,163),(16,237),(5,74),(14,207),(9,133),(13,192),(17,251),(4,59),(15,221),(11,162),(7,103),(17,250),(10,147),(13,191),(16,235),(3,44),(17,249),(14,205),(11,161),(8,117),(13,190),(5,73),(17,248),(12,175),(7,102),(16,233),(9,131),(11,160),(13,189),(15,218),(17,247),(2,29),(17,246),(15,217),(13,188),(11,159),(9,130),(16,231),(7,101),(12,173),(17,245),(5,72),(13,187),(8,115),(11,158),(14,201),(17,244),(3,43),(16,229),(13,186),(10,143),(17,243),(7,100),(11,157),(15,214),(4,57),(17,242),(13,185),(9,128),(14,199),(5,71),(16,227),(11,156),(17,241),(6,85),(13,184),(7,99),(15,212),(8,113),(17,240),(9,127),(10,141),(11,155),(12,169),(13,183),(14,197),(15,211),(16,225),(17,239),(18,253),(1,14),(18,251),(17,237),(16,223),(15,209),(14,195),(13,181),(12,167),(11,153),(10,139),(9,125),(17,236),(8,111),(15,208),(7,97),(13,180),(6,83),(17,235),(11,152),(16,221),(5,69),(14,193),(9,124),(13,179),(17,234),(4,55),(15,206),(11,151),(18,247),(7,96),(17,233),(10,137),(13,178),(16,219),(3,41),(17,232),(14,191),(11,150),(8,109),(13,177),(18,245),(5,68),(17,231),(12,163),(7,95),(16,217),(9,122),(11,149),(13,176),(15,203),(17,230),(2,27),(19,256),(17,229),(15,202),(13,175),(11,148),(9,121),(16,215),(7,94),(19,255),(12,161),(17,228),(5,67),(18,241),(13,174),(8,107),(19,254),(11,147),(14,187),(17,227),(3,40),(19,253),(16,213),(13,173),(10,133),(17,226),(7,93),(18,239),(11,146),(15,199),(19,252),(4,53),(17,225),(13,172),(9,119),(14,185),(19,251),(5,66),(16,211),(11,145),(17,224),(6,79),(19,250),(13,171),(7,92),(15,197),(8,105),(17,223),(9,118),(19,249),(10,131),(11,144),(12,157),(13,170),(14,183),(15,196),(16,209),(17,222),(18,235),(19,248),(1,13),(19,246),(18,233),(17,220),(16,207),(15,194),(14,181),(13,168),(12,155),(11,142),(10,129),(19,245),(9,116),(17,219),(8,103),(15,193),(7,90),(13,167),(19,244),(6,77),(17,218),(11,141),(16,205),(5,64),(19,243),(14,179),(9,115),(13,166),(17,217),(4,51),(19,242),(15,191),(11,140),(18,229),(7,89),(17,216),(10,127),(13,165),(16,203),(19,241),(3,38),(20,253),(17,215),(14,177),(11,139),(19,240),(8,101),(13,164),(18,227),(5,63),(17,214),(12,151),(19,239),(7,88),(16,201),(9,113),(20,251),(11,138),(13,163),(15,188),(17,213),(19,238),(2,25),(19,237),(17,212),(15,187),(13,162),(11,137),(20,249),(9,112),(16,199),(7,87),(19,236),(12,149),(17,211),(5,62),(18,223),(13,161),(8,99),(19,235),(11,136),(14,173),(17,210),(20,247),(3,37),(19,234),(16,197),(13,160),(10,123),(17,209),(7,86),(18,221),(11,135),(15,184),(19,233),(4,49),(17,208),(13,159),(9,110),(14,171),(19,232),(5,61),(21,256),(16,195),(11,134),(17,207),(6,73),(19,231),(13,158),(20,243),(7,85),(15,182),(8,97),(17,206),(9,109),(19,230),(10,121),(21,254),(11,133),(12,145),(13,157),(14,169),(15,181),(16,193),(17,205),(18,217),(19,229),(20,241),(21,253),(1,12),(21,251),(20,239),(19,227),(18,215),(17,203),(16,191),(15,179),(14,167),(13,155),(12,143),(11,131),(21,250),(10,119),(19,226),(9,107),(17,202),(8,95),(15,178),(7,83),(20,237),(13,154),(19,225),(6,71),(17,201),(11,130),(16,189),(21,248),(5,59),(19,224),(14,165),(9,106),(13,153),(17,200),(21,247),(4,47),(19,223),(15,176),(11,129),(18,211),(7,82),(17,199),(10,117),(13,152),(16,187),(19,222),(3,35),(20,233),(17,198),(14,163),(11,128),(19,221),(8,93),(21,244),(13,151),(18,209),(5,58),(22,255),(17,197),(12,139),(19,220),(7,81),(16,185),(9,104),(20,231),(11,127),(13,150),(15,173),(17,196),(19,219),(21,242),(2,23),(21,241),(19,218),(17,195),(15,172),(13,149),(11,126),(20,229),(9,103),(16,183),(7,80),(19,217),(12,137),(17,194),(22,251),(5,57),(18,205),(13,148),(21,239),(8,91),(19,216),(11,125),(14,159),(17,193),(20,227),(3,34),(22,249),(19,215),(16,181),(13,147),(10,113),(17,192),(7,79),(18,203),(11,124),(15,169),(19,214),(4,45),(21,236),(17,191),(13,146),(22,247),(9,101),(14,157),(19,213),(5,56),(21,235),(16,179),(11,123),(17,190),(6,67),(19,212),(13,145),(20,223),(7,78),(22,245),(15,167),(23,256),(8,89),(17,189),(9,100),(19,211),(10,111),(21,233),(11,122),(23,255),(12,133),(13,144),(14,155),(15,166),(16,177),(17,188),(18,199),(19,210),(20,221),(21,232),(22,243),(23,254),(1,11),(23,252),(22,241),(21,230),(20,219),(19,208),(18,197),(17,186),(16,175),(15,164),(14,153),(13,142),(12,131),(23,251),(11,120),(21,229),(10,109),(19,207),(9,98),(17,185),(8,87),(23,250),(15,163),(22,239),(7,76),(20,217),(13,141),(19,206),(6,65),(23,249),(17,184),(11,119),(16,173),(21,227),(5,54),(19,205),(14,151),(23,248),(9,97),(22,237),(13,140),(17,183),(21,226),(4,43),(23,247),(19,204),(15,161),(11,118),(18,193),(7,75),(17,182),(10,107),(23,246),(13,139),(16,171),(19,203),(22,235),(3,32),(23,245),(20,213),(17,181),(14,149),(11,117),(19,202),(8,85),(21,223),(13,138),(18,191),(23,244),(5,53),(22,233),(17,180),(12,127),(19,201),(7,74),(23,243),(16,169),(9,95),(20,211),(11,116),(24,253),(13,137),(15,158),(17,179),(19,200),(21,221),(23,242),(2,21),(23,241),(21,220),(19,199),(17,178),(15,157),(13,136),(24,251),(11,115),(20,209),(9,94),(16,167),(23,240),(7,73),(19,198),(12,125),(17,177),(22,229),(5,52),(23,239),(18,187),(13,135),(21,218),(8,83),(19,197),(11,114),(14,145),(17,176),(20,207),(23,238),(3,31),(22,227),(19,196),(16,165),(13,134),(23,237),(10,103),(17,175),(24,247),(7,72),(18,185),(11,113),(15,154),(19,195),(23,236),(4,41),(25,256),(21,215),(17,174),(13,133),(22,225),(9,92),(23,235),(14,143),(19,194),(24,245),(5,51),(21,214),(16,163),(11,112),(17,173),(23,234),(6,61),(25,254),(19,193),(13,132),(20,203),(7,71),(22,223),(15,152),(23,233),(8,81),(25,253),(17,172),(9,91),(19,192),(10,101),(21,212),(11,111),(23,232),(12,121),(25,252),(13,131),(14,141),(15,151),(16,161),(17,171),(18,181),(19,191),(20,201),(21,211),(22,221),(23,231),(24,241),(25,251),(1,10),(25,249),(24,239),(23,229),(22,219),(21,209),(20,199),(19,189),(18,179),(17,169),(16,159),(15,149),(14,139),(13,129),(25,248),(12,119),(23,228),(11,109),(21,208),(10,99),(19,188),(9,89),(17,168),(25,247),(8,79),(23,227),(15,148),(22,217),(7,69),(20,197),(13,128),(19,187),(25,246),(6,59),(23,226),(17,167),(11,108),(16,157),(21,206),(26,255),(5,49),(24,235),(19,186),(14,137),(23,225),(9,88),(22,215),(13,127),(17,166),(21,205),(25,244),(4,39),(23,224),(19,185),(15,146),(26,253),(11,107),(18,175),(25,243),(7,68),(24,233),(17,165),(10,97),(23,223),(13,126),(16,155),(19,184),(22,213),(25,242),(3,29),(26,251),(23,222),(20,193),(17,164),(14,135),(25,241),(11,106),(19,183),(8,77),(21,202),(13,125),(18,173),(23,221),(5,48),(22,211),(17,163),(12,115),(19,182),(26,249),(7,67),(23,220),(16,153),(25,239),(9,86),(20,191),(11,105),(24,229),(13,124),(15,143),(17,162),(19,181),(21,200),(23,219),(25,238),(2,19),(27,256),(25,237),(23,218),(21,199),(19,180),(17,161),(15,142),(13,123),(24,227),(11,104),(20,189),(9,85),(25,236),(16,151),(23,217),(7,66),(26,245),(19,179),(12,113),(17,160),(22,207),(27,254),(5,47),(23,216),(18,169),(13,122),(21,197),(8,75),(27,253),(19,178),(11,103),(25,234),(14,131),(17,159),(20,187),(23,215),(26,243),(3,28),(25,233),(22,205),(19,177),(16,149),(13,121),(23,214),(10,93),(27,251),(17,158),(24,223),(7,65),(25,232),(18,167),(11,102),(26,241),(15,139),(19,176),(23,213),(27,250),(4,37),(25,231),(21,194),(17,157),(13,120),(22,203),(9,83),(23,212),(14,129),(19,175),(24,221),(5,46),(26,239),(21,193),(16,147),(27,248),(11,101),(17,156),(23,211),(6,55),(25,229),(19,174),(13,119),(20,183),(27,247),(7,64),(22,201),(15,137),(23,210),(8,73),(25,228),(17,155),(26,237),(9,82),(28,255),(19,173),(10,91),(21,191),(11,100),(23,209),(12,109),(25,227),(13,118),(27,245),(14,127),(15,136),(16,145),(17,154),(18,163),(19,172),(20,181),(21,190),(22,199),(23,208),(24,217),(25,226),(26,235),(27,244),(28,253),(1,9),(28,251),(27,242),(26,233),(25,224),(24,215),(23,206),(22,197),(21,188),(20,179),(19,170),(18,161),(17,152),(16,143),(15,134),(14,125),(27,241),(13,116),(25,223),(12,107),(23,205),(11,98),(21,187),(10,89),(19,169),(28,249),(9,80),(26,231),(17,151),(25,222),(8,71),(23,204),(15,133),(22,195),(7,62),(27,239),(20,177),(13,115),(19,168),(25,221),(6,53),(29,256),(23,203),(17,150),(28,247),(11,97),(27,238),(16,141),(21,185),(26,229),(5,44),(29,255),(24,211),(19,167),(14,123),(23,202),(9,79),(22,193),(13,114),(17,149),(21,184),(25,219),(29,254),(4,35),(27,236),(23,201),(19,166),(15,131),(26,227),(11,96),(29,253),(18,157),(25,218),(7,61),(24,209),(17,148),(27,235),(10,87),(23,200),(13,113),(29,252),(16,139),(19,165),(22,191),(25,217),(28,243),(3,26),(29,251),(26,225),(23,199),(20,173),(17,147),(14,121),(25,216),(11,95),(19,164),(27,233),(8,69),(29,250),(21,181),(13,112),(18,155),(23,198),(28,241),(5,43),(27,232),(22,189),(17,146),(29,249),(12,103),(19,163),(26,223),(7,60),(23,197),(16,137),(25,214),(9,77),(29,248),(20,171),(11,94),(24,205),(13,111),(28,239),(15,128),(17,145),(19,162),(21,179),(23,196),(25,213),(27,230),(29,247),(2,17),(29,246),(27,229),(25,212),(23,195),(21,178),(19,161),(17,144),(15,127),(28,237),(13,110),(24,203),(11,93),(20,169),(29,245),(9,76),(25,211),(16,135),(23,194),(30,253),(7,59),(26,219),(19,160),(12,101),(29,244),(17,143),(22,185),(27,227),(5,42),(28,235),(23,193),(18,151),(13,109),(21,176),(29,243),(8,67),(27,226),(19,159),(30,251),(11,92),(25,209),(14,117),(17,142),(20,167),(23,192),(26,217),(29,242),(3,25),(28,233),(25,208),(22,183),(19,158),(16,133),(29,241),(13,108),(23,191),(10,83),(27,224),(17,141),(24,199),(7,58),(25,207),(18,149),(29,240),(11,91),(26,215),(15,124),(19,157),(23,190),(27,223),(31,256),(4,33),(29,239),(25,206),(21,173),(17,140),(30,247),(13,107),(22,181),(31,255),(9,74),(23,189),(14,115),(19,156),(24,197),(29,238),(5,41),(31,254),(26,213),(21,172),(16,131),(27,221),(11,90),(28,229),(17,139),(23,188),(29,237),(6,49),(31,253),(25,204),(19,155),(13,106),(20,163),(27,220),(7,57),(29,236),(22,179),(15,122),(23,187),(31,252),(8,65),(25,203),(17,138),(26,211),(9,73),(28,227),(19,154),(29,235),(10,81),(31,251),(21,170),(11,89),(23,186),(12,97),(25,202),(13,105),(27,218),(14,113),(29,234),(15,121),(31,250),(16,129),(17,137),(18,145),(19,153),(20,161),(21,169),(22,177),(23,185),(24,193),(25,201),(26,209),(27,217),(28,225),(29,233),(30,241),(31,249),(1,8),(32,255),(31,247),(30,239),(29,231),(28,223),(27,215),(26,207),(25,199),(24,191),(23,183),(22,175),(21,167),(20,159),(19,151),(18,143),(17,135),(16,127),(31,246),(15,119),(29,230),(14,111),(27,214),(13,103),(25,198),(12,95),(23,182),(11,87),(32,253),(21,166),(31,245),(10,79),(29,229),(19,150),(28,221),(9,71),(26,205),(17,134),(25,197),(8,63),(31,244),(23,181),(15,118),(22,173),(29,228),(7,55),(27,212),(20,157),(13,102),(32,251),(19,149),(25,196),(31,243),(6,47),(29,227),(23,180),(17,133),(28,219),(11,86),(27,211),(16,125),(21,164),(26,203),(31,242),(5,39),(29,226),(24,187),(19,148),(14,109),(23,179),(32,249),(9,70),(31,241),(22,171),(13,101),(30,233),(17,132),(21,163),(25,194),(29,225),(33,256),(4,31),(31,240),(27,209),(23,178),(19,147),(15,116),(26,201),(11,85),(29,224),(18,139),(25,193),(32,247),(7,54),(31,239),(24,185),(17,131),(27,208),(10,77),(33,254),(23,177),(13,100),(29,223),(16,123),(19,146),(22,169),(25,192),(28,215),(31,238),(3,23),(32,245),(29,222),(26,199),(23,176),(20,153),(17,130),(31,237),(14,107),(25,191),(11,84),(30,229),(19,145),(27,206),(8,61),(29,221),(21,160),(13,99),(31,236),(18,137),(23,175),(28,213),(33,251),(5,38),(32,243),(27,205),(22,167),(17,129),(29,220),(12,91),(31,235),(19,144),(26,197),(33,250),(7,53),(30,227),(23,174),(16,121),(25,189),(9,68),(29,219),(20,151),(31,234),(11,83),(24,181),(13,98),(28,211),(15,113),(32,241),(17,128),(19,143),(21,158),(23,173),(25,188),(27,203),(29,218),(31,233),(33,248),(2,15),(33,247),(31,232),(29,217),(27,202),(25,187),(23,172),(21,157),(19,142),(17,127),(32,239),(15,112),(28,209),(13,97),(24,179),(11,82),(31,231),(20,149),(29,216),(9,67),(34,253),(25,186),(16,119),(23,171),(30,223),(7,52),(33,245),(26,193),(19,141),(31,230),(12,89),(29,215),(17,126),(22,163),(27,200),(32,237),(5,37),(33,244),(28,207),(23,170),(18,133),(31,229),(13,96),(34,251),(21,155),(29,214),(8,59),(27,199),(19,140),(30,221),(11,81),(25,184),(14,103),(31,228),(17,125),(20,147),(23,169),(26,191),(29,213),(32,235),(3,22),(34,249),(31,227),(28,205),(25,183),(22,161),(19,139),(35,256),(16,117),(29,212),(13,95),(23,168),(33,241),(10,73),(27,197),(17,124),(24,175),(31,226),(7,51),(32,233),(25,182),(18,131),(29,211),(11,80),(26,189),(15,109),(34,247),(19,138),(23,167),(27,196),(31,225),(35,254),(4,29),(33,239),(29,210),(25,181),(21,152),(17,123),(30,217),(13,94),(35,253),(22,159),(31,224),(9,65),(32,231),(23,166),(14,101),(33,238),(19,137),(24,173),(29,209),(34,245),(5,36),(31,223),(26,187),(21,151),(16,115),(27,194),(11,79),(28,201),(17,122),(23,165),(29,208),(35,251),(6,43),(31,222),(25,179),(19,136),(32,229),(13,93),(33,236),(20,143),(27,193),(34,243),(7,50),(29,207),(22,157),(15,107),(23,164),(31,221),(8,57),(33,235),(25,178),(17,121),(26,185),(35,249),(9,64),(28,199),(19,135),(29,206),(10,71),(31,220),(21,149),(32,227),(11,78),(34,241),(23,163),(35,248),(12,85),(25,177),(13,92),(27,191),(14,99),(29,205),(15,106),(31,219),(16,113),(33,233),(17,120),(35,247),(18,127),(19,134),(20,141),(21,148),(22,155),(23,162),(24,169),(25,176),(26,183),(27,190),(28,197),(29,204),(30,211),(31,218),(32,225),(33,232),(34,239),(35,246),(36,253),(1,7),(36,251),(35,244),(34,237),(33,230),(32,223),(31,216),(30,209),(29,202),(28,195),(27,188),(26,181),(25,174),(24,167),(23,160),(22,153),(21,146),(20,139),(19,132),(18,125),(35,243),(17,118),(33,229),(16,111),(31,215),(15,104),(29,201),(14,97),(27,187),(13,90),(25,173),(37,256),(12,83),(35,242),(23,159),(34,235),(11,76),(32,221),(21,145),(31,214),(10,69),(29,200),(19,131),(28,193),(37,255),(9,62),(35,241),(26,179),(17,117),(25,172),(33,227),(8,55),(31,213),(23,158),(15,103),(37,254),(22,151),(29,199),(36,247),(7,48),(34,233),(27,185),(20,137),(33,226),(13,89),(32,219),(19,130),(25,171),(31,212),(37,253),(6,41),(35,239),(29,198),(23,157),(17,116),(28,191),(11,75),(27,184),(16,109),(37,252),(21,143),(26,177),(31,211),(36,245),(5,34),(34,231),(29,197),(24,163),(19,129),(33,224),(14,95),(37,251),(23,156),(32,217),(9,61),(31,210),(22,149),(35,237),(13,88),(30,203),(17,115),(21,142),(25,169),(29,196),(33,223),(37,250),(4,27),(35,236),(31,209),(27,182),(23,155),(19,128),(34,229),(15,101),(26,175),(37,249),(11,74),(29,195),(18,121),(25,168),(32,215),(7,47),(38,255),(31,208),(24,161),(17,114),(27,181),(37,248),(10,67),(33,221),(23,154),(36,241),(13,87),(29,194),(16,107),(35,234),(19,127),(22,147),(25,167),(28,187),(31,207),(34,227),(37,247),(3,20),(38,253),(35,233),(32,213),(29,193),(26,173),(23,153),(20,133),(37,246),(17,113),(31,206),(14,93),(25,166),(36,239),(11,73),(30,199),(19,126),(27,179),(35,232),(8,53),(37,245),(29,192),(21,139),(34,225),(13,86),(31,205),(18,119),(23,152),(28,185),(33,218),(38,251),(5,33),(37,244),(32,211),(27,178),(22,145),(17,112),(29,191),(12,79),(31,204),(19,125),(26,171),(33,217),(7,46),(37,243),(30,197),(23,151),(39,256),(16,105),(25,164),(34,223),(9,59),(38,249),(29,190),(20,131),(31,203),(11,72),(35,229),(24,157),(37,242),(13,85),(28,183),(15,98),(32,209),(17,111),(36,235),(19,124),(21,137),(23,150),(25,163),(27,176),(29,189),(31,202),(33,215),(35,228),(37,241),(39,254),(2,13),(39,253),(37,240),(35,227),(33,214),(31,201),(29,188),(27,175),(25,162),(23,149),(21,136),(19,123),(36,233),(17,110),(32,207),(15,97),(28,181),(13,84),(37,239),(24,155),(35,226),(11,71),(31,200),(20,129),(29,187),(38,245),(9,58),(34,219),(25,161),(16,103),(39,251),(23,148),(30,193),(37,238),(7,45),(33,212),(26,167),(19,122),(31,199),(12,77),(29,186),(17,109),(39,250),(22,141),(27,173),(32,205),(37,237),(5,32),(38,243),(33,211),(28,179),(23,147),(18,115),(31,198),(13,83),(34,217),(21,134),(29,185),(37,236),(8,51),(35,223),(27,172),(19,121),(30,191),(11,70),(36,229),(25,159),(39,248),(14,89),(31,197),(17,108),(37,235),(20,127),(23,146),(26,165),(29,184),(32,203),(35,222),(38,241),(3,19),(40,253),(37,234),(34,215),(31,196),(28,177),(25,158),(22,139),(19,120),(35,221),(16,101),(29,183),(13,82),(36,227),(23,145),(33,208),(10,63),(37,233),(27,170),(17,107),(24,151),(31,195),(38,239),(7,44),(39,245),(32,201),(25,157),(18,113),(29,182),(40,251),(11,69),(37,232),(26,163),(15,94),(34,213),(19,119),(23,144),(27,169),(31,194),(35,219),(39,244),(4,25),(41,256),(37,231),(33,206),(29,181),(25,156),(21,131),(38,237),(17,106),(30,187),(13,81),(35,218),(22,137),(31,193),(40,249),(9,56),(41,255),(32,199),(23,143),(37,230),(14,87),(33,205),(19,118),(24,149),(29,180),(34,211),(39,242),(5,31),(41,254),(36,223),(31,192),(26,161),(21,130),(37,229),(16,99),(27,167),(38,235),(11,68),(39,241),(28,173),(17,105),(40,247),(23,142),(29,179),(35,216),(41,253),(6,37),(37,228),(31,191),(25,154),(19,117),(32,197),(13,80),(33,203),(20,123),(27,166),(34,209),(41,252),(7,43),(36,221),(29,178),(22,135),(37,227),(15,92),(38,233),(23,141),(31,190),(39,239),(8,49),(41,251),(33,202),(25,153),(17,104),(26,159),(35,214),(9,55),(37,226),(28,171),(19,116),(29,177),(39,238),(10,61),(41,250),(31,189),(21,128),(32,195),(11,67),(34,207),(23,140),(35,213),(12,73),(37,225),(25,152),(38,231),(13,79),(40,243),(27,164),(41,249),(14,85),(29,176),(15,91),(31,188),(16,97),(33,200),(17,103),(35,212),(18,109),(37,224),(19,115),(39,236),(20,121),(41,248),(21,127),(22,133),(23,139),(24,145),(25,151),(26,157),(27,163),(28,169),(29,175),(30,181),(31,187),(32,193),(33,199),(34,205),(35,211),(36,217),(37,223),(38,229),(39,235),(40,241),(41,247),(42,253),(1,6),(42,251),(41,245),(40,239),(39,233),(38,227),(37,221),(36,215),(35,209),(34,203),(33,197),(32,191),(31,185),(30,179),(29,173),(28,167),(27,161),(26,155),(25,149),(24,143),(23,137),(22,131),(43,256),(21,125),(41,244),(20,119),(39,232),(19,113),(37,220),(18,107),(35,208),(17,101),(33,196),(16,95),(31,184),(15,89),(29,172),(43,255),(14,83),(41,243),(27,160),(40,237),(13,77),(38,225),(25,148),(37,219),(12,71),(35,207),(23,136),(34,201),(11,65),(43,254),(32,189),(21,124),(31,183),(41,242),(10,59),(39,230),(29,171),(19,112),(28,165),(37,218),(9,53),(35,206),(26,153),(43,253),(17,100),(42,247),(25,147),(33,194),(41,241),(8,47),(39,229),(31,182),(23,135),(38,223),(15,88),(37,217),(22,129),(29,170),(36,211),(43,252),(7,41),(41,240),(34,199),(27,158),(20,117),(33,193),(13,76),(32,187),(19,111),(25,146),(31,181),(37,216),(43,251),(6,35),(41,239),(35,204),(29,169),(23,134),(40,233),(17,99),(28,163),(39,227),(11,64),(38,221),(27,157),(43,250),(16,93),(37,215),(21,122),(26,151),(31,180),(36,209),(41,238),(5,29),(44,255),(39,226),(34,197),(29,168),(24,139),(43,249),(19,110),(33,191),(14,81),(37,214),(23,133),(32,185),(41,237),(9,52),(40,231),(31,179),(22,127),(35,202),(13,75),(43,248),(30,173),(17,98),(38,219),(21,121),(25,144),(29,167),(33,190),(37,213),(41,236),(4,23),(43,247),(39,224),(35,201),(31,178),(27,155),(23,132),(42,241),(19,109),(34,195),(15,86),(41,235),(26,149),(37,212),(11,63),(40,229),(29,166),(18,103),(43,246),(25,143),(32,183),(39,223),(7,40),(38,217),(31,177),(24,137),(41,234),(17,97),(44,251),(27,154),(37,211),(10,57),(43,245),(33,188),(23,131),(36,205),(13,74),(42,239),(29,165),(45,256),(16,91),(35,199),(19,108),(41,233),(22,125),(25,142),(28,159),(31,176),(34,193),(37,210),(40,227),(43,244),(3,17),(44,249),(41,232),(38,215),(35,198),(32,181),(29,164),(26,147),(23,130),(43,243),(20,113),(37,209),(17,96),(31,175),(45,254),(14,79),(39,220),(25,141),(36,203),(11,62),(41,231),(30,169),(19,107),(27,152),(35,197),(43,242),(8,45),(45,253),(37,208),(29,163),(21,118),(34,191),(13,73),(44,247),(31,174),(18,101),(41,230),(23,129),(28,157),(33,185),(38,213),(43,241),(5,28),(42,235),(37,207),(32,179),(27,151),(22,123),(39,218),(17,95),(29,162),(41,229),(12,67),(43,240),(31,173),(19,106),(45,251),(26,145),(33,184),(40,223),(7,39),(44,245),(37,206),(30,167),(23,128),(39,217),(16,89),(41,228),(25,139),(34,189),(43,239),(9,50),(38,211),(29,161),(20,111),(31,172),(42,233),(11,61),(46,255),(35,194),(24,133),(37,205),(13,72),(41,227),(28,155),(43,238),(15,83),(32,177),(17,94),(36,199),(19,105),(40,221),(21,116),(44,243),(23,127),(25,138),(27,149),(29,160),(31,171),(33,182),(35,193),(37,204),(39,215),(41,226),(43,237),(45,248),(2,11),(45,247),(43,236),(41,225),(39,214),(37,203),(35,192),(33,181),(31,170),(29,159),(27,148),(25,137),(23,126),(44,241),(21,115),(40,219),(19,104),(36,197),(17,93),(32,175),(15,82),(43,235),(28,153),(41,224),(13,71),(37,202),(24,131),(35,191),(46,251),(11,60),(42,229),(31,169),(20,109),(29,158),(38,207),(47,256),(9,49),(43,234),(34,185),(25,136),(41,223),(16,87),(39,212),(23,125),(30,163),(37,201),(44,239),(7,38),(47,255),(40,217),(33,179),(26,141),(45,244),(19,103),(31,168),(43,233),(12,65),(41,222),(29,157),(46,249),(17,92),(39,211),(22,119),(27,146),(32,173),(37,200),(42,227),(47,254),(5,27),(43,232),(38,205),(33,178),(28,151),(23,124),(41,221),(18,97),(31,167),(44,237),(13,70),(47,253),(34,183),(21,113),(29,156),(37,199),(45,242),(8,43),(43,231),(35,188),(27,145),(46,247),(19,102),(30,161),(41,220),(11,59),(47,252),(36,193),(25,134),(39,209),(14,75),(45,241),(31,166),(17,91),(37,198),(20,107),(43,230),(23,123),(26,139),(29,155),(32,171),(35,187),(38,203),(41,219),(44,235),(47,251),(3,16),(46,245),(43,229),(40,213),(37,197),(34,181),(31,165),(28,149),(25,133),(47,250),(22,117),(41,218),(19,101),(35,186),(16,85),(45,239),(29,154),(42,223),(13,69),(36,191),(23,122),(33,175),(43,228),(10,53),(47,249),(37,196),(27,143),(44,233),(17,90),(41,217),(24,127),(31,164),(38,201),(45,238),(7,37),(46,243),(39,206),(32,169),(25,132),(43,227),(18,95),(47,248),(29,153),(40,211),(11,58),(48,253),(37,195),(26,137),(41,216),(15,79),(34,179),(19,100),(42,221),(23,121),(27,142),(31,163),(35,184),(39,205),(43,226),(47,247),(4,21),(45,236),(41,215),(37,194),(33,173),(29,152),(25,131),(46,241),(21,110),(38,199),(17,89),(47,246),(30,157),(43,225),(13,68),(48,251),(35,183),(22,115),(31,162),(40,209),(49,256),(9,47),(41,214),(32,167),(23,120),(37,193),(14,73),(47,245),(33,172),(19,99),(43,224),(24,125),(29,151),(34,177),(39,203),(44,229),(49,255),(5,26),(46,239),(41,213),(36,187),(31,161),(26,135),(47,244),(21,109),(37,192),(16,83),(43,223),(27,140),(38,197),(49,254),(11,57),(39,202),(28,145),(45,233),(17,88),(40,207),(23,119),(29,150),(35,181),(41,212),(47,243),(6,31),(49,253),(43,222),(37,191),(31,160),(25,129),(44,227),(19,98),(32,165),(45,232),(13,67),(46,237),(33,170),(20,103),(47,242),(27,139),(34,175),(41,211),(48,247),(7,36),(43,221),(36,185),(29,149),(22,113),(37,190),(15,77),(38,195),(23,118),(31,159),(39,200),(47,241),(8,41),(49,251),(41,210),(33,169),(25,128),(42,215),(17,87),(43,220),(26,133),(35,179),(44,225),(9,46),(46,235),(37,189),(28,143),(47,240),(19,97),(48,245),(29,148),(39,199),(49,250),(10,51),(41,209),(31,158),(21,107),(32,163),(43,219),(11,56),(45,229),(34,173),(23,117),(35,178),(47,239),(12,61),(49,249),(37,188),(25,127),(38,193),(13,66),(40,203),(27,137),(41,208),(14,71),(43,218),(29,147),(44,223),(15,76),(46,233),(31,157),(47,238),(16,81),(49,248),(33,167),(50,253),(17,86),(35,177),(18,91),(37,187),(19,96),(39,197),(20,101),(41,207),(21,106),(43,217),(22,111),(45,227),(23,116),(47,237),(24,121),(49,247),(25,126),(26,131),(27,136),(28,141),(29,146),(30,151),(31,156),(32,161),(33,166),(34,171),(35,176),(36,181),(37,186),(38,191),(39,196),(40,201),(41,206),(42,211),(43,216),(44,221),(45,226),(46,231),(47,236),(48,241),(49,246),(50,251),(51,256),(1,5),(51,254),(50,249),(49,244),(48,239),(47,234),(46,229),(45,224),(44,219),(43,214),(42,209),(41,204),(40,199),(39,194),(38,189),(37,184),(36,179),(35,174),(34,169),(33,164),(32,159),(31,154),(30,149),(29,144),(28,139),(27,134),(26,129),(51,253),(25,124),(49,243),(24,119),(47,233),(23,114),(45,223),(22,109),(43,213),(21,104),(41,203),(20,99),(39,193),(19,94),(37,183),(18,89),(35,173),(17,84),(50,247),(33,163),(49,242),(16,79),(47,232),(31,153),(46,227),(15,74),(44,217),(29,143),(43,212),(14,69),(41,202),(27,133),(40,197),(13,64),(51,251),(38,187),(25,123),(37,182),(49,241),(12,59),(47,231),(35,172),(23,113),(34,167),(45,221),(11,54),(43,211),(32,157),(21,103),(52,255),(31,152),(41,201),(51,250),(10,49),(49,240),(39,191),(29,142),(48,235),(19,93),(47,230),(28,137),(37,181),(46,225),(9,44),(44,215),(35,171),(26,127),(43,210),(17,83),(42,205),(25,122),(33,161),(41,200),(49,239),(8,39),(47,229),(39,190),(31,151),(23,112),(38,185),(15,73),(52,253),(37,180),(22,107),(51,248),(29,141),(36,175),(43,209),(50,243),(7,34),(48,233),(41,199),(34,165),(27,131),(47,228),(20,97),(33,160),(46,223),(13,63),(45,218),(32,155),(51,247),(19,92),(44,213),(25,121),(31,150),(37,179),(43,208),(49,237),(6,29),(53,256),(47,227),(41,198),(35,169),(29,140),(52,251),(23,111),(40,193),(17,82),(45,217),(28,135),(39,188),(50,241),(11,53),(49,236),(38,183),(27,130),(43,207),(16,77),(53,255),(37,178),(21,101),(47,226),(26,125),(31,149),(36,173),(41,197),(46,221),(51,245),(5,24),(49,235),(44,211),(39,187),(34,163),(29,139),(53,254),(24,115),(43,206),(19,91),(52,249),(33,158),(47,225),(14,67),(51,244),(37,177),(23,110),(32,153),(41,196),(50,239),(9,43),(49,234),(40,191),(31,148),(53,253),(22,105),(35,167),(48,229),(13,62),(43,205),(30,143),(47,224),(17,81),(38,181),(21,100),(46,219),(25,119),(29,138),(33,157),(37,176),(41,195),(45,214),(49,233),(53,252),(4,19),(51,242),(47,223),(43,204),(39,185),(35,166),(31,147),(27,128),(50,237),(23,109),(42,199),(19,90),(53,251),(34,161),(49,232),(15,71),(41,194),(26,123),(37,175),(48,227),(11,52),(51,241),(40,189),(29,137),(47,222),(18,85),(43,203),(25,118),(32,151),(39,184),(46,217),(53,250),(7,33),(52,245),(45,212),(38,179),(31,146),(24,113),(41,193),(17,80),(44,207),(27,127),(37,174),(47,221),(10,47),(53,249),(43,202),(33,155),(23,108),(36,169),(49,230),(13,61),(42,197),(29,136),(45,211),(16,75),(51,239),(35,164),(54,253),(19,89),(41,192),(22,103),(47,220),(25,117),(53,248),(28,131),(31,145),(34,159),(37,173),(40,187),(43,201),(46,215),(49,229),(52,243),(3,14),(53,247),(50,233),(47,219),(44,205),(41,191),(38,177),(35,163),(32,149),(29,135),(55,256),(26,121),(49,228),(23,107),(43,200),(20,93),(37,172),(54,251),(17,79),(48,223),(31,144),(45,209),(14,65),(53,246),(39,181),(25,116),(36,167),(47,218),(11,51),(52,241),(41,190),(30,139),(49,227),(19,88),(46,213),(27,125),(35,162),(43,199),(51,236),(8,37),(53,245),(45,208),(37,171),(29,134),(50,231),(21,97),(55,254),(34,157),(47,217),(13,60),(44,203),(31,143),(49,226),(18,83),(41,189),(23,106),(51,235),(28,129),(33,152),(38,175),(43,198),(48,221),(53,244),(5,23),(52,239),(47,216),(42,193),(37,170),(32,147),(27,124),(49,225),(22,101),(39,179),(17,78),(46,211),(29,133),(41,188),(53,243),(12,55),(55,252),(43,197),(31,142),(50,229),(19,87),(45,206),(26,119),(33,151),(40,183),(47,215),(54,247),(7,32),(51,233),(44,201),(37,169),(30,137),(53,242),(23,105),(39,178),(55,251),(16,73),(41,187),(25,114),(34,155),(43,196),(52,237),(9,41),(56,255),(47,214),(38,173),(29,132),(49,223),(20,91),(51,232),(31,141),(42,191),(53,241),(11,50),(46,209),(35,159),(24,109),(37,168),(50,227),(13,59),(54,245),(41,186),(28,127),(43,195),(15,68),(47,213),(32,145),(49,222),(17,77),(53,240),(36,163),(55,249),(19,86),(40,181),(21,95),(44,199),(23,104),(48,217),(25,113),(52,235),(27,122),(56,253),(29,131),(31,140),(33,149),(35,158),(37,167),(39,176),(41,185),(43,194),(45,203),(47,212),(49,221),(51,230),(53,239),(55,248),(2,9),(57,256),(55,247),(53,238),(51,229),(49,220),(47,211),(45,202),(43,193),(41,184),(39,175),(37,166),(35,157),(33,148),(31,139),(29,130),(56,251),(27,121),(52,233),(25,112),(48,215),(23,103),(44,197),(21,94),(40,179),(19,85),(55,246),(36,161),(53,237),(17,76),(49,219),(32,143),(47,210),(15,67),(43,192),(28,125),(41,183),(54,241),(13,58),(50,223),(37,165),(24,107),(35,156),(46,205),(57,254),(11,49),(53,236),(42,187),(31,138),(51,227),(20,89),(49,218),(29,129),(38,169),(47,209),(56,249),(9,40),(52,231),(43,191),(34,151),(25,111),(41,182),(57,253),(16,71),(55,244),(39,173),(23,102),(53,235),(30,133),(37,164),(44,195),(51,226),(7,31),(54,239),(47,208),(40,177),(33,146),(26,115),(45,199),(19,84),(50,221),(31,137),(43,190),(55,243),(12,53),(53,234),(41,181),(29,128),(46,203),(17,75),(56,247),(39,172),(22,97),(49,216),(27,119),(32,141),(37,163),(42,185),(47,207),(52,229),(57,251),(5,22),(58,255),(53,233),(48,211),(43,189),(38,167),(33,145),(28,123),(51,224),(23,101),(41,180),(18,79),(49,215),(31,136),(44,193),(57,250),(13,57),(47,206),(34,149),(55,241),(21,92),(50,219),(29,127),(37,162),(45,197),(53,232),(8,35),(51,223),(43,188),(35,153),(27,118),(46,201),(19,83),(49,214),(30,131),(41,179),(52,227),(11,48),(58,253),(47,205),(36,157),(25,109),(39,170),(53,231),(14,61),(45,196),(31,135),(48,209),(17,74),(54,235),(37,161),(57,248),(20,87),(43,187),(23,100),(49,213),(26,113),(55,239),(29,126),(32,139),(35,152),(38,165),(41,178),(44,191),(47,204),(50,217),(53,230),(56,243),(59,256),(3,13),(58,251),(55,238),(52,225),(49,212),(46,199),(43,186),(40,173),(37,160),(34,147),(31,134),(59,255),(28,121),(53,229),(25,108),(47,203),(22,95),(41,177),(19,82),(54,233),(35,151),(51,220),(16,69),(45,194),(29,125),(42,181),(55,237),(13,56),(49,211),(36,155),(59,254),(23,99),(56,241),(33,142),(43,185),(53,228),(10,43),(57,245),(47,202),(37,159),(27,116),(44,189),(17,73),(58,249),(41,176),(24,103),(55,236),(31,133),(38,163),(45,193),(52,223),(59,253),(7,30),(53,227),(46,197),(39,167),(32,137),(57,244),(25,107),(43,184),(18,77),(47,201),(29,124),(40,171),(51,218),(11,47),(59,252),(48,205),(37,158),(26,111),(41,175),(56,239),(15,64),(49,209),(34,145),(53,226),(19,81),(42,179),(23,98),(50,213),(27,115),(58,247),(31,132),(35,149),(39,166),(43,183),(47,200),(51,217),(55,234),(59,251),(4,17),(57,242),(53,225),(49,208),(45,191),(41,174),(37,157),(33,140),(29,123),(54,229),(25,106),(46,195),(21,89),(59,250),(38,161),(55,233),(17,72),(47,199),(30,127),(43,182),(56,237),(13,55),(48,203),(35,148),(57,241),(22,93),(53,224),(31,131),(40,169),(49,207),(58,245),(9,38),(59,249),(50,211),(41,173),(32,135),(55,232),(23,97),(60,253),(37,156),(51,215),(14,59),(47,198),(33,139),(52,219),(19,80),(43,181),(24,101),(53,223),(29,122),(34,143),(39,164),(44,185),(49,206),(54,227),(59,248),(5,21),(61,256),(56,235),(51,214),(46,193),(41,172),(36,151),(31,130),(57,239),(26,109),(47,197),(21,88),(58,243),(37,155),(53,222),(16,67),(59,247),(43,180),(27,113),(38,159),(49,205),(60,251),(11,46),(61,255),(50,209),(39,163),(28,117),(45,188),(17,71),(57,238),(40,167),(23,96),(52,217),(29,121),(35,146),(41,171),(47,196),(53,221),(59,246),(6,25),(61,254),(55,229),(49,204),(43,179),(37,154),(31,129),(56,233),(25,104),(44,183),(19,79),(51,212),(32,133),(45,187),(58,241),(13,54),(59,245),(46,191),(33,137),(53,220),(20,83),(47,195),(27,112),(61,253),(34,141),(41,170),(48,199),(55,228),(7,29),(57,236),(50,207),(43,178),(36,149),(29,120),(51,211),(22,91),(59,244),(37,153),(52,215),(15,62),(53,219),(38,157),(61,252),(23,95),(54,223),(31,128),(39,161),(47,194),(55,227),(8,33),(57,235),(49,202),(41,169),(33,136),(58,239),(25,103),(42,173),(59,243),(17,70),(60,247),(43,177),(26,107),(61,251),(35,144),(44,181),(53,218),(62,255),(9,37),(55,226),(46,189),(37,152),(28,115),(47,193),(19,78),(48,197),(29,119),(39,160),(49,201),(59,242),(10,41),(61,250),(51,209),(41,168),(31,127),(52,213),(21,86),(53,217),(32,131),(43,176),(54,221),(11,45),(56,229),(45,184),(34,139),(57,233),(23,94),(58,237),(35,143),(47,192),(59,241),(12,49),(61,249),(49,200),(37,151),(62,253),(25,102),(38,155),(51,208),(13,53),(53,216),(40,163),(27,110),(41,167),(55,224),(14,57),(57,232),(43,175),(29,118),(44,179),(59,240),(15,61),(61,248),(46,187),(31,126),(47,191),(63,256),(16,65),(49,199),(33,134),(50,203),(17,69),(52,211),(35,142),(53,215),(18,73),(55,223),(37,150),(56,227),(19,77),(58,235),(39,158),(59,239),(20,81),(61,247),(41,166),(62,251),(21,85),(43,174),(22,89),(45,182),(23,93),(47,190),(24,97),(49,198),(25,101),(51,206),(26,105),(53,214),(27,109),(55,222),(28,113),(57,230),(29,117),(59,238),(30,121),(61,246),(31,125),(63,254),(32,129),(33,133),(34,137),(35,141),(36,145),(37,149),(38,153),(39,157),(40,161),(41,165),(42,169),(43,173),(44,177),(45,181),(46,185),(47,189),(48,193),(49,197),(50,201),(51,205),(52,209),(53,213),(54,217),(55,221),(56,225),(57,229),(58,233),(59,237),(60,241),(61,245),(62,249),(63,253),(1,4),(64,255),(63,251),(62,247),(61,243),(60,239),(59,235),(58,231),(57,227),(56,223),(55,219),(54,215),(53,211),(52,207),(51,203),(50,199),(49,195),(48,191),(47,187),(46,183),(45,179),(44,175),(43,171),(42,167),(41,163),(40,159),(39,155),(38,151),(37,147),(36,143),(35,139),(34,135),(33,131),(32,127),(63,250),(31,123),(61,242),(30,119),(59,234),(29,115),(57,226),(28,111),(55,218),(27,107),(53,210),(26,103),(51,202),(25,99),(49,194),(24,95),(47,186),(23,91),(45,178),(22,87),(43,170),(64,253),(21,83),(62,245),(41,162),(61,241),(20,79),(59,233),(39,154),(58,229),(19,75),(56,221),(37,146),(55,217),(18,71),(53,209),(35,138),(52,205),(17,67),(50,197),(33,130),(49,193),(65,256),(16,63),(63,248),(47,185),(31,122),(46,181),(61,240),(15,59),(59,232),(44,173),(29,114),(43,169),(57,224),(14,55),(55,216),(41,161),(27,106),(40,157),(53,208),(13,51),(64,251),(51,200),(38,149),(63,247),(25,98),(62,243),(37,145),(49,192),(61,239),(12,47),(59,231),(47,184),(35,137),(58,227),(23,90),(57,223),(34,133),(45,176),(56,219),(11,43),(65,254),(54,211),(43,168),(32,125),(53,207),(21,82),(52,203),(31,121),(41,160),(51,199),(61,238),(10,39),(59,230),(49,191),(39,152),(29,113),(48,187),(19,74),(47,183),(28,109),(65,253),(37,144),(46,179),(55,214),(64,249),(9,35),(62,241),(53,206),(44,171),(35,136),(61,237),(26,101),(43,167),(60,233),(17,66),(59,229),(42,163),(25,97),(58,225),(33,128),(41,159),(49,190),(57,221),(65,252),(8,31),(63,244),(55,213),(47,182),(39,151),(31,120),(54,209),(23,89),(61,236),(38,147),(53,205),(15,58),(52,201),(37,143),(59,228),(22,85),(51,197),(29,112),(65,251),(36,139),(43,166),(50,193),(57,220),(64,247),(7,27),(62,239),(55,212),(48,185),(41,158),(34,131),(61,235),(27,104),(47,181),(20,77),(53,204),(33,127),(46,177),(59,227),(13,50),(58,223),(45,173),(32,123),(51,196),(19,73),(63,242),(44,169),(25,96),(56,215),(31,119),(37,142),(43,165),(49,188),(55,211),(61,234),(6,23),(65,249),(59,226),(53,203),(47,180),(41,157),(35,134),(64,245),(29,111),(52,199),(23,88),(63,241),(40,153),(57,218),(17,65),(62,237),(45,172),(28,107),(67,256),(39,149),(50,191),(61,233),(11,42),(60,229),(49,187),(38,145),(65,248),(27,103),(43,164),(59,225),(16,61),(53,202),(37,141),(58,221),(21,80),(47,179),(26,99),(57,217),(31,118),(67,255),(36,137),(41,156),(46,175),(51,194),(56,213),(61,232),(66,251),(5,19),(64,243),(59,224),(54,205),(49,186),(44,167),(39,148),(34,129),(63,239),(29,110),(53,201),(24,91),(67,254),(43,163),(62,235),(19,72),(52,197),(33,125),(47,178),(61,231),(14,53),(65,246),(51,193),(37,140),(60,227),(23,87),(55,208),(32,121),(41,155),(50,189),(59,223),(9,34),(67,253),(58,219),(49,185),(40,151),(31,117),(53,200),(22,83),(57,215),(35,132),(48,181),(61,230),(13,49),(56,211),(43,162),(30,113),(47,177),(64,241),(17,64),(55,207),(38,143),(59,222),(21,79),(67,252),(46,173),(25,94),(54,203),(29,109),(62,233),(33,124),(37,139),(41,154),(45,169),(49,184),(53,199),(57,214),(61,229),(65,244),(4,15),(67,251),(63,236),(59,221),(55,206),(51,191),(47,176),(43,161),(39,146),(35,131),(66,247),(31,116),(58,217),(27,101),(50,187),(23,86),(65,243),(42,157),(61,228),(19,71),(53,198),(34,127),(49,183),(64,239),(15,56),(56,209),(41,153),(67,250),(26,97),(63,235),(37,138),(48,179),(59,220),(11,41),(62,231),(51,190),(40,149),(29,108),(47,175),(65,242),(18,67),(61,227),(43,160),(68,253),(25,93),(57,212),(32,119),(39,145),(46,171),(53,197),(60,223),(67,249),(7,26),(66,245),(59,219),(52,193),(45,167),(38,141),(69,256),(31,115),(55,204),(24,89),(65,241),(41,152),(58,215),(17,63),(61,226),(44,163),(27,100),(64,237),(37,137),(47,174),(57,211),(67,248),(10,37),(63,233),(53,196),(43,159),(33,122),(56,207),(23,85),(59,218),(36,133),(49,181),(62,229),(13,48),(68,251),(55,203),(42,155),(29,107),(45,166),(61,225),(16,59),(67,247),(51,188),(35,129),(54,199),(19,70),(60,221),(41,151),(63,232),(22,81),(69,254),(47,173),(25,92),(53,195),(28,103),(59,217),(31,114),(65,239),(34,125),(37,136),(40,147),(43,158),(46,169),(49,180),(52,191),(55,202),(58,213),(61,224),(64,235),(67,246),(3,11),(68,249),(65,238),(62,227),(59,216),(56,205),(53,194),(50,183),(47,172),(44,161),(41,150),(38,139),(35,128),(67,245),(32,117),(61,223),(29,106),(55,201),(26,95),(49,179),(23,84),(66,241),(43,157),(63,230),(20,73),(57,208),(37,135),(54,197),(17,62),(65,237),(48,175),(31,113),(45,164),(59,215),(14,51),(67,244),(53,193),(39,142),(64,233),(25,91),(61,222),(36,131),(47,171),(58,211),(69,251),(11,40),(63,229),(52,189),(41,149),(30,109),(49,178),(68,247),(19,69),(65,236),(46,167),(27,98),(62,225),(35,127),(43,156),(51,185),(59,214),(67,243),(8,29),(69,250),(61,221),(53,192),(45,163),(37,134),(66,239),(29,105),(50,181),(21,76),(55,199),(34,123),(47,170),(60,217),(13,47),(70,253),(57,206),(44,159),(31,112),(49,177),(67,242),(18,65),(59,213),(41,148),(64,231),(23,83),(51,184),(28,101),(61,220),(33,119),(71,256),(38,137),(43,155),(48,173),(53,191),(58,209),(63,227),(68,245),(5,18),(67,241),(62,223),(57,205),(52,187),(47,169),(42,151),(37,133),(69,248),(32,115),(59,212),(27,97),(49,176),(71,255),(22,79),(61,219),(39,140),(56,201),(17,61),(63,226),(46,165),(29,104),(70,251),(41,147),(53,190),(65,233),(12,43),(67,240),(55,197),(43,154),(31,111),(50,179),(69,247),(19,68),(64,229),(45,161),(71,254),(26,93),(59,211),(33,118),(40,143),(47,168),(54,193),(61,218),(68,243),(7,25),(65,232),(58,207),(51,182),(44,157),(37,132),(67,239),(30,107),(53,189),(23,82),(62,221),(39,139),(55,196),(71,253),(16,57),(57,203),(41,146),(66,235),(25,89),(59,210),(34,121),(43,153),(52,185),(61,217),(70,249),(9,32),(65,231),(56,199),(47,167),(38,135),(67,238),(29,103),(49,174),(69,245),(20,71),(71,252),(51,181),(31,110),(42,149),(53,188),(64,227),(11,39),(68,241),(57,202),(46,163),(35,124),(59,209),(24,85),(61,216),(37,131),(50,177),(63,223),(13,46),(67,237),(54,191),(41,145),(69,244),(28,99),(71,251),(43,152),(58,205),(15,53),(62,219),(47,166),(32,113),(49,173),(66,233),(17,60),(70,247),(53,187),(36,127),(55,194),(19,67),(59,208),(40,141),(61,215),(21,74),(65,229),(44,155),(67,236),(23,81),(71,250),(48,169),(25,88),(52,183),(27,95),(56,197),(29,102),(60,211),(31,109),(64,225),(33,116),(68,239),(35,123),(72,253),(37,130),(39,137),(41,144),(43,151),(45,158),(47,165),(49,172),(51,179),(53,186),(55,193),(57,200),(59,207),(61,214),(63,221),(65,228),(67,235),(69,242),(71,249),(73,256),(2,7),(73,255),(71,248),(69,241),(67,234),(65,227),(63,220),(61,213),(59,206),(57,199),(55,192),(53,185),(51,178),(49,171),(47,164),(45,157),(43,150),(41,143),(39,136),(37,129),(72,251),(35,122),(68,237),(33,115),(64,223),(31,108),(60,209),(29,101),(56,195),(27,94),(52,181),(25,87),(73,254),(48,167),(71,247),(23,80),(67,233),(44,153),(65,226),(21,73),(61,212),(40,139),(59,205),(19,66),(55,191),(36,125),(53,184),(70,243),(17,59),(66,229),(49,170),(32,111),(47,163),(62,215),(15,52),(73,253),(58,201),(43,149),(71,246),(28,97),(69,239),(41,142),(54,187),(67,232),(13,45),(63,218),(50,173),(37,128),(61,211),(24,83),(59,204),(35,121),(46,159),(57,197),(68,235),(11,38),(64,221),(53,183),(42,145),(73,252),(31,107),(51,176),(71,245),(20,69),(69,238),(49,169),(29,100),(67,231),(38,131),(47,162),(56,193),(65,224),(74,255),(9,31),(70,241),(61,210),(52,179),(43,148),(34,117),(59,203),(25,86),(66,227),(41,141),(57,196),(73,251),(16,55),(71,244),(55,189),(39,134),(62,213),(23,79),(53,182),(30,103),(67,230),(37,127),(44,151),(51,175),(58,199),(65,223),(72,247),(7,24),(68,233),(61,209),(54,185),(47,161),(40,137),(73,250),(33,113),(59,202),(26,89),(71,243),(45,154),(64,219),(19,65),(69,236),(50,171),(31,106),(74,253),(43,147),(55,188),(67,229),(12,41),(65,222),(53,181),(41,140),(70,239),(29,99),(75,256),(46,157),(63,215),(17,58),(73,249),(56,191),(39,133),(61,208),(22,75),(71,242),(49,167),(27,92),(59,201),(32,109),(69,235),(37,126),(42,143),(47,160),(52,177),(57,194),(62,211),(67,228),(72,245),(5,17),(73,248),(68,231),(63,214),(58,197),(53,180),(48,163),(43,146),(38,129),(71,241),(33,112),(61,207),(28,95),(51,173),(74,251),(23,78),(64,217),(41,139),(59,200),(18,61),(67,227),(49,166),(31,105),(75,254),(44,149),(57,193),(70,237),(13,44),(73,247),(60,203),(47,159),(34,115),(55,186),(21,71),(71,240),(50,169),(29,98),(66,223),(37,125),(45,152),(53,179),(61,206),(69,233),(8,27),(75,253),(67,226),(59,199),(51,172),(43,145),(35,118),(62,209),(27,91),(73,246),(46,155),(65,219),(19,64),(68,229),(49,165),(30,101),(71,239),(41,138),(52,175),(63,212),(74,249),(11,37),(69,232),(58,195),(47,158),(36,121),(61,205),(25,84),(64,215),(39,131),(53,178),(67,225),(14,47),(73,245),(59,198),(45,151),(76,255),(31,104),(48,161),(65,218),(17,57),(71,238),(54,181),(37,124),(57,191),(20,67),(63,211),(43,144),(66,221),(23,77),(72,241),(49,164),(75,251),(26,87),(55,184),(29,97),(61,204),(32,107),(67,224),(35,117),(73,244),(38,127),(41,137),(44,147),(47,157),(50,167),(53,177),(56,187),(59,197),(62,207),(65,217),(68,227),(71,237),(74,247),(3,10),(76,253),(73,243),(70,233),(67,223),(64,213),(61,203),(58,193),(55,183),(52,173),(49,163),(46,153),(43,143),(40,133),(77,256),(37,123),(71,236),(34,113),(65,216),(31,103),(59,196),(28,93),(53,176),(25,83),(72,239),(47,156),(69,229),(22,73),(63,209),(41,136),(60,199),(19,63),(73,242),(54,179),(35,116),(51,169),(67,222),(16,53),(77,255),(61,202),(45,149),(74,245),(29,96),(71,235),(42,139),(55,182),(68,225),(13,43),(75,248),(62,205),(49,162),(36,119),(59,195),(23,76),(56,185),(33,109),(76,251),(43,142),(53,175),(63,208),(73,241),(10,33),(77,254),(67,221),(57,188),(47,155),(37,122),(64,211),(27,89),(71,234),(44,145),(61,201),(17,56),(75,247),(58,191),(41,135),(65,214),(24,79),(55,181),(31,102),(69,227),(38,125),(45,148),(52,171),(59,194),(66,217),(73,240),(7,23),(74,243),(67,220),(60,197),(53,174),(46,151),(39,128),(71,233),(32,105),(57,187),(25,82),(68,223),(43,141),(61,200),(18,59),(65,213),(47,154),(76,249),(29,95),(69,226),(40,131),(51,167),(62,203),(73,239),(11,36),(70,229),(59,193),(48,157),(37,121),(63,206),(26,85),(67,219),(41,134),(56,183),(71,232),(15,49),(64,209),(49,160),(34,111),(53,173),(72,235),(19,62),(61,199),(42,137),(65,212),(23,75),(73,238),(50,163),(77,251),(27,88),(58,189),(31,101),(66,215),(35,114),(74,241),(39,127),(43,140),(47,153),(51,166),(55,179),(59,192),(63,205),(67,218),(71,231),(75,244),(4,13),(77,250),(73,237),(69,224),(65,211),(61,198),(57,185),(53,172),(49,159),(45,146),(41,133),(78,253),(37,120),(70,227),(33,107),(62,201),(29,94),(54,175),(79,256),(25,81),(71,230),(46,149),(67,217),(21,68),(59,191),(38,123),(55,178),(72,233),(17,55),(64,207),(47,152),(77,249),(30,97),(73,236),(43,139),(56,181),(69,223),(13,42),(74,239),(61,197),(48,155),(35,113),(57,184),(79,255),(22,71),(75,242),(53,171),(31,100),(71,229),(40,129),(49,158),(58,187),(67,216),(76,245),(9,29),(77,248),(68,219),(59,190),(50,161),(41,132),(73,235),(32,103),(55,177),(78,251),(23,74),(60,193),(37,119),(51,164),(65,209),(79,254),(14,45),(75,241),(61,196),(47,151),(33,106),(52,167),(71,228),(19,61),(62,199),(43,138),(67,215),(24,77),(77,247),(53,170),(29,93),(63,202),(34,109),(73,234),(39,125),(44,141),(49,157),(54,173),(59,189),(64,205),(69,221),(74,237),(79,253),(5,16),(76,243),(71,227),(66,211),(61,195),(56,179),(51,163),(46,147),(41,131),(77,246),(36,115),(67,214),(31,99),(57,182),(26,83),(73,233),(47,150),(68,217),(21,67),(79,252),(58,185),(37,118),(53,169),(69,220),(16,51),(75,239),(59,188),(43,137),(70,223),(27,86),(65,207),(38,121),(49,156),(60,191),(71,226),(11,35),(72,229),(61,194),(50,159),(39,124),(67,213),(28,89),(73,232),(45,143),(62,197),(79,251),(17,54),(74,235),(57,181),(40,127),(63,200),(23,73),(75,238),(52,165),(29,92),(64,203),(35,111),(76,241),(41,130),(47,149),(53,168),(59,187),(65,206),(71,225),(77,244),(6,19),(79,250),(73,231),(67,212),(61,193),(55,174),(49,155),(43,136),(80,253),(37,117),(68,215),(31,98),(56,177),(81,256),(25,79),(69,218),(44,139),(63,199),(19,60),(70,221),(51,161),(32,101),(77,243),(45,142),(58,183),(71,224),(13,41),(72,227),(59,186),(46,145),(79,249),(33,104),(53,167),(73,230),(20,63),(67,211),(47,148),(74,233),(27,85),(61,192),(34,107),(75,236),(41,129),(48,151),(55,173),(62,195),(69,217),(76,239),(7,22),(78,245),(71,223),(64,201),(57,179),(50,157),(43,135),(79,248),(36,113),(65,204),(29,91),(80,251),(51,160),(73,229),(22,69),(81,254),(59,185),(37,116),(52,163),(67,210),(15,47),(68,213),(53,166),(38,119),(61,191),(23,72),(77,241),(54,169),(31,97),(70,219),(39,122),(47,147),(55,172),(63,197),(71,222),(79,247),(8,25),(81,253),(73,228),(65,203),(57,178),(49,153),(41,128),(74,231),(33,103),(58,181),(25,78),(67,209),(42,131),(59,184),(76,237),(17,53),(77,240),(60,187),(43,134),(69,215),(26,81),(61,190),(35,109),(79,246),(44,137),(53,165),(62,193),(71,221),(80,249),(9,28),(82,255),(73,227),(64,199),(55,171),(46,143),(37,115),(65,202),(28,87),(75,233),(47,146),(66,205),(19,59),(67,208),(48,149),(77,239),(29,90),(68,211),(39,121),(49,152),(59,183),(69,214),(79,245),(10,31),(81,251),(71,220),(61,189),(51,158),(41,127),(72,223),(31,96),(52,161),(73,226),(21,65),(74,229),(53,164),(32,99),(75,232),(43,133),(54,167),(65,201),(76,235),(11,34),(78,241),(67,207),(56,173),(45,139),(79,244),(34,105),(57,176),(80,247),(23,71),(81,250),(58,179),(35,108),(82,253),(47,145),(59,182),(71,219),(83,256),(12,37),(73,225),(61,188),(49,151),(37,114),(62,191),(25,77),(63,194),(38,117),(51,157),(64,197),(77,237),(13,40),(79,243),(66,203),(53,163),(40,123),(67,206),(27,83),(68,209),(41,126),(55,169),(69,212),(83,255),(14,43),(71,218),(57,175),(43,132),(72,221),(29,89),(73,224),(44,135),(59,181),(74,227),(15,46),(76,233),(61,187),(46,141),(77,236),(31,95),(78,239),(47,144),(63,193),(79,242),(16,49),(81,248),(65,199),(49,150),(82,251),(33,101),(83,254),(50,153),(67,205),(17,52),(69,211),(52,159),(35,107),(53,162),(71,217),(18,55),(73,223),(55,168),(37,113),(56,171),(75,229),(19,58),(77,235),(58,177),(39,119),(59,180),(79,241),(20,61),(81,247),(61,186),(41,125),(62,189),(83,253),(21,64),(64,195),(43,131),(65,198),(22,67),(67,204),(45,137),(68,207),(23,70),(70,213),(47,143),(71,216),(24,73),(73,222),(49,149),(74,225),(25,76),(76,231),(51,155),(77,234),(26,79),(79,240),(53,161),(80,243),(27,82),(82,249),(55,167),(83,252),(28,85),(57,173),(29,88),(59,179),(30,91),(61,185),(31,94),(63,191),(32,97),(65,197),(33,100),(67,203),(34,103),(69,209),(35,106),(71,215),(36,109),(73,221),(37,112),(75,227),(38,115),(77,233),(39,118),(79,239),(40,121),(81,245),(41,124),(83,251),(42,127),(43,130),(44,133),(45,136),(46,139),(47,142),(48,145),(49,148),(50,151),(51,154),(52,157),(53,160),(54,163),(55,166),(56,169),(57,172),(58,175),(59,178),(60,181),(61,184),(62,187),(63,190),(64,193),(65,196),(66,199),(67,202),(68,205),(69,208),(70,211),(71,214),(72,217),(73,220),(74,223),(75,226),(76,229),(77,232),(78,235),(79,238),(80,241),(81,244),(82,247),(83,250),(84,253),(85,256),(1,3),(85,254),(84,251),(83,248),(82,245),(81,242),(80,239),(79,236),(78,233),(77,230),(76,227),(75,224),(74,221),(73,218),(72,215),(71,212),(70,209),(69,206),(68,203),(67,200),(66,197),(65,194),(64,191),(63,188),(62,185),(61,182),(60,179),(59,176),(58,173),(57,170),(56,167),(55,164),(54,161),(53,158),(52,155),(51,152),(50,149),(49,146),(48,143),(47,140),(46,137),(45,134),(44,131),(43,128),(85,253),(42,125),(83,247),(41,122),(81,241),(40,119),(79,235),(39,116),(77,229),(38,113),(75,223),(37,110),(73,217),(36,107),(71,211),(35,104),(69,205),(34,101),(67,199),(33,98),(65,193),(32,95),(63,187),(31,92),(61,181),(30,89),(59,175),(29,86),(86,255),(57,169),(85,252),(28,83),(83,246),(55,163),(82,243),(27,80),(80,237),(53,157),(79,234),(26,77),(77,228),(51,151),(76,225),(25,74),(74,219),(49,145),(73,216),(24,71),(71,210),(47,139),(70,207),(23,68),(68,201),(45,133),(67,198),(22,65),(65,192),(43,127),(64,189),(85,251),(21,62),(83,245),(62,183),(41,121),(61,180),(81,239),(20,59),(79,233),(59,174),(39,115),(58,171),(77,227),(19,56),(75,221),(56,165),(37,109),(55,162),(73,215),(18,53),(71,209),(53,156),(35,103),(87,256),(52,153),(69,203),(86,253),(17,50),(84,247),(67,197),(50,147),(83,244),(33,97),(82,241),(49,144),(65,191),(81,238),(16,47),(79,232),(63,185),(47,138),(78,229),(31,91),(77,226),(46,135),(61,179),(76,223),(15,44),(74,217),(59,173),(44,129),(73,214),(29,85),(72,211),(43,126),(57,167),(71,208),(85,249),(14,41),(83,243),(69,202),(55,161),(41,120),(68,199),(27,79),(67,196),(40,117),(53,155),(66,193),(79,231),(13,38),(77,225),(64,187),(51,149),(38,111),(63,184),(25,73),(87,254),(62,181),(37,108),(86,251),(49,143),(61,178),(73,213),(85,248),(12,35),(83,242),(71,207),(59,172),(47,137),(82,239),(35,102),(58,169),(81,236),(23,67),(80,233),(57,166),(34,99),(79,230),(45,131),(56,163),(67,195),(78,227),(11,32),(87,253),(76,221),(65,189),(54,157),(43,125),(75,218),(32,93),(85,247),(53,154),(74,215),(21,61),(73,212),(52,151),(83,241),(31,90),(72,209),(41,119),(51,148),(61,177),(71,206),(81,235),(10,29),(79,229),(69,200),(59,171),(49,142),(88,255),(39,113),(68,197),(29,84),(77,223),(48,139),(67,194),(86,249),(19,55),(85,246),(66,191),(47,136),(75,217),(28,81),(65,188),(37,107),(83,240),(46,133),(55,159),(64,185),(73,211),(82,237),(9,26),(80,231),(71,205),(62,179),(53,153),(44,127),(79,228),(35,101),(61,176),(87,251),(26,75),(69,199),(43,124),(60,173),(77,222),(17,49),(76,219),(59,170),(42,121),(67,193),(25,72),(83,239),(58,167),(33,95),(74,213),(41,118),(49,141),(57,164),(65,187),(73,210),(81,233),(89,256),(8,23),(87,250),(79,227),(71,204),(63,181),(55,158),(47,135),(86,247),(39,112),(70,201),(31,89),(85,244),(54,155),(77,221),(23,66),(84,241),(61,175),(38,109),(53,152),(68,195),(83,238),(15,43),(82,235),(67,192),(52,149),(89,255),(37,106),(59,169),(81,232),(22,63),(73,209),(51,146),(80,229),(29,83),(65,186),(36,103),(79,226),(43,123),(50,143),(57,163),(64,183),(71,203),(78,223),(85,243),(7,20),(83,237),(76,217),(69,197),(62,177),(55,157),(48,137),(89,254),(41,117),(75,214),(34,97),(61,174),(88,251),(27,77),(74,211),(47,134),(67,191),(87,248),(20,57),(73,208),(53,151),(86,245),(33,94),(79,225),(46,131),(59,168),(72,205),(85,242),(13,37),(84,239),(71,202),(58,165),(45,128),(77,219),(32,91),(83,236),(51,145),(70,199),(89,253),(19,54),(82,233),(63,179),(44,125),(69,196),(25,71),(81,230),(56,159),(87,247),(31,88),(68,193),(37,105),(80,227),(43,122),(49,139),(55,156),(61,173),(67,190),(73,207),(79,224),(85,241),(6,17),(89,252),(83,235),(77,218),(71,201),(65,184),(59,167),(53,150),(47,133),(88,249),(41,116),(76,215),(35,99),(64,181),(29,82),(81,229),(52,147),(75,212),(23,65),(86,243),(63,178),(40,113),(57,161),(74,209),(17,48),(79,223),(62,175),(45,127),(73,206),(28,79),(67,189),(39,110),(89,251),(50,141),(61,172),(72,203),(83,234),(11,31),(82,231),(71,200),(60,169),(49,138),(87,245),(38,107),(65,183),(27,76),(70,197),(43,121),(59,166),(75,211),(91,256),(16,45),(85,239),(69,194),(53,149),(90,253),(37,104),(58,163),(79,222),(21,59),(89,250),(68,191),(47,132),(73,205),(26,73),(83,233),(57,160),(88,247),(31,87),(67,188),(36,101),(77,216),(41,115),(87,244),(46,129),(51,143),(56,157),(61,171),(66,185),(71,199),(76,213),(81,227),(86,241),(91,255),(5,14),(89,249),(84,235),(79,221),(74,207),(69,193),(64,179),(59,165),(54,151),(49,137),(44,123),(83,232),(39,109),(73,204),(34,95),(63,176),(29,81),(82,229),(53,148),(77,215),(24,67),(91,254),(67,187),(43,120),(62,173),(81,226),(19,53),(90,251),(71,198),(52,145),(85,237),(33,92),(80,223),(47,131),(61,170),(75,209),(89,248),(14,39),(79,220),(65,181),(51,142),(88,245),(37,103),(60,167),(83,231),(23,64),(78,217),(55,153),(87,242),(32,89),(73,203),(41,114),(91,253),(50,139),(59,164),(68,189),(77,214),(86,239),(9,25),(85,236),(76,211),(67,186),(58,161),(49,136),(89,247),(40,111),(71,197),(31,86),(84,233),(53,147),(75,208),(22,61),(79,219),(57,158),(92,255),(35,97),(83,230),(48,133),(61,169),(74,205),(87,241),(13,36),(82,227),(69,191),(56,155),(43,119),(73,202),(30,83),(77,213),(47,130),(64,177),(81,224),(17,47),(89,246),(72,199),(55,152),(38,105),(59,163),(80,221),(21,58),(88,243),(67,185),(46,127),(71,196),(25,69),(79,218),(54,149),(83,229),(29,80),(91,251),(62,171),(33,91),(70,193),(37,102),(78,215),(41,113),(86,237),(45,124),(49,135),(53,146),(57,157),(61,168),(65,179),(69,190),(73,201),(77,212),(81,223),(85,234),(89,245),(93,256),(4,11),(91,250),(87,239),(83,228),(79,217),(75,206),(71,195),(67,184),(63,173),(59,162),(55,151),(51,140),(47,129),(90,247),(43,118),(82,225),(39,107),(74,203),(35,96),(66,181),(31,85),(89,244),(58,159),(85,233),(27,74),(77,211),(50,137),(73,200),(23,63),(88,241),(65,178),(42,115),(61,167),(80,219),(19,52),(91,249),(72,197),(53,145),(87,238),(34,93),(83,227),(49,134),(64,175),(79,216),(15,41),(86,235),(71,194),(56,153),(41,112),(67,183),(93,254),(26,71),(89,243),(63,172),(37,101),(85,232),(48,131),(59,161),(70,191),(81,221),(92,251),(11,30),(84,229),(73,199),(62,169),(51,139),(91,248),(40,109),(69,188),(29,79),(76,207),(47,128),(65,177),(83,226),(18,49),(79,215),(61,166),(43,117),(68,185),(93,253),(25,68),(82,223),(57,155),(89,242),(32,87),(71,193),(39,106),(85,231),(46,125),(53,144),(60,163),(67,182),(74,201),(81,220),(88,239),(7,19),(94,255),(87,236),(80,217),(73,198),(66,179),(59,160),(52,141),(45,122),(83,225),(38,103),(69,187),(31,84),(86,233),(55,149),(79,214),(24,65),(89,241),(65,176),(41,111),(58,157),(75,203),(92,249),(17,46),(78,211),(61,165),(44,119),(71,192),(27,73),(91,246),(64,173),(37,100),(84,227),(47,127),(57,154),(67,181),(77,208),(87,235),(10,27),(93,251),(83,224),(73,197),(63,170),(53,143),(43,116),(76,205),(33,89),(89,240),(56,151),(79,213),(23,62),(82,221),(59,159),(95,256),(36,97),(85,229),(49,132),(62,167),(75,202),(88,237),(13,35),(94,253),(81,218),(68,183),(55,148),(42,113),(71,191),(29,78),(74,199),(45,121),(61,164),(77,207),(93,250),(16,43),(83,223),(67,180),(51,137),(86,231),(35,94),(89,239),(54,145),(73,196),(92,247),(19,51),(79,212),(60,161),(41,110),(63,169),(85,228),(22,59),(91,244),(69,185),(47,126),(72,193),(25,67),(78,209),(53,142),(81,217),(28,75),(87,233),(59,158),(90,241),(31,83),(65,174),(34,91),(71,190),(37,99),(77,206),(40,107),(83,222),(43,115),(89,238),(46,123),(95,254),(49,131),(52,139),(55,147),(58,155),(61,163),(64,171),(67,179),(70,187),(73,195),(76,203),(79,211),(82,219),(85,227),(88,235),(91,243),(94,251),(3,8),(95,253),(92,245),(89,237),(86,229),(83,221),(80,213),(77,205),(74,197),(71,189),(68,181),(65,173),(62,165),(59,157),(56,149),(53,141),(50,133),(47,125),(91,242),(44,117),(85,226),(41,109),(79,210),(38,101),(73,194),(35,93),(67,178),(32,85),(93,247),(61,162),(90,239),(29,77),(84,223),(55,146),(81,215),(26,69),(75,199),(49,130),(72,191),(95,252),(23,61),(89,236),(66,175),(43,114),(63,167),(83,220),(20,53),(77,204),(57,151),(94,249),(37,98),(91,241),(54,143),(71,188),(88,233),(17,45),(82,217),(65,172),(48,127),(79,209),(31,82),(76,201),(45,119),(59,156),(73,193),(87,230),(14,37),(95,251),(81,214),(67,177),(53,140),(92,243),(39,103),(64,169),(89,235),(25,66),(86,227),(61,161),(97,256),(36,95),(83,219),(47,124),(58,153),(69,182),(80,211),(91,240),(11,29),(96,253),(85,224),(74,195),(63,166),(52,137),(93,245),(41,108),(71,187),(30,79),(79,208),(49,129),(68,179),(87,229),(19,50),(84,221),(65,171),(46,121),(73,192),(27,71),(89,234),(62,163),(97,255),(35,92),(78,205),(43,113),(94,247),(51,134),(59,155),(67,176),(75,197),(83,218),(91,239),(8,21),(93,244),(85,223),(77,202),(69,181),(61,160),(53,139),(45,118),(82,215),(37,97),(66,173),(95,249),(29,76),(79,207),(50,131),(71,186),(92,241),(21,55),(97,254),(76,199),(55,144),(89,233),(34,89),(81,212),(47,123),(60,157),(73,191),(86,225),(13,34),(96,251),(83,217),(70,183),(57,149),(44,115),(75,196),(31,81),(80,209),(49,128),(67,175),(85,222),(18,47),(95,248),(77,201),(59,154),(41,107),(64,167),(87,227),(23,60),(97,253),(74,193),(51,133),(79,206),(28,73),(89,232),(61,159),(94,245),(33,86),(71,185),(38,99),(81,211),(43,112),(91,237),(48,125),(53,138),(58,151),(63,164),(68,177),(73,190),(78,203),(83,216),(88,229),(93,242),(98,255),(5,13),(97,252),(92,239),(87,226),(82,213),(77,200),(72,187),(67,174),(62,161),(57,148),(52,135),(47,122),(89,231),(42,109),(79,205),(37,96),(69,179),(32,83),(91,236),(59,153),(86,223),(27,70),(76,197),(49,127),(71,184),(93,241),(22,57),(83,215),(61,158),(39,101),(95,246),(56,145),(73,189),(90,233),(17,44),(97,251),(80,207),(63,163),(46,119),(75,194),(29,75),(99,256),(70,181),(41,106),(94,243),(53,137),(65,168),(77,199),(89,230),(12,31),(91,235),(79,204),(67,173),(55,142),(98,253),(43,111),(74,191),(31,80),(81,209),(50,129),(69,178),(88,227),(19,49),(83,214),(64,165),(45,116),(71,183),(97,250),(26,67),(85,219),(59,152),(92,237),(33,85),(73,188),(40,103),(87,224),(47,121),(54,139),(61,157),(68,175),(75,193),(82,211),(89,229),(96,247),(7,18),(93,239),(86,221),(79,203),(72,185),(65,167),(58,149),(51,131),(95,244),(44,113),(81,208),(37,95),(67,172),(97,249),(30,77),(83,213),(53,136),(76,195),(99,254),(23,59),(85,218),(62,159),(39,100),(94,241),(55,141),(71,182),(87,223),(16,41),(89,228),(73,187),(57,146),(98,251),(41,105),(66,169),(91,233),(25,64),(84,215),(59,151),(93,238),(34,87),(77,197),(43,110),(95,243),(52,133),(61,156),(70,179),(79,202),(88,225),(97,248),(9,23),(92,235),(83,212),(74,189),(65,166),(56,143),(47,120),(85,217),(38,97),(67,171),(96,245),(29,74),(78,199),(49,125),(69,176),(89,227),(20,51),(91,232),(71,181),(51,130),(82,209),(31,79),(73,186),(42,107),(95,242),(53,135),(64,163),(75,191),(86,219),(97,247),(11,28),(90,229),(79,201),(68,173),(57,145),(46,117),(81,206),(35,89),(94,239),(59,150),(83,211),(24,61),(85,216),(61,155),(98,249),(37,94),(87,221),(50,127),(63,160),(76,193),(89,226),(13,33),(93,236),(80,203),(67,170),(54,137),(95,241),(41,104),(69,175),(97,246),(28,71),(99,251),(71,180),(43,109),(101,256),(58,147),(73,185),(88,223),(15,38),(92,233),(77,195),(62,157),(47,119),(79,200),(32,81),(81,205),(49,124),(66,167),(83,210),(100,253),(17,43),(87,220),(70,177),(53,134),(89,225),(36,91),(91,230),(55,139),(74,187),(93,235),(19,48),(97,245),(78,197),(59,149),(99,250),(40,101),(101,255),(61,154),(82,207),(21,53),(86,217),(65,164),(44,111),(67,169),(90,227),(23,58),(94,237),(71,179),(48,121),(73,184),(98,247),(25,63),(77,194),(52,131),(79,199),(27,68),(83,209),(56,141),(85,214),(29,73),(89,224),(60,151),(91,229),(31,78),(95,239),(64,161),(97,244),(33,83),(101,254),(68,171),(35,88),(72,181),(37,93),(76,191),(39,98),(80,201),(41,103),(84,211),(43,108),(88,221),(45,113),(92,231),(47,118),(96,241),(49,123),(100,251),(51,128),(53,133),(55,138),(57,143),(59,148),(61,153),(63,158),(65,163),(67,168),(69,173),(71,178),(73,183),(75,188),(77,193),(79,198),(81,203),(83,208),(85,213),(87,218),(89,223),(91,228),(93,233),(95,238),(97,243),(99,248),(101,253),(2,5),(101,252),(99,247),(97,242),(95,237),(93,232),(91,227),(89,222),(87,217),(85,212),(83,207),(81,202),(79,197),(77,192),(75,187),(73,182),(71,177),(69,172),(67,167),(65,162),(63,157),(61,152),(59,147),(57,142),(55,137),(53,132),(51,127),(100,249),(49,122),(96,239),(47,117),(92,229),(45,112),(88,219),(43,107),(84,209),(41,102),(80,199),(39,97),(76,189),(37,92),(72,179),(35,87),(103,256),(68,169),(101,251),(33,82),(97,241),(64,159),(95,236),(31,77),(91,226),(60,149),(89,221),(29,72),(85,211),(56,139),(83,206),(27,67),(79,196),(52,129),(77,191),(102,253),(25,62),(98,243),(73,181),(48,119),(71,176),(94,233),(23,57),(90,223),(67,166),(44,109),(65,161),(86,213),(21,52),(103,255),(82,203),(61,151),(101,250),(40,99),(99,245),(59,146),(78,193),(97,240),(19,47),(93,230),(74,183),(55,136),(91,225),(36,89),(89,220),(53,131),(70,173),(87,215),(17,42),(100,247),(83,205),(66,163),(49,121),(81,200),(32,79),(79,195),(47,116),(62,153),(77,190),(92,227),(15,37),(103,254),(88,217),(73,180),(58,143),(101,249),(43,106),(71,175),(99,244),(28,69),(97,239),(69,170),(41,101),(95,234),(54,133),(67,165),(80,197),(93,229),(13,32),(102,251),(89,219),(76,187),(63,155),(50,123),(87,214),(37,91),(98,241),(61,150),(85,209),(24,59),(83,204),(59,145),(94,231),(35,86),(81,199),(46,113),(103,253),(57,140),(68,167),(79,194),(90,221),(101,248),(11,27),(97,238),(86,211),(75,184),(64,157),(53,130),(95,233),(42,103),(73,179),(104,255),(31,76),(82,201),(51,125),(71,174),(91,223),(20,49),(89,218),(69,169),(49,120),(78,191),(29,71),(96,235),(67,164),(38,93),(85,208),(47,115),(103,252),(56,137),(65,159),(74,181),(83,203),(92,225),(101,247),(9,22),(97,237),(88,215),(79,193),(70,171),(61,149),(52,127),(95,232),(43,105),(77,188),(34,83),(93,227),(59,144),(84,205),(25,61),(91,222),(66,161),(41,100),(98,239),(57,139),(73,178),(89,217),(105,256),(16,39),(103,251),(87,212),(71,173),(55,134),(94,229),(39,95),(101,246),(62,151),(85,207),(23,56),(99,241),(76,185),(53,129),(83,202),(30,73),(97,236),(67,163),(104,253),(37,90),(81,197),(44,107),(95,231),(51,124),(58,141),(65,158),(72,175),(79,192),(86,209),(93,226),(100,243),(7,17),(103,250),(96,233),(89,216),(82,199),(75,182),(68,165),(61,148),(54,131),(101,245),(47,114),(87,211),(40,97),(73,177),(33,80),(92,223),(59,143),(85,206),(26,63),(97,235),(71,172),(45,109),(64,155),(83,201),(102,247),(19,46),(88,213),(69,167),(50,121),(81,196),(31,75),(105,254),(74,179),(43,104),(98,237),(55,133),(67,162),(79,191),(91,220),(103,249),(12,29),(101,244),(89,215),(77,186),(65,157),(53,128),(94,227),(41,99),(70,169),(99,239),(29,70),(104,251),(75,181),(46,111),(63,152),(80,193),(97,234),(17,41),(90,217),(73,176),(56,135),(95,229),(39,94),(100,241),(61,147),(83,200),(105,253),(22,53),(93,224),(71,171),(49,118),(76,183),(103,248),(27,65),(86,207),(59,142),(91,219),(32,77),(101,243),(69,166),(106,255),(37,89),(79,190),(42,101),(89,214),(47,113),(99,238),(52,125),(57,137),(62,149),(67,161),(72,173),(77,185),(82,197),(87,209),(92,221),(97,233),(102,245),(5,12),(103,247),(98,235),(93,223),(88,211),(83,199),(78,187),(73,175),(68,163),(63,151),(58,139),(53,127),(101,242),(48,115),(91,218),(43,103),(81,194),(38,91),(71,170),(104,249),(33,79),(94,225),(61,146),(89,213),(28,67),(107,256),(79,189),(51,122),(74,177),(97,232),(23,55),(87,208),(64,153),(105,251),(41,98),(100,239),(59,141),(77,184),(95,227),(18,43),(103,246),(85,203),(67,160),(49,117),(80,191),(31,74),(106,253),(75,179),(44,105),(101,241),(57,136),(70,167),(83,198),(96,229),(13,31),(99,236),(86,205),(73,174),(60,143),(107,255),(47,112),(81,193),(34,81),(89,212),(55,131),(76,181),(97,231),(21,50),(92,219),(71,169),(50,119),(79,188),(29,69),(95,226),(66,157),(103,245),(37,88),(82,195),(45,107),(98,233),(53,126),(61,145),(69,164),(77,183),(85,202),(93,221),(101,240),(8,19),(107,254),(99,235),(91,216),(83,197),(75,178),(67,159),(59,140),(51,121),(94,223),(43,102),(78,185),(35,83),(97,230),(62,147),(89,211),(27,64),(100,237),(73,173),(46,109),(65,154),(84,199),(103,244),(19,45),(106,251),(87,206),(68,161),(49,116),(79,187),(30,71),(101,239),(71,168),(41,97),(93,220),(52,123),(63,149),(74,175),(85,201),(96,227),(107,253),(11,26),(102,241),(91,215),(80,189),(69,163),(58,137),(105,248),(47,111),(83,196),(36,85),(97,229),(61,144),(86,203),(25,59),(89,210),(64,151),(103,243),(39,92),(92,217),(53,125),(67,158),(81,191),(95,224),(14,33),(101,238),(87,205),(73,172),(59,139),(104,245),(45,106),(76,179),(107,252),(31,73),(79,186),(48,113),(65,153),(82,193),(99,233),(17,40),(105,247),(88,207),(71,167),(54,127),(91,214),(37,87),(94,221),(57,134),(77,181),(97,228),(20,47),(103,242),(83,195),(63,148),(106,249),(43,101),(109,256),(66,155),(89,209),(23,54),(95,223),(72,169),(49,115),(75,176),(101,237),(26,61),(107,251),(81,190),(55,129),(84,197),(29,68),(90,211),(61,143),(93,218),(32,75),(99,232),(67,157),(102,239),(35,82),(108,253),(73,171),(38,89),(79,185),(41,96),(85,199),(44,103),(91,213),(47,110),(97,227),(50,117),(103,241),(53,124),(109,255),(56,131),(59,138),(62,145),(65,152),(68,159),(71,166),(74,173),(77,180),(80,187),(83,194),(86,201),(89,208),(92,215),(95,222),(98,229),(101,236),(104,243),(107,250),(3,7),(109,254),(106,247),(103,240),(100,233),(97,226),(94,219),(91,212),(88,205),(85,198),(82,191),(79,184),(76,177),(73,170),(70,163),(67,156),(64,149),(61,142),(58,135),(55,128),(107,249),(52,121),(101,235),(49,114),(95,221),(46,107),(89,207),(43,100),(83,193),(40,93),(77,179),(37,86),(108,251),(71,165),(105,244),(34,79),(99,230),(65,151),(96,223),(31,72),(90,209),(59,137),(87,202),(28,65),(109,253),(81,188),(53,123),(78,181),(103,239),(25,58),(97,225),(72,167),(47,109),(69,160),(91,211),(22,51),(107,248),(85,197),(63,146),(104,241),(41,95),(101,234),(60,139),(79,183),(98,227),(19,44),(92,213),(73,169),(54,125),(89,206),(35,81),(86,199),(51,118),(67,155),(83,192),(99,229),(16,37),(109,252),(93,215),(77,178),(61,141),(106,245),(45,104),(74,171),(103,238),(29,67),(100,231),(71,164),(42,97),(97,224),(55,127),(68,157),(81,187),(94,217),(107,247),(13,30),(101,233),(88,203),(75,173),(62,143),(111,256),(49,113),(85,196),(36,83),(95,219),(59,136),(82,189),(105,242),(23,53),(102,235),(79,182),(56,129),(89,205),(33,76),(109,251),(76,175),(43,99),(96,221),(53,122),(63,145),(73,168),(83,191),(93,214),(103,237),(10,23),(107,246),(97,223),(87,200),(77,177),(67,154),(57,131),(104,239),(47,108),(84,193),(37,85),(101,232),(64,147),(91,209),(27,62),(98,225),(71,163),(44,101),(105,241),(61,140),(78,179),(95,218),(17,39),(109,250),(92,211),(75,172),(58,133),(99,227),(41,94),(106,243),(65,149),(89,204),(24,55),(103,236),(79,181),(55,126),(86,197),(31,71),(100,229),(69,158),(107,245),(38,87),(83,190),(45,103),(97,222),(52,119),(111,254),(59,135),(66,151),(73,167),(80,183),(87,199),(94,215),(101,231),(108,247),(7,16),(109,249),(102,233),(95,217),(88,201),(81,185),(74,169),(67,153),(60,137),(53,121),(99,226),(46,105),(85,194),(39,89),(110,251),(71,162),(103,235),(32,73),(89,203),(57,130),(82,187),(107,244),(25,57),(93,212),(68,155),(111,253),(43,98),(104,237),(61,139),(79,180),(97,221),(18,41),(101,230),(83,189),(65,148),(112,255),(47,107),(76,173),(105,239),(29,66),(98,223),(69,157),(109,248),(40,91),(91,207),(51,116),(62,141),(73,166),(84,191),(95,216),(106,241),(11,25),(103,234),(92,209),(81,184),(70,159),(59,134),(107,243),(48,109),(85,193),(37,84),(100,227),(63,143),(89,202),(26,59),(93,211),(67,152),(108,245),(41,93),(97,220),(56,127),(71,161),(86,195),(101,229),(15,34),(109,247),(94,213),(79,179),(64,145),(113,256),(49,111),(83,188),(34,77),(87,197),(53,120),(72,163),(91,206),(110,249),(19,43),(99,224),(80,181),(61,138),(103,233),(42,95),(107,242),(65,147),(88,199),(111,251),(23,52),(96,217),(73,165),(50,113),(77,174),(104,235),(27,61),(112,253),(85,192),(58,131),(89,201),(31,70),(97,219),(66,149),(101,228),(35,79),(109,246),(74,167),(113,255),(39,88),(82,185),(43,97),(90,203),(47,106),(98,221),(51,115),(106,239),(55,124),(59,133),(63,142),(67,151),(71,160),(75,169),(79,178),(83,187),(87,196),(91,205),(95,214),(99,223),(103,232),(107,241),(111,250),(4,9),(113,254),(109,245),(105,236),(101,227),(97,218),(93,209),(89,200),(85,191),(81,182),(77,173),(73,164),(69,155),(65,146),(61,137),(57,128),(110,247),(53,119),(102,229),(49,110),(94,211),(45,101),(86,193),(41,92),(78,175),(37,83),(107,240),(70,157),(103,231),(33,74),(95,213),(62,139),(91,204),(29,65),(112,251),(83,186),(54,121),(79,177),(104,233),(25,56),(96,215),(71,159),(46,103),(113,253),(67,150),(88,197),(109,244),(21,47),(101,226),(80,179),(59,132),(97,217),(38,85),(93,208),(55,123),(72,161),(89,199),(106,237),(17,38),(98,219),(81,181),(64,143),(111,248),(47,105),(77,172),(107,239),(30,67),(103,230),(73,163),(43,96),(99,221),(56,125),(69,154),(82,183),(95,212),(108,241),(13,29),(113,252),(100,223),(87,194),(74,165),(61,136),(109,243),(48,107),(83,185),(35,78),(92,205),(57,127),(79,176),(101,225),(22,49),(97,216),(75,167),(53,118),(84,187),(115,256),(31,69),(102,227),(71,158),(111,247),(40,89),(89,198),(49,109),(107,238),(58,129),(67,149),(76,169),(85,189),(94,209),(103,229),(112,249),(9,20),(113,251),(104,231),(95,211),(86,191),(77,171),(68,151),(59,131),(109,242),(50,111),(91,202),(41,91),(114,253),(73,162),(105,233),(32,71),(87,193),(55,122),(78,173),(101,224),(23,51),(106,235),(83,184),(60,133),(97,215),(37,82),(88,195),(51,113),(65,144),(79,175),(93,206),(107,237),(14,31),(103,228),(89,197),(75,166),(61,135),(108,239),(47,104),(80,177),(113,250),(33,73),(85,188),(52,115),(71,157),(90,199),(109,241),(19,42),(100,221),(81,179),(62,137),(105,232),(43,95),(110,243),(67,148),(91,201),(115,254),(24,53),(101,223),(77,170),(53,117),(82,181),(111,245),(29,64),(92,203),(63,139),(97,214),(34,75),(107,236),(73,161),(112,247),(39,86),(83,183),(44,97),(93,205),(49,108),(103,227),(54,119),(113,249),(59,130),(64,141),(69,152),(74,163),(79,174),(84,185),(89,196),(94,207),(99,218),(104,229),(109,240),(114,251),(5,11),(116,255),(111,244),(106,233),(101,222),(96,211),(91,200),(86,189),(81,178),(76,167),(71,156),(66,145),(61,134),(56,123),(107,235),(51,112),(97,213),(46,101),(87,191),(41,90),(77,169),(113,248),(36,79),(103,226),(67,147),(98,215),(31,68),(88,193),(57,125),(83,182),(109,239),(26,57),(99,217),(73,160),(47,103),(115,252),(68,149),(89,195),(110,241),(21,46),(100,219),(79,173),(58,127),(95,208),(37,81),(90,197),(53,116),(69,151),(85,186),(101,221),(117,256),(16,35),(107,234),(91,199),(75,164),(59,129),(102,223),(43,94),(113,247),(70,153),(97,212),(27,59),(92,201),(65,142),(103,225),(38,83),(87,190),(49,107),(109,238),(60,131),(71,155),(82,179),(93,203),(104,227),(115,251),(11,24),(116,253),(105,229),(94,205),(83,181),(72,157),(61,133),(111,242),(50,109),(89,194),(39,85),(106,231),(67,146),(95,207),(28,61),(101,220),(73,159),(45,98),(107,233),(62,135),(79,172),(96,209),(113,246),(17,37),(108,235),(91,198),(74,161),(57,124),(97,211),(40,87),(103,224),(63,137),(86,187),(109,237),(23,50),(98,213),(75,163),(52,113),(81,176),(110,239),(29,63),(93,202),(64,139),(99,215),(35,76),(111,241),(76,165),(117,254),(41,89),(88,191),(47,102),(100,217),(53,115),(112,243),(59,128),(65,141),(71,154),(77,167),(83,180),(89,193),(95,206),(101,219),(107,232),(113,245),(6,13),(115,249),(109,236),(103,223),(97,210),(91,197),(85,184),(79,171),(73,158),(67,145),(61,132),(116,251),(55,119),(104,225),(49,106),(92,199),(43,93),(80,173),(117,253),(37,80),(105,227),(68,147),(99,214),(31,67),(118,255),(87,188),(56,121),(81,175),(106,229),(25,54),(94,203),(69,149),(113,244),(44,95),(107,231),(63,136),(82,177),(101,218),(19,41),(108,233),(89,192),(70,151),(51,110),(83,179),(115,248),(32,69),(109,235),(77,166),(45,97),(103,222),(58,125),(71,153),(84,181),(97,209),(110,237),(13,28),(111,239),(98,211),(85,183),(72,155),(59,127),(105,226),(46,99),(79,170),(112,241),(33,71),(119,256),(86,185),(53,114),(73,157),(93,200),(113,243),(20,43),(107,230),(87,187),(67,144),(114,245),(47,101),(74,159),(101,217),(27,58),(115,247),(88,189),(61,131),(95,204),(34,73),(109,234),(75,161),(116,249),(41,88),(89,191),(48,103),(103,221),(55,118),(117,251),(62,133),(69,148),(76,163),(83,178),(90,193),(97,208),(104,223),(111,238),(118,253),(7,15),(113,242),(106,227),(99,212),(92,197),(85,182),(78,167),(71,152),(64,137),(57,122),(107,229),(50,107),(93,199),(43,92),(79,169),(115,246),(36,77),(101,216),(65,139),(94,201),(29,62),(109,233),(80,171),(51,109),(73,156),(95,203),(117,250),(22,47),(103,220),(81,173),(59,126),(96,205),(37,79),(89,190),(52,111),(119,254),(67,143),(82,175),(97,207),(112,239),(15,32),(113,241),(98,209),(83,177),(68,145),(53,113),(91,194),(38,81),(99,211),(61,130),(84,179),(107,228),(23,49),(100,213),(77,164),(54,115),(85,181),(116,247),(31,66),(101,215),(70,149),(109,232),(39,83),(86,183),(47,100),(102,217),(55,117),(118,251),(63,134),(71,151),(79,168),(87,185),(95,202),(103,219),(111,236),(119,253),(8,17),(113,240),(105,223),(97,206),(89,189),(81,172),(73,155),(65,138),(57,121),(106,225),(49,104),(90,191),(41,87),(115,244),(74,157),(107,227),(33,70),(91,193),(58,123),(83,176),(108,229),(25,53),(117,248),(92,195),(67,142),(109,231),(42,89),(101,214),(59,125),(76,161),(93,197),(110,233),(17,36),(111,235),(94,199),(77,163),(60,127),(103,218),(43,91),(112,237),(69,146),(95,201),(121,256),(26,55),(113,239),(87,184),(61,129),(96,203),(35,74),(114,241),(79,167),(44,93),(97,205),(53,112),(115,243),(62,131),(71,150),(80,169),(89,188),(98,207),(107,226),(116,245),(9,19),(118,249),(109,230),(100,211),(91,192),(82,173),(73,154),(64,135),(119,251),(55,116),(101,213),(46,97),(83,175),(120,253),(37,78),(102,215),(65,137),(93,196),(121,255),(28,59),(103,217),(75,158),(47,99),(113,238),(66,139),(85,179),(104,219),(19,40),(105,221),(86,181),(67,141),(115,242),(48,101),(77,162),(106,223),(29,61),(97,204),(68,143),(107,225),(39,82),(88,185),(49,103),(108,227),(59,124),(69,145),(79,166),(89,187),(99,208),(109,229),(119,250),(10,21),(121,254),(111,233),(101,212),(91,191),(81,170),(71,149),(61,128),(112,235),(51,107),(92,193),(41,86),(113,237),(72,151),(103,216),(31,65),(114,239),(83,174),(52,109),(73,153),(94,197),(115,241),(21,44),(116,243),(95,199),(74,155),(53,111),(85,178),(117,245),(32,67),(107,224),(75,157),(118,247),(43,90),(97,203),(54,113),(119,249),(65,136),(76,159),(87,182),(98,205),(109,228),(120,251),(11,23),(122,255),(111,232),(100,209),(89,186),(78,163),(67,140),(56,117),(101,211),(45,94),(79,165),(113,236),(34,71),(91,190),(57,119),(80,167),(103,215),(23,48),(104,217),(81,169),(58,121),(93,194),(35,73),(117,244),(82,171),(47,98),(106,221),(59,123),(71,148),(83,173),(95,198),(107,223),(119,248),(12,25),(121,252),(109,227),(97,202),(85,177),(73,152),(61,127),(110,229),(49,102),(86,179),(123,256),(37,77),(99,206),(62,129),(87,181),(112,233),(25,52),(113,235),(88,183),(63,131),(101,210),(38,79),(89,185),(51,106),(115,239),(64,133),(77,160),(90,187),(103,214),(116,241),(13,27),(118,245),(105,218),(92,191),(79,164),(66,137),(119,247),(53,110),(93,193),(40,83),(107,222),(67,139),(94,195),(121,251),(27,56),(122,253),(95,197),(68,141),(109,226),(41,85),(96,199),(55,114),(69,143),(83,172),(97,201),(111,230),(14,29),(113,234),(99,205),(85,176),(71,147),(57,118),(100,207),(43,89),(115,238),(72,149),(101,209),(29,60),(102,211),(73,151),(117,242),(44,91),(103,213),(59,122),(74,153),(89,184),(104,215),(119,246),(15,31),(121,250),(106,219),(91,188),(76,157),(61,126),(107,221),(46,95),(123,254),(77,159),(108,223),(31,64),(109,225),(78,161),(47,97),(110,227),(63,130),(79,163),(95,196),(111,229),(16,33),(113,233),(97,200),(81,167),(65,134),(114,235),(49,101),(82,169),(115,237),(33,68),(116,239),(83,171),(50,103),(117,241),(67,138),(84,173),(101,208),(118,243),(17,35),(120,247),(103,212),(86,177),(69,142),(121,249),(52,107),(87,179),(122,251),(35,72),(123,253),(88,181),(53,109),(124,255),(71,146),(89,183),(107,220),(18,37),(109,224),(91,187),(73,150),(55,113),(92,189),(37,76),(93,191),(56,115),(75,154),(94,193),(113,232),(19,39),(115,236),(96,197),(77,158),(58,119),(97,199),(39,80),(98,201),(59,121),(79,162),(99,203),(119,244),(20,41),(121,248),(101,207),(81,166),(61,125),(102,209),(41,84),(103,211),(62,127),(83,170),(104,213),(125,256),(21,43),(106,217),(85,174),(64,131),(107,219),(43,88),(108,221),(65,133),(87,178),(109,223),(22,45),(111,227),(89,182),(67,137),(112,229),(45,92),(113,231),(68,139),(91,186),(114,233),(23,47),(116,237),(93,190),(70,143),(117,239),(47,96),(118,241),(71,145),(95,194),(119,243),(24,49),(121,247),(97,198),(73,149),(122,249),(49,100),(123,251),(74,151),(99,202),(124,253),(25,51),(101,206),(76,155),(51,104),(77,157),(103,210),(26,53),(105,214),(79,161),(53,108),(80,163),(107,218),(27,55),(109,222),(82,167),(55,112),(83,169),(111,226),(28,57),(113,230),(85,173),(57,116),(86,175),(115,234),(29,59),(117,238),(88,179),(59,120),(89,181),(119,242),(30,61),(121,246),(91,185),(61,124),(92,187),(123,250),(31,63),(125,254),(94,191),(63,128),(95,193),(32,65),(97,197),(65,132),(98,199),(33,67),(100,203),(67,136),(101,205),(34,69),(103,209),(69,140),(104,211),(35,71),(106,215),(71,144),(107,217),(36,73),(109,221),(73,148),(110,223),(37,75),(112,227),(75,152),(113,229),(38,77),(115,233),(77,156),(116,235),(39,79),(118,239),(79,160),(119,241),(40,81),(121,245),(81,164),(122,247),(41,83),(124,251),(83,168),(125,253),(42,85),(85,172),(43,87),(87,176),(44,89),(89,180),(45,91),(91,184),(46,93),(93,188),(47,95),(95,192),(48,97),(97,196),(49,99),(99,200),(50,101),(101,204),(51,103),(103,208),(52,105),(105,212),(53,107),(107,216),(54,109),(109,220),(55,111),(111,224),(56,113),(113,228),(57,115),(115,232),(58,117),(117,236),(59,119),(119,240),(60,121),(121,244),(61,123),(123,248),(62,125),(125,252),(63,127),(127,256),(64,129),(65,131),(66,133),(67,135),(68,137),(69,139),(70,141),(71,143),(72,145),(73,147),(74,149),(75,151),(76,153),(77,155),(78,157),(79,159),(80,161),(81,163),(82,165),(83,167),(84,169),(85,171),(86,173),(87,175),(88,177),(89,179),(90,181),(91,183),(92,185),(93,187),(94,189),(95,191),(96,193),(97,195),(98,197),(99,199),(100,201),(101,203),(102,205),(103,207),(104,209),(105,211),(106,213),(107,215),(108,217),(109,219),(110,221),(111,223),(112,225),(113,227),(114,229),(115,231),(116,233),(117,235),(118,237),(119,239),(120,241),(121,243),(122,245),(123,247),(124,249),(125,251),(126,253),(127,255),(1,2),(128,255),(127,253),(126,251),(125,249),(124,247),(123,245),(122,243),(121,241),(120,239),(119,237),(118,235),(117,233),(116,231),(115,229),(114,227),(113,225),(112,223),(111,221),(110,219),(109,217),(108,215),(107,213),(106,211),(105,209),(104,207),(103,205),(102,203),(101,201),(100,199),(99,197),(98,195),(97,193),(96,191),(95,189),(94,187),(93,185),(92,183),(91,181),(90,179),(89,177),(88,175),(87,173),(86,171),(85,169),(84,167),(83,165),(82,163),(81,161),(80,159),(79,157),(78,155),(77,153),(76,151),(75,149),(74,147),(73,145),(72,143),(71,141),(70,139),(69,137),(68,135),(67,133),(66,131),(65,129),(129,256),(64,127),(127,252),(63,125),(125,248),(62,123),(123,244),(61,121),(121,240),(60,119),(119,236),(59,117),(117,232),(58,115),(115,228),(57,113),(113,224),(56,111),(111,220),(55,109),(109,216),(54,107),(107,212),(53,105),(105,208),(52,103),(103,204),(51,101),(101,200),(50,99),(99,196),(49,97),(97,192),(48,95),(95,188),(47,93),(93,184),(46,91),(91,180),(45,89),(89,176),(44,87),(87,172),(43,85),(128,253),(85,168),(127,251),(42,83),(125,247),(83,164),(124,245),(41,81),(122,241),(81,160),(121,239),(40,79),(119,235),(79,156),(118,233),(39,77),(116,229),(77,152),(115,227),(38,75),(113,223),(75,148),(112,221),(37,73),(110,217),(73,144),(109,215),(36,71),(107,211),(71,140),(106,209),(35,69),(104,205),(69,136),(103,203),(34,67),(101,199),(67,132),(100,197),(33,65),(98,193),(65,128),(97,191),(129,254),(32,63),(127,250),(95,187),(63,124),(94,185),(125,246),(31,61),(123,242),(92,181),(61,120),(91,179),(121,238),(30,59),(119,234),(89,175),(59,116),(88,173),(117,230),(29,57),(115,226),(86,169),(57,112),(85,167),(113,222),(28,55),(111,218),(83,163),(55,108),(82,161),(109,214),(27,53),(107,210),(80,157),(53,104),(79,155),(105,206),(26,51),(129,253),(103,202),(77,151),(128,251),(51,100),(127,249),(76,149),(101,198),(126,247),(25,49),(124,243),(99,194),(74,145),(123,241),(49,96),(122,239),(73,143),(97,190),(121,237),(24,47),(119,233),(95,186),(71,139),(118,231),(47,92),(117,229),(70,137),(93,182),(116,227),(23,45),(114,223),(91,178),(68,133),(113,221),(45,88),(112,219),(67,131),(89,174),(111,217),(22,43),(131,256),(109,213),(87,170),(65,127),(108,211),(43,84),(107,209),(64,125),(85,166),(106,207),(127,248),(21,41),(125,244),(104,203),(83,162),(62,121),(103,201),(41,80),(102,199),(61,119),(81,158),(101,197),(121,236),(20,39),(119,232),(99,193),(79,154),(59,115),(98,191),(39,76),(97,189),(58,113),(77,150),(96,187),(115,224),(19,37),(113,220),(94,183),(75,146),(131,255),(56,109),(93,181),(130,253),(37,72),(129,251),(92,179),(55,107),(128,249),(73,142),(91,177),(109,212),(127,247),(18,35),(125,243),(107,208),(89,173),(71,138),(124,241),(53,103),(88,171),(123,239),(35,68),(122,237),(87,169),(52,101),(121,235),(69,134),(86,167),(103,200),(120,233),(17,33),(118,229),(101,196),(84,163),(67,130),(117,227),(50,97),(83,161),(116,225),(33,64),(115,223),(82,159),(131,254),(49,95),(114,221),(65,126),(81,157),(97,188),(113,219),(129,250),(16,31),(127,246),(111,215),(95,184),(79,153),(63,122),(110,213),(47,91),(125,242),(78,151),(109,211),(31,60),(108,209),(77,149),(123,238),(46,89),(107,207),(61,118),(76,147),(91,176),(106,205),(121,234),(15,29),(119,230),(104,201),(89,172),(74,143),(59,114),(103,199),(44,85),(117,226),(73,141),(102,197),(131,253),(29,56),(130,251),(101,195),(72,139),(115,222),(43,83),(100,193),(57,110),(128,247),(71,137),(85,164),(99,191),(113,218),(127,245),(14,27),(125,241),(111,214),(97,187),(83,160),(69,133),(124,239),(55,106),(96,185),(41,79),(109,210),(68,131),(95,183),(122,235),(27,52),(121,233),(94,181),(67,129),(107,206),(40,77),(133,256),(93,179),(53,102),(119,229),(66,127),(79,152),(92,177),(105,202),(118,227),(131,252),(13,25),(129,248),(116,223),(103,198),(90,173),(77,148),(64,123),(115,221),(51,98),(89,171),(127,244),(38,73),(101,194),(63,121),(88,169),(113,217),(25,48),(112,215),(87,167),(62,119),(99,190),(37,71),(123,236),(86,165),(49,94),(110,211),(61,117),(73,140),(85,163),(97,186),(109,209),(121,232),(133,255),(12,23),(131,251),(119,228),(107,205),(95,182),(83,159),(71,136),(130,249),(59,113),(106,203),(47,90),(129,247),(82,157),(117,224),(35,67),(128,245),(93,178),(58,111),(81,155),(104,199),(127,243),(23,44),(126,241),(103,197),(80,153),(57,109),(91,174),(125,239),(34,65),(113,216),(79,151),(124,237),(45,86),(101,193),(56,107),(123,235),(67,128),(78,149),(89,170),(100,191),(111,212),(122,233),(133,254),(11,21),(131,250),(120,229),(109,208),(98,187),(87,166),(76,145),(65,124),(119,227),(54,103),(97,185),(43,82),(118,225),(75,143),(107,204),(32,61),(117,223),(85,162),(53,101),(127,242),(74,141),(95,181),(116,221),(21,40),(115,219),(94,179),(73,139),(125,238),(52,99),(83,158),(114,217),(31,59),(134,255),(103,196),(72,137),(113,215),(41,78),(133,253),(92,175),(51,97),(112,213),(61,116),(132,251),(71,135),(81,154),(91,173),(101,192),(111,211),(121,230),(131,249),(10,19),(129,245),(119,226),(109,207),(99,188),(89,169),(79,150),(69,131),(128,243),(59,112),(108,205),(49,93),(88,167),(127,241),(39,74),(107,203),(68,129),(97,184),(126,239),(29,55),(135,256),(106,201),(77,146),(125,237),(48,91),(115,218),(67,127),(86,163),(105,199),(124,235),(19,36),(123,233),(104,197),(85,161),(66,125),(113,214),(47,89),(122,231),(75,142),(103,195),(131,248),(28,53),(121,229),(93,176),(65,123),(102,193),(37,70),(120,227),(83,157),(129,244),(46,87),(101,191),(55,104),(119,225),(64,121),(73,138),(82,155),(91,172),(100,189),(109,206),(118,223),(127,240),(9,17),(134,253),(125,236),(116,219),(107,202),(98,185),(89,168),(80,151),(71,134),(133,251),(62,117),(115,217),(53,100),(97,183),(44,83),(123,232),(79,149),(114,215),(35,66),(131,247),(96,181),(61,115),(87,164),(113,213),(26,49),(121,228),(95,179),(69,130),(112,211),(43,81),(103,194),(60,113),(77,145),(94,177),(111,209),(128,241),(17,32),(127,239),(110,207),(93,175),(76,143),(135,254),(59,111),(101,190),(42,79),(109,205),(67,126),(92,173),(117,220),(25,47),(133,250),(108,203),(83,156),(58,109),(91,171),(124,233),(33,62),(107,201),(74,139),(115,216),(41,77),(131,246),(90,169),(49,92),(106,199),(57,107),(122,229),(65,122),(73,137),(81,152),(89,167),(97,182),(105,197),(113,212),(121,227),(129,242),(8,15),(135,253),(127,238),(119,223),(111,208),(103,193),(95,178),(87,163),(79,148),(71,133),(134,251),(63,118),(118,221),(55,103),(102,191),(47,88),(133,249),(86,161),(125,234),(39,73),(109,204),(70,131),(101,189),(132,247),(31,58),(116,217),(85,159),(54,101),(131,245),(77,144),(100,187),(123,230),(23,43),(130,243),(107,200),(84,157),(61,114),(99,185),(137,256),(38,71),(129,241),(91,170),(53,99),(121,226),(68,127),(83,155),(98,183),(113,211),(128,239),(15,28),(127,237),(112,209),(97,181),(82,153),(67,125),(119,222),(52,97),(89,166),(126,235),(37,69),(133,248),(96,179),(59,110),(81,151),(103,192),(125,233),(22,41),(117,218),(95,177),(73,136),(124,231),(51,95),(131,244),(80,149),(109,203),(29,54),(123,229),(94,175),(65,121),(101,188),(137,255),(36,67),(115,214),(79,147),(122,227),(43,80),(136,253),(93,173),(50,93),(107,199),(57,106),(121,225),(64,119),(135,251),(71,132),(78,145),(85,158),(92,171),(99,184),(106,197),(113,210),(120,223),(127,236),(134,249),(7,13),(132,245),(125,232),(118,219),(111,206),(104,193),(97,180),(90,167),(83,154),(76,141),(69,128),(131,243),(62,115),(117,217),(55,102),(103,191),(48,89),(137,254),(89,165),(130,241),(41,76),(116,215),(75,139),(109,202),(34,63),(129,239),(95,176),(61,113),(88,163),(115,213),(27,50),(128,237),(101,187),(74,137),(121,224),(47,87),(114,211),(67,124),(87,161),(107,198),(127,235),(20,37),(133,246),(113,209),(93,172),(73,135),(126,233),(53,98),(86,159),(119,220),(33,61),(112,207),(79,146),(125,231),(46,85),(105,194),(59,109),(131,242),(72,133),(85,157),(98,181),(111,205),(124,229),(137,253),(13,24),(136,251),(123,227),(110,203),(97,179),(84,155),(71,131),(129,238),(58,107),(103,190),(45,83),(122,225),(77,142),(109,201),(32,59),(115,212),(83,153),(134,247),(51,94),(121,223),(70,129),(89,164),(108,199),(127,234),(19,35),(139,256),(120,221),(101,186),(82,151),(63,116),(107,197),(44,81),(113,208),(69,127),(94,173),(119,219),(25,46),(131,241),(106,195),(81,149),(137,252),(56,103),(87,160),(118,217),(31,57),(130,239),(99,182),(68,125),(105,193),(37,68),(117,215),(80,147),(123,226),(43,79),(135,248),(92,169),(49,90),(104,191),(55,101),(116,213),(61,112),(128,235),(67,123),(73,134),(79,145),(85,156),(91,167),(97,178),(103,189),(109,200),(115,211),(121,222),(127,233),(133,244),(139,255),(6,11),(137,251),(131,240),(125,229),(119,218),(113,207),(107,196),(101,185),(95,174),(89,163),(83,152),(77,141),(71,130),(136,249),(65,119),(124,227),(59,108),(112,205),(53,97),(100,183),(47,86),(135,247),(88,161),(129,236),(41,75),(117,214),(76,139),(111,203),(35,64),(134,245),(99,181),(64,117),(93,170),(122,223),(29,53),(139,254),(110,201),(81,148),(133,243),(52,95),(127,232),(75,137),(98,179),(121,221),(23,42),(132,241),(109,199),(86,157),(63,115),(103,188),(40,73),(137,250),(97,177),(57,104),(131,239),(74,135),(91,166),(108,197),(125,228),(17,31),(130,237),(113,206),(96,175),(79,144),(62,113),(107,195),(45,82),(118,215),(73,133),(101,184),(129,235),(28,51),(123,224),(95,173),(67,122),(106,193),(39,71),(128,233),(89,162),(139,253),(50,91),(111,202),(61,111),(133,242),(72,131),(83,151),(94,171),(105,191),(116,211),(127,231),(138,251),(11,20),(137,249),(126,229),(115,209),(104,189),(93,169),(82,149),(71,129),(131,238),(60,109),(109,198),(49,89),(136,247),(87,158),(125,227),(38,69),(141,256),(103,187),(65,118),(92,167),(119,216),(27,49),(124,225),(97,176),(70,127),(113,205),(43,78),(102,185),(59,107),(134,243),(75,136),(91,165),(107,194),(123,223),(139,252),(16,29),(133,241),(117,212),(101,183),(85,154),(69,125),(122,221),(53,96),(90,163),(127,230),(37,67),(132,239),(95,172),(58,105),(137,248),(79,143),(100,181),(121,219),(21,38),(131,237),(110,199),(89,161),(68,123),(115,208),(47,85),(120,217),(73,132),(99,179),(125,226),(26,47),(135,244),(109,197),(83,150),(140,253),(57,103),(88,159),(119,215),(31,56),(129,233),(98,177),(67,121),(103,186),(139,251),(36,65),(113,204),(77,139),(118,213),(41,74),(128,231),(87,157),(133,240),(46,83),(97,175),(51,92),(107,193),(56,101),(117,211),(61,110),(127,229),(66,119),(137,247),(71,128),(76,137),(81,146),(86,155),(91,164),(96,173),(101,182),(106,191),(111,200),(116,209),(121,218),(126,227),(131,236),(136,245),(141,254),(5,9),(139,250),(134,241),(129,232),(124,223),(119,214),(114,205),(109,196),(104,187),(99,178),(94,169),(89,160),(84,151),(79,142),(74,133),(69,124),(133,239),(64,115),(123,221),(59,106),(113,203),(54,97),(103,185),(49,88),(142,255),(93,167),(137,246),(44,79),(127,228),(83,149),(122,219),(39,70),(112,201),(73,131),(107,192),(141,253),(34,61),(131,235),(97,174),(63,113),(92,165),(121,217),(29,52),(140,251),(111,199),(82,147),(135,242),(53,95),(130,233),(77,138),(101,181),(125,224),(24,43),(139,249),(115,206),(91,163),(67,120),(110,197),(43,77),(105,188),(62,111),(143,256),(81,145),(100,179),(119,213),(138,247),(19,34),(128,229),(109,195),(90,161),(71,127),(123,220),(52,93),(137,245),(85,152),(118,211),(33,59),(113,202),(80,143),(127,227),(47,84),(108,193),(61,109),(136,243),(75,134),(89,159),(103,184),(117,209),(131,234),(14,25),(135,241),(121,216),(107,191),(93,166),(79,141),(65,116),(116,207),(51,91),(139,248),(88,157),(125,223),(37,66),(134,239),(97,173),(60,107),(143,255),(83,148),(106,189),(129,230),(23,41),(124,221),(101,180),(78,139),(133,237),(55,98),(142,253),(87,155),(119,212),(32,57),(137,244),(105,187),(73,130),(114,203),(41,73),(132,235),(91,162),(141,251),(50,89),(109,194),(59,105),(127,226),(68,121),(77,137),(86,153),(95,169),(104,185),(113,201),(122,217),(131,233),(140,249),(9,16),(139,247),(130,231),(121,215),(112,199),(103,183),(94,167),(85,151),(76,135),(143,254),(67,119),(125,222),(58,103),(107,190),(49,87),(138,245),(89,158),(129,229),(40,71),(111,197),(71,126),(102,181),(133,236),(31,55),(115,204),(84,149),(137,243),(53,94),(128,227),(75,133),(97,172),(119,211),(141,250),(22,39),(123,218),(101,179),(79,140),(136,241),(57,101),(92,163),(127,225),(35,62),(118,209),(83,147),(131,232),(48,85),(109,193),(61,108),(135,239),(74,131),(87,154),(100,177),(113,200),(126,223),(139,246),(13,23),(134,237),(121,214),(108,191),(95,168),(82,145),(69,122),(125,221),(56,99),(99,175),(142,251),(43,76),(116,205),(73,129),(103,182),(133,235),(30,53),(137,242),(107,189),(77,136),(124,219),(47,83),(111,196),(64,113),(145,256),(81,143),(98,173),(115,203),(132,233),(17,30),(140,247),(123,217),(106,187),(89,157),(72,127),(127,224),(55,97),(93,164),(131,231),(38,67),(135,238),(97,171),(59,104),(139,245),(80,141),(101,178),(122,215),(143,252),(21,37),(130,229),(109,192),(88,155),(67,118),(113,199),(46,81),(117,206),(71,125),(96,169),(121,213),(25,44),(129,227),(104,183),(79,139),(133,234),(54,95),(137,241),(83,146),(112,197),(141,248),(29,51),(120,211),(91,160),(62,109),(95,167),(128,225),(33,58),(136,239),(103,181),(70,123),(107,188),(144,253),(37,65),(115,202),(78,137),(119,209),(41,72),(127,223),(86,151),(131,230),(45,79),(139,244),(94,165),(143,251),(49,86),(102,179),(53,93),(110,193),(57,100),(118,207),(61,107),(126,221),(65,114),(134,235),(69,121),(142,249),(73,128),(77,135),(81,142),(85,149),(89,156),(93,163),(97,170),(101,177),(105,184),(109,191),(113,198),(117,205),(121,212),(125,219),(129,226),(133,233),(137,240),(141,247),(145,254),(4,7),(143,250),(139,243),(135,236),(131,229),(127,222),(123,215),(119,208),(115,201),(111,194),(107,187),(103,180),(99,173),(95,166),(91,159),(87,152),(83,145),(79,138),(75,131),(146,255),(71,124),(138,241),(67,117),(130,227),(63,110),(122,213),(59,103),(114,199),(55,96),(106,185),(51,89),(98,171),(145,253),(47,82),(137,239),(90,157),(133,232),(43,75),(125,218),(82,143),(121,211),(39,68),(113,197),(74,129),(109,190),(144,251),(35,61),(136,237),(101,176),(66,115),(97,169),(128,223),(31,54),(120,209),(89,155),(147,256),(58,101),(143,249),(85,148),(112,195),(139,242),(27,47),(131,228),(104,181),(77,134),(127,221),(50,87),(123,214),(73,127),(96,167),(119,207),(142,247),(23,40),(134,233),(111,193),(88,153),(65,113),(107,186),(42,73),(145,252),(103,179),(61,106),(141,245),(80,139),(99,172),(118,205),(137,238),(19,33),(129,224),(110,191),(91,158),(72,125),(125,217),(53,92),(140,243),(87,151),(121,210),(34,59),(117,203),(83,144),(132,229),(49,85),(113,196),(64,111),(143,248),(79,137),(94,163),(109,189),(124,215),(139,241),(15,26),(146,253),(131,227),(116,201),(101,175),(86,149),(71,123),(127,220),(56,97),(97,168),(138,239),(41,71),(108,187),(67,116),(93,161),(119,206),(145,251),(26,45),(141,244),(115,199),(89,154),(63,109),(100,173),(137,237),(37,64),(122,211),(85,147),(133,230),(48,83),(107,185),(59,102),(129,223),(70,121),(81,140),(92,159),(103,178),(114,197),(125,216),(136,235),(147,254),(11,19),(139,240),(128,221),(117,202),(106,183),(95,164),(84,145),(73,126),(135,233),(62,107),(113,195),(51,88),(142,245),(91,157),(131,226),(40,69),(109,188),(69,119),(98,169),(127,219),(29,50),(134,231),(105,181),(76,131),(123,212),(47,81),(112,193),(65,112),(148,255),(83,143),(101,174),(119,205),(137,236),(18,31),(133,229),(115,198),(97,167),(79,136),(140,241),(61,105),(104,179),(147,253),(43,74),(111,191),(68,117),(93,160),(118,203),(143,246),(25,43),(132,227),(107,184),(82,141),(139,239),(57,98),(146,251),(89,153),(121,208),(32,55),(135,232),(103,177),(71,122),(110,189),(149,256),(39,67),(124,213),(85,146),(131,225),(46,79),(145,249),(99,170),(53,91),(113,194),(60,103),(127,218),(67,115),(141,242),(74,127),(81,139),(88,151),(95,163),(102,175),(109,187),(116,199),(123,211),(130,223),(137,235),(144,247),(7,12),(143,245),(136,233),(129,221),(122,209),(115,197),(108,185),(101,173),(94,161),(87,149),(80,137),(73,125),(139,238),(66,113),(125,214),(59,101),(111,190),(52,89),(149,255),(97,166),(142,243),(45,77),(128,219),(83,142),(121,207),(38,65),(145,248),(107,183),(69,118),(100,171),(131,224),(31,53),(148,253),(117,200),(86,147),(141,241),(55,94),(134,229),(79,135),(103,176),(127,217),(24,41),(137,234),(113,193),(89,152),(65,111),(106,181),(147,251),(41,70),(140,239),(99,169),(58,99),(133,227),(75,128),(92,157),(109,186),(126,215),(143,244),(17,29),(146,249),(129,220),(112,191),(95,162),(78,133),(139,237),(61,104),(105,179),(149,254),(44,75),(115,196),(71,121),(98,167),(125,213),(27,46),(145,247),(118,201),(91,155),(64,109),(101,172),(138,235),(37,63),(121,206),(84,143),(131,223),(47,80),(104,177),(57,97),(124,211),(67,114),(144,245),(77,131),(87,148),(97,165),(107,182),(117,199),(127,216),(137,233),(147,250),(10,17),(143,243),(133,226),(123,209),(113,192),(103,175),(93,158),(83,141),(73,124),(136,231),(63,107),(116,197),(53,90),(149,253),(96,163),(139,236),(43,73),(119,202),(76,129),(109,185),(142,241),(33,56),(122,207),(89,151),(145,246),(56,95),(135,229),(79,134),(102,173),(125,212),(148,251),(23,39),(151,256),(128,217),(105,178),(82,139),(141,239),(59,100),(95,161),(131,222),(36,61),(121,205),(85,144),(134,227),(49,83),(111,188),(62,105),(137,232),(75,127),(88,149),(101,171),(114,193),(127,215),(140,237),(13,22),(146,247),(133,225),(120,203),(107,181),(94,159),(81,137),(149,252),(68,115),(123,208),(55,93),(97,164),(139,235),(42,71),(113,191),(71,120),(100,169),(129,218),(29,49),(132,223),(103,174),(74,125),(119,201),(45,76),(151,255),(106,179),(61,103),(138,233),(77,130),(93,157),(109,184),(125,211),(141,238),(16,27),(147,248),(131,221),(115,194),(99,167),(83,140),(150,253),(67,113),(118,199),(51,86),(137,231),(86,145),(121,204),(35,59),(124,209),(89,150),(143,241),(54,91),(127,214),(73,123),(92,155),(111,187),(130,219),(149,251),(19,32),(136,229),(117,197),(98,165),(79,133),(139,234),(60,101),(101,170),(142,239),(41,69),(145,244),(104,175),(63,106),(148,249),(85,143),(107,180),(129,217),(151,254),(22,37),(135,227),(113,190),(91,153),(69,116),(116,195),(47,79),(119,200),(72,121),(97,163),(122,205),(147,247),(25,42),(128,215),(103,173),(78,131),(131,220),(53,89),(134,225),(81,136),(109,183),(137,230),(28,47),(143,240),(115,193),(87,146),(146,245),(59,99),(149,250),(90,151),(121,203),(152,255),(31,52),(127,213),(96,161),(65,109),(99,166),(133,223),(34,57),(139,233),(105,176),(71,119),(108,181),(145,243),(37,62),(151,253),(114,191),(77,129),(117,196),(40,67),(123,206),(83,139),(126,211),(43,72),(132,221),(89,149),(135,226),(46,77),(141,236),(95,159),(144,241),(49,82),(150,251),(101,169),(153,256),(52,87),(107,179),(55,92),(113,189),(58,97),(119,199),(61,102),(125,209),(64,107),(131,219),(67,112),(137,229),(70,117),(143,239),(73,122),(149,249),(76,127),(79,132),(82,137),(85,142),(88,147),(91,152),(94,157),(97,162),(100,167),(103,172),(106,177),(109,182),(112,187),(115,192),(118,197),(121,202),(124,207),(127,212),(130,217),(133,222),(136,227),(139,232),(142,237),(145,242),(148,247),(151,252),(3,5),(152,253),(149,248),(146,243),(143,238),(140,233),(137,228),(134,223),(131,218),(128,213),(125,208),(122,203),(119,198),(116,193),(113,188),(110,183),(107,178),(104,173),(101,168),(98,163),(95,158),(92,153),(89,148),(86,143),(83,138),(80,133),(77,128),(151,251),(74,123),(145,241),(71,118),(139,231),(68,113),(133,221),(65,108),(127,211),(62,103),(121,201),(59,98),(115,191),(56,93),(109,181),(53,88),(103,171),(153,254),(50,83),(147,244),(97,161),(144,239),(47,78),(138,229),(91,151),(135,224),(44,73),(129,214),(85,141),(126,209),(41,68),(120,199),(79,131),(117,194),(38,63),(149,247),(111,184),(73,121),(108,179),(143,237),(35,58),(137,227),(102,169),(67,111),(99,164),(131,217),(32,53),(125,207),(93,154),(154,255),(61,101),(151,250),(90,149),(119,197),(148,245),(29,48),(142,235),(113,187),(84,139),(139,230),(55,91),(136,225),(81,134),(107,177),(133,220),(26,43),(153,253),(127,210),(101,167),(75,124),(124,205),(49,81),(121,200),(72,119),(95,157),(118,195),(141,233),(23,38),(135,223),(112,185),(89,147),(155,256),(66,109),(109,180),(152,251),(43,71),(149,246),(106,175),(63,104),(146,241),(83,137),(103,170),(123,203),(143,236),(20,33),(137,226),(117,193),(97,160),(77,127),(134,221),(57,94),(151,249),(94,155),(131,216),(37,61),(128,211),(91,150),(145,239),(54,89),(125,206),(71,117),(88,145),(105,173),(122,201),(139,229),(17,28),(150,247),(133,219),(116,191),(99,163),(82,135),(147,242),(65,107),(113,186),(48,79),(127,209),(79,130),(110,181),(141,232),(31,51),(138,227),(107,176),(76,125),(121,199),(45,74),(149,245),(104,171),(59,97),(132,217),(73,120),(87,143),(101,166),(115,189),(129,212),(143,235),(14,23),(151,248),(137,225),(123,202),(109,179),(95,156),(81,133),(148,243),(67,110),(120,197),(53,87),(145,238),(92,151),(131,215),(39,64),(142,233),(103,169),(64,105),(153,251),(89,146),(114,187),(139,228),(25,41),(136,223),(111,182),(86,141),(147,241),(61,100),(97,159),(133,218),(36,59),(155,254),(119,195),(83,136),(130,213),(47,77),(152,249),(105,172),(58,95),(127,208),(69,113),(149,244),(80,131),(91,149),(102,167),(113,185),(124,203),(135,221),(146,239),(11,18),(151,247),(140,229),(129,211),(118,193),(107,175),(96,157),(85,139),(74,121),(137,224),(63,103),(115,188),(52,85),(145,237),(93,152),(134,219),(41,67),(153,250),(112,183),(71,116),(101,165),(131,214),(30,49),(139,227),(109,178),(79,129),(128,209),(49,80),(117,191),(68,111),(155,253),(87,142),(106,173),(125,204),(144,235),(19,31),(141,230),(122,199),(103,168),(84,137),(149,243),(65,106),(111,181),(157,256),(46,75),(119,194),(73,119),(100,163),(127,207),(154,251),(27,44),(143,233),(116,189),(89,145),(151,246),(62,101),(97,158),(132,215),(35,57),(148,241),(113,184),(78,127),(121,197),(43,70),(137,223),(94,153),(145,236),(51,83),(110,179),(59,96),(126,205),(67,109),(142,231),(75,122),(83,135),(91,148),(99,161),(107,174),(115,187),(123,200),(131,213),(139,226),(147,239),(155,252),(8,13),(157,255),(149,242),(141,229),(133,216),(125,203),(117,190),(109,177),(101,164),(93,151),(85,138),(77,125),(146,237),(69,112),(130,211),(61,99),(114,185),(53,86),(151,245),(98,159),(143,232),(45,73),(127,206),(82,133),(119,193),(156,253),(37,60),(140,227),(103,167),(66,107),(95,154),(124,201),(153,248),(29,47),(137,222),(108,175),(79,128),(129,209),(50,81),(121,196),(71,115),(92,149),(113,183),(134,217),(155,251),(21,34),(139,225),(118,191),(97,157),(76,123),(131,212),(55,89),(144,233),(89,144),(123,199),(157,254),(34,55),(149,241),(115,186),(81,131),(128,207),(47,76),(154,249),(107,173),(60,97),(133,215),(73,118),(86,139),(99,160),(112,181),(125,202),(138,223),(151,244),(13,21),(148,239),(135,218),(122,197),(109,176),(96,155),(83,134),(153,247),(70,113),(127,205),(57,92),(158,255),(101,163),(145,234),(44,71),(119,192),(75,121),(106,171),(137,221),(31,50),(142,229),(111,179),(80,129),(129,208),(49,79),(116,187),(67,108),(152,245),(85,137),(103,166),(121,195),(139,224),(157,253),(18,29),(149,240),(131,211),(113,182),(95,153),(77,124),(136,219),(59,95),(159,256),(100,161),(141,227),(41,66),(146,235),(105,169),(64,103),(151,243),(87,140),(110,177),(133,214),(156,251),(23,37),(143,230),(120,193),(97,156),(74,119),(125,201),(51,82),(130,209),(79,127),(107,172),(135,217),(28,45),(145,233),(117,188),(89,143),(150,241),(61,98),(155,249),(94,151),(127,204),(33,53),(137,220),(104,167),(71,114),(109,175),(147,236),(38,61),(157,252),(119,191),(81,130),(124,199),(43,69),(134,215),(91,146),(139,223),(48,77),(149,239),(101,162),(154,247),(53,85),(111,178),(58,93),(121,194),(63,101),(131,210),(68,109),(141,226),(73,117),(151,242),(78,125),(83,133),(88,141),(93,149),(98,157),(103,165),(108,173),(113,181),(118,189),(123,197),(128,205),(133,213),(138,221),(143,229),(148,237),(153,245),(158,253),(5,8),(157,251),(152,243),(147,235),(142,227),(137,219),(132,211),(127,203),(122,195),(117,187),(112,179),(107,171),(102,163),(97,155),(92,147),(87,139),(82,131),(159,254),(77,123),(149,238),(72,115),(139,222),(67,107),(129,206),(62,99),(119,190),(57,91),(109,174),(52,83),(151,241),(99,158),(146,233),(47,75),(136,217),(89,142),(131,209),(42,67),(121,193),(79,126),(116,185),(153,244),(37,59),(143,228),(106,169),(69,110),(101,161),(133,212),(32,51),(155,247),(123,196),(91,145),(150,239),(59,94),(145,231),(86,137),(113,180),(140,223),(27,43),(157,250),(130,207),(103,164),(76,121),(125,199),(49,78),(120,191),(71,113),(93,148),(115,183),(137,218),(159,253),(22,35),(149,237),(127,202),(105,167),(83,132),(144,229),(61,97),(161,256),(100,159),(139,221),(39,62),(134,213),(95,151),(151,240),(56,89),(129,205),(73,116),(90,143),(107,170),(124,197),(141,224),(158,251),(17,27),(148,235),(131,208),(114,181),(97,154),(80,127),(143,227),(63,100),(109,173),(155,246),(46,73),(121,192),(75,119),(104,165),(133,211),(29,46),(157,249),(128,203),(99,157),(70,111),(111,176),(152,241),(41,65),(135,214),(94,149),(147,233),(53,84),(118,187),(65,103),(142,225),(77,122),(89,141),(101,160),(113,179),(125,198),(137,217),(149,236),(161,255),(12,19),(151,239),(139,220),(127,201),(115,182),(103,163),(91,144),(79,125),(146,231),(67,106),(122,193),(55,87),(153,242),(98,155),(141,223),(43,68),(160,253),(117,185),(74,117),(105,166),(136,215),(31,49),(143,226),(112,177),(81,128),(131,207),(50,79),(119,188),(69,109),(157,248),(88,139),(107,169),(126,199),(145,229),(19,30),(159,251),(140,221),(121,191),(102,161),(83,131),(147,232),(64,101),(109,172),(154,243),(45,71),(161,254),(116,183),(71,112),(97,153),(123,194),(149,235),(26,41),(137,216),(111,175),(85,134),(144,227),(59,93),(151,238),(92,145),(125,197),(158,249),(33,52),(139,219),(106,167),(73,115),(113,178),(153,241),(40,63),(127,200),(87,137),(134,211),(47,74),(148,233),(101,159),(155,244),(54,85),(115,181),(61,96),(129,203),(68,107),(143,225),(75,118),(157,247),(82,129),(89,140),(96,151),(103,162),(110,173),(117,184),(124,195),(131,206),(138,217),(145,228),(152,239),(159,250),(7,11),(163,256),(156,245),(149,234),(142,223),(135,212),(128,201),(121,190),(114,179),(107,168),(100,157),(93,146),(86,135),(79,124),(151,237),(72,113),(137,215),(65,102),(123,193),(58,91),(109,171),(160,251),(51,80),(146,229),(95,149),(139,218),(44,69),(125,196),(81,127),(118,185),(155,243),(37,58),(141,221),(104,163),(67,105),(97,152),(127,199),(157,246),(30,47),(143,224),(113,177),(83,130),(136,213),(53,83),(129,202),(76,119),(99,155),(122,191),(145,227),(23,36),(154,241),(131,205),(108,169),(85,133),(147,230),(62,97),(163,255),(101,158),(140,219),(39,61),(133,208),(94,147),(149,233),(55,86),(126,197),(71,111),(158,247),(87,136),(103,161),(119,186),(135,211),(151,236),(16,25),(153,239),(137,214),(121,189),(105,164),(89,139),(162,253),(73,114),(130,203),(57,89),(155,242),(98,153),(139,217),(41,64),(148,231),(107,167),(66,103),(157,245),(91,142),(116,181),(141,220),(25,39),(159,248),(134,209),(109,170),(84,131),(143,223),(59,92),(152,237),(93,145),(127,198),(161,251),(34,53),(145,226),(111,173),(77,120),(120,187),(163,254),(43,67),(138,215),(95,148),(147,229),(52,81),(113,176),(61,95),(131,204),(70,109),(149,232),(79,123),(88,137),(97,151),(106,165),(115,179),(124,193),(133,207),(142,221),(151,235),(160,249),(9,14),(164,255),(155,241),(146,227),(137,213),(128,199),(119,185),(110,171),(101,157),(92,143),(83,129),(157,244),(74,115),(139,216),(65,101),(121,188),(56,87),(159,247),(103,160),(150,233),(47,73),(132,205),(85,132),(123,191),(161,250),(38,59),(143,222),(105,163),(67,104),(163,253),(96,149),(125,194),(154,239),(29,45),(165,256),(136,211),(107,166),(78,121),(127,197),(49,76),(118,183),(69,107),(158,245),(89,138),(109,169),(129,200),(149,231),(20,31),(151,234),(131,203),(111,172),(91,141),(162,251),(71,110),(122,189),(51,79),(133,206),(82,127),(113,175),(144,223),(31,48),(135,209),(104,161),(73,113),(115,178),(157,243),(42,65),(137,212),(95,147),(148,229),(53,82),(117,181),(64,99),(139,215),(75,116),(161,249),(86,133),(97,150),(108,167),(119,184),(130,201),(141,218),(152,235),(163,252),(11,17),(156,241),(145,224),(134,207),(123,190),(112,173),(101,156),(90,139),(79,122),(147,227),(68,105),(125,193),(57,88),(160,247),(103,159),(149,230),(46,71),(127,196),(81,125),(116,179),(151,233),(35,54),(164,253),(129,199),(94,145),(153,236),(59,91),(142,219),(83,128),(107,165),(131,202),(155,239),(24,37),(157,242),(133,205),(109,168),(85,131),(146,225),(61,94),(159,245),(98,151),(135,208),(37,57),(161,248),(124,191),(87,134),(137,211),(50,77),(163,251),(113,174),(63,97),(139,214),(76,117),(165,254),(89,137),(102,157),(115,177),(128,197),(141,217),(154,237),(13,20),(158,243),(145,223),(132,203),(119,183),(106,163),(93,143),(80,123),(147,226),(67,103),(121,186),(54,83),(149,229),(95,146),(136,209),(41,63),(151,232),(110,169),(69,106),(166,255),(97,149),(125,192),(153,235),(28,43),(155,238),(127,195),(99,152),(71,109),(114,175),(157,241),(43,66),(144,221),(101,155),(159,244),(58,89),(131,201),(73,112),(161,247),(88,135),(103,158),(118,181),(133,204),(148,227),(163,250),(15,23),(167,256),(152,233),(137,210),(122,187),(107,164),(92,141),(77,118),(139,213),(62,95),(109,167),(156,239),(47,72),(126,193),(79,121),(111,170),(143,219),(32,49),(145,222),(113,173),(81,124),(130,199),(49,75),(164,251),(115,176),(66,101),(149,228),(83,127),(100,153),(117,179),(134,205),(151,231),(17,26),(155,237),(138,211),(121,185),(104,159),(87,133),(157,240),(70,107),(123,188),(53,81),(142,217),(89,136),(125,191),(161,246),(36,55),(163,249),(127,194),(91,139),(146,223),(55,84),(129,197),(74,113),(167,255),(93,142),(112,171),(131,200),(150,229),(19,29),(154,235),(135,206),(116,177),(97,148),(78,119),(137,209),(59,90),(158,241),(99,151),(139,212),(40,61),(141,215),(101,154),(162,247),(61,93),(143,218),(82,125),(103,157),(124,189),(145,221),(166,253),(21,32),(149,227),(128,195),(107,163),(86,131),(151,230),(65,99),(109,166),(153,233),(44,67),(155,236),(111,169),(67,102),(157,239),(90,137),(113,172),(136,207),(159,242),(23,35),(163,248),(140,213),(117,178),(94,143),(165,251),(71,108),(119,181),(167,254),(48,73),(121,184),(73,111),(98,149),(123,187),(148,225),(25,38),(152,231),(127,193),(102,155),(77,117),(129,196),(52,79),(131,199),(79,120),(106,161),(133,202),(160,243),(27,41),(164,249),(137,208),(110,167),(83,126),(139,211),(56,85),(141,214),(85,129),(114,173),(143,217),(29,44),(147,223),(118,179),(89,135),(149,226),(60,91),(151,229),(91,138),(122,185),(153,232),(31,47),(157,238),(126,191),(95,144),(159,241),(64,97),(161,244),(97,147),(130,197),(163,247),(33,50),(167,253),(134,203),(101,153),(169,256),(68,103),(103,156),(138,209),(35,53),(142,215),(107,162),(72,109),(109,165),(146,221),(37,56),(150,227),(113,171),(76,115),(115,174),(154,233),(39,59),(158,239),(119,180),(80,121),(121,183),(162,245),(41,62),(166,251),(125,189),(84,127),(127,192),(43,65),(131,198),(88,133),(133,201),(45,68),(137,207),(92,139),(139,210),(47,71),(143,216),(96,145),(145,219),(49,74),(149,225),(100,151),(151,228),(51,77),(155,234),(104,157),(157,237),(53,80),(161,243),(108,163),(163,246),(55,83),(167,252),(112,169),(169,255),(57,86),(116,175),(59,89),(120,181),(61,92),(124,187),(63,95),(128,193),(65,98),(132,199),(67,101),(136,205),(69,104),(140,211),(71,107),(144,217),(73,110),(148,223),(75,113),(152,229),(77,116),(156,235),(79,119),(160,241),(81,122),(164,247),(83,125),(168,253),(85,128),(87,131),(89,134),(91,137),(93,140),(95,143),(97,146),(99,149),(101,152),(103,155),(105,158),(107,161),(109,164),(111,167),(113,170),(115,173),(117,176),(119,179),(121,182),(123,185),(125,188),(127,191),(129,194),(131,197),(133,200),(135,203),(137,206),(139,209),(141,212),(143,215),(145,218),(147,221),(149,224),(151,227),(153,230),(155,233),(157,236),(159,239),(161,242),(163,245),(165,248),(167,251),(169,254),(2,3),(171,256),(169,253),(167,250),(165,247),(163,244),(161,241),(159,238),(157,235),(155,232),(153,229),(151,226),(149,223),(147,220),(145,217),(143,214),(141,211),(139,208),(137,205),(135,202),(133,199),(131,196),(129,193),(127,190),(125,187),(123,184),(121,181),(119,178),(117,175),(115,172),(113,169),(111,166),(109,163),(107,160),(105,157),(103,154),(101,151),(99,148),(97,145),(95,142),(93,139),(91,136),(89,133),(87,130),(85,127),(168,251),(83,124),(164,245),(81,121),(160,239),(79,118),(156,233),(77,115),(152,227),(75,112),(148,221),(73,109),(144,215),(71,106),(140,209),(69,103),(136,203),(67,100),(132,197),(65,97),(128,191),(63,94),(124,185),(61,91),(120,179),(59,88),(116,173),(57,85),(169,252),(112,167),(167,249),(55,82),(163,243),(108,161),(161,240),(53,79),(157,234),(104,155),(155,231),(51,76),(151,225),(100,149),(149,222),(49,73),(145,216),(96,143),(143,213),(47,70),(139,207),(92,137),(137,204),(45,67),(133,198),(88,131),(131,195),(43,64),(170,253),(127,189),(84,125),(125,186),(166,247),(41,61),(162,241),(121,180),(80,119),(119,177),(158,235),(39,58),(154,229),(115,171),(76,113),(113,168),(150,223),(37,55),(146,217),(109,162),(72,107),(107,159),(142,211),(35,52),(138,205),(103,153),(171,254),(68,101),(169,251),(101,150),(134,199),(167,248),(33,49),(163,242),(130,193),(97,144),(161,239),(64,95),(159,236),(95,141),(126,187),(157,233),(31,46),(153,227),(122,181),(91,135),(151,224),(60,89),(149,221),(89,132),(118,175),(147,218),(29,43),(172,255),(143,212),(114,169),(85,126),(141,209),(56,83),(139,206),(83,123),(110,163),(137,203),(164,243),(27,40),(160,237),(133,197),(106,157),(79,117),(131,194),(52,77),(129,191),(77,114),(102,151),(127,188),(152,225),(25,37),(173,256),(148,219),(123,182),(98,145),(171,253),(73,108),(121,179),(169,250),(48,71),(167,247),(119,176),(71,105),(165,244),(94,139),(117,173),(140,207),(163,241),(23,34),(159,235),(136,201),(113,167),(90,133),(157,232),(67,99),(111,164),(155,229),(44,65),(153,226),(109,161),(65,96),(151,223),(86,127),(107,158),(128,189),(149,220),(170,251),(21,31),(166,245),(145,214),(124,183),(103,152),(82,121),(143,211),(61,90),(162,239),(101,149),(141,208),(40,59),(139,205),(99,146),(158,233),(59,87),(137,202),(78,115),(97,143),(116,171),(135,199),(154,227),(173,255),(19,28),(169,249),(150,221),(131,193),(112,165),(93,137),(167,246),(74,109),(129,190),(55,81),(146,215),(91,134),(127,187),(163,240),(36,53),(161,237),(125,184),(89,131),(142,209),(53,78),(123,181),(70,103),(157,231),(87,128),(104,153),(121,178),(138,203),(155,228),(172,253),(17,25),(168,247),(151,222),(134,197),(117,172),(100,147),(83,122),(149,219),(66,97),(115,169),(164,241),(49,72),(130,191),(81,119),(113,166),(145,213),(32,47),(143,210),(111,163),(79,116),(126,185),(173,254),(47,69),(156,229),(109,160),(171,251),(62,91),(139,204),(77,113),(169,248),(92,135),(107,157),(122,179),(137,201),(152,223),(167,245),(15,22),(163,239),(148,217),(133,195),(118,173),(103,151),(88,129),(161,236),(73,107),(131,192),(58,85),(159,233),(101,148),(144,211),(43,63),(157,230),(114,167),(71,104),(170,249),(99,145),(127,186),(155,227),(28,41),(153,224),(125,183),(97,142),(166,243),(69,101),(110,161),(151,221),(41,60),(136,199),(95,139),(149,218),(54,79),(175,256),(121,177),(67,98),(147,215),(80,117),(173,253),(93,136),(106,155),(119,174),(132,193),(145,212),(158,231),(171,250),(13,19),(167,244),(154,225),(141,206),(128,187),(115,168),(102,149),(89,130),(165,241),(76,111),(139,203),(63,92),(113,165),(163,238),(50,73),(137,200),(87,127),(124,181),(161,235),(37,54),(172,251),(135,197),(98,143),(159,232),(61,89),(146,213),(85,124),(109,159),(133,194),(157,229),(24,35),(155,226),(131,191),(107,156),(83,121),(142,207),(59,86),(153,223),(94,137),(129,188),(164,239),(35,51),(151,220),(116,169),(81,118),(127,185),(173,252),(46,67),(149,217),(103,150),(160,233),(57,83),(125,182),(68,99),(147,214),(79,115),(169,246),(90,131),(101,147),(112,163),(123,179),(134,195),(145,211),(156,227),(167,243),(11,16),(174,253),(163,237),(152,221),(141,205),(130,189),(119,173),(108,157),(97,141),(86,125),(161,234),(75,109),(139,202),(64,93),(117,170),(170,247),(53,77),(148,215),(95,138),(137,199),(42,61),(157,228),(115,167),(73,106),(104,151),(135,196),(166,241),(31,45),(175,254),(144,209),(113,164),(82,119),(133,193),(51,74),(173,251),(122,177),(71,103),(162,235),(91,132),(111,161),(131,190),(151,219),(171,248),(20,29),(169,245),(149,216),(129,187),(109,158),(89,129),(158,229),(69,100),(118,171),(167,242),(49,71),(176,255),(127,184),(78,113),(107,155),(136,197),(165,239),(29,42),(154,223),(125,181),(96,139),(163,236),(67,97),(172,249),(105,152),(143,207),(38,55),(161,233),(123,178),(85,123),(132,191),(47,68),(150,217),(103,149),(159,230),(56,81),(177,256),(121,175),(65,94),(139,201),(74,107),(157,227),(83,120),(175,253),(92,133),(101,146),(110,159),(119,172),(128,185),(137,198),(146,211),(155,224),(164,237),(173,250),(9,13),(169,244),(160,231),(151,218),(142,205),(133,192),(124,179),(115,166),(106,153),(97,140),(88,127),(167,241),(79,114),(149,215),(70,101),(131,189),(61,88),(174,251),(113,163),(165,238),(52,75),(147,212),(95,137),(138,199),(43,62),(163,235),(120,173),(77,111),(111,160),(145,209),(34,49),(161,232),(127,183),(93,134),(152,219),(59,85),(143,206),(84,121),(109,157),(134,193),(159,229),(25,36),(166,239),(141,203),(116,167),(91,131),(157,226),(66,95),(173,249),(107,154),(148,213),(41,59),(139,200),(98,141),(155,223),(57,82),(130,187),(73,105),(162,233),(89,128),(105,151),(121,174),(137,197),(153,220),(169,243),(16,23),(167,240),(151,217),(135,194),(119,171),(103,148),(87,125),(158,227),(71,102),(126,181),(55,79),(149,214),(94,135),(133,191),(172,247),(39,56),(140,201),(101,145),(163,234),(62,89),(147,211),(85,122),(108,155),(131,188),(154,221),(177,254),(23,33),(168,241),(145,208),(122,175),(99,142),(175,251),(76,109),(129,185),(53,76),(136,195),(83,119),(113,162),(143,205),(173,248),(30,43),(157,225),(127,182),(97,139),(164,235),(67,96),(171,245),(104,149),(141,202),(178,255),(37,53),(155,222),(118,169),(81,116),(125,179),(169,242),(44,63),(139,199),(95,136),(146,209),(51,73),(160,229),(109,156),(167,239),(58,83),(123,176),(65,93),(137,196),(72,103),(151,216),(79,113),(165,236),(86,123),(179,256),(93,133),(100,143),(107,153),(114,163),(121,173),(128,183),(135,193),(142,203),(149,213),(156,223),(163,233),(170,243),(177,253),(7,10),(173,247),(166,237),(159,227),(152,217),(145,207),(138,197),(131,187),(124,177),(117,167),(110,157),(103,147),(96,137),(89,127),(171,244),(82,117),(157,224),(75,107),(143,204),(68,97),(129,184),(61,87),(176,251),(115,164),(169,241),(54,77),(155,221),(101,144),(148,211),(47,67),(134,191),(87,124),(127,181),(167,238),(40,57),(153,218),(113,161),(73,104),(179,255),(106,151),(139,198),(172,245),(33,47),(158,225),(125,178),(92,131),(151,215),(59,84),(144,205),(85,121),(111,158),(137,195),(163,232),(26,37),(175,249),(149,212),(123,175),(97,138),(168,239),(71,101),(116,165),(161,229),(45,64),(154,219),(109,155),(173,246),(64,91),(147,209),(83,118),(102,145),(121,172),(140,199),(159,226),(178,253),(19,27),(164,233),(145,206),(126,179),(107,152),(88,125),(157,223),(69,98),(119,169),(169,240),(50,71),(131,186),(81,115),(112,159),(143,203),(174,247),(31,44),(167,237),(136,193),(105,149),(179,254),(74,105),(117,166),(160,227),(43,61),(141,200),(98,139),(153,217),(55,78),(177,251),(122,173),(67,95),(146,207),(79,112),(170,241),(91,129),(103,146),(115,163),(127,180),(139,197),(151,214),(163,231),(175,248),(12,17),(173,245),(161,228),(149,211),(137,194),(125,177),(113,160),(101,143),(89,126),(166,235),(77,109),(142,201),(65,92),(118,167),(171,242),(53,75),(147,208),(94,133),(135,191),(176,249),(41,58),(152,215),(111,157),(181,256),(70,99),(169,239),(99,140),(128,181),(157,222),(29,41),(162,229),(133,188),(104,147),(179,253),(75,106),(121,171),(167,236),(46,65),(155,219),(109,154),(172,243),(63,89),(143,202),(80,113),(177,250),(97,137),(114,161),(131,185),(148,209),(165,233),(17,24),(175,247),(158,223),(141,199),(124,175),(107,151),(90,127),(163,230),(73,103),(129,182),(56,79),(151,213),(95,134),(134,189),(173,244),(39,55),(178,251),(139,196),(100,141),(161,227),(61,86),(144,203),(83,117),(105,148),(127,179),(149,210),(171,241),(22,31),(181,255),(159,224),(137,193),(115,162),(93,131),(164,231),(71,100),(120,169),(169,238),(49,69),(174,245),(125,176),(76,107),(179,252),(103,145),(130,183),(157,221),(27,38),(167,235),(140,197),(113,159),(86,121),(145,204),(59,83),(150,211),(91,128),(123,173),(155,218),(32,45),(165,232),(133,187),(101,142),(170,239),(69,97),(175,246),(106,149),(143,201),(180,253),(37,52),(153,215),(116,163),(79,111),(121,170),(163,229),(42,59),(173,243),(131,184),(89,125),(136,191),(47,66),(146,205),(99,139),(151,212),(52,73),(161,226),(109,153),(166,233),(57,80),(176,247),(119,167),(181,254),(62,87),(129,181),(67,94),(139,195),(72,101),(149,209),(77,108),(159,223),(82,115),(169,237),(87,122),(179,251),(92,129),(97,136),(102,143),(107,150),(112,157),(117,164),(122,171),(127,178),(132,185),(137,192),(142,199),(147,206),(152,213),(157,220),(162,227),(167,234),(172,241),(177,248),(182,255),(5,7),(183,256),(178,249),(173,242),(168,235),(163,228),(158,221),(153,214),(148,207),(143,200),(138,193),(133,186),(128,179),(123,172),(118,165),(113,158),(108,151),(103,144),(98,137),(93,130),(181,253),(88,123),(171,239),(83,116),(161,225),(78,109),(151,211),(73,102),(141,197),(68,95),(131,183),(63,88),(121,169),(179,250),(58,81),(169,236),(111,155),(164,229),(53,74),(154,215),(101,141),(149,208),(48,67),(139,194),(91,127),(134,187),(177,247),(43,60),(167,233),(124,173),(81,113),(119,166),(157,219),(38,53),(147,205),(109,152),(180,251),(71,99),(175,244),(104,145),(137,191),(170,237),(33,46),(160,223),(127,177),(94,131),(155,216),(61,85),(150,209),(89,124),(117,163),(145,202),(173,241),(28,39),(163,227),(135,188),(107,149),(79,110),(130,181),(181,252),(51,71),(176,245),(125,174),(74,103),(171,238),(97,135),(120,167),(143,199),(166,231),(23,32),(179,249),(156,217),(133,185),(110,153),(87,121),(151,210),(64,89),(169,235),(105,146),(146,203),(41,57),(182,253),(141,196),(100,139),(159,221),(59,82),(136,189),(77,107),(172,239),(95,132),(113,157),(131,182),(149,207),(167,232),(18,25),(175,243),(157,218),(139,193),(121,168),(103,143),(85,118),(152,211),(67,93),(183,254),(116,161),(165,229),(49,68),(178,247),(129,179),(80,111),(111,154),(142,197),(173,240),(31,43),(168,233),(137,190),(106,147),(181,251),(75,104),(119,165),(163,226),(44,61),(145,201),(101,140),(158,219),(57,79),(184,255),(127,176),(70,97),(153,212),(83,115),(179,248),(96,133),(109,151),(122,169),(135,187),(148,205),(161,223),(174,241),(13,18),(177,245),(164,227),(151,209),(138,191),(125,173),(112,155),(99,137),(185,256),(86,119),(159,220),(73,101),(133,184),(60,83),(167,231),(107,148),(154,213),(47,65),(175,242),(128,177),(81,112),(115,159),(149,206),(183,253),(34,47),(157,217),(123,170),(89,123),(144,199),(55,76),(131,181),(76,105),(173,239),(97,134),(118,163),(139,192),(160,221),(181,250),(21,29),(176,243),(155,214),(134,185),(113,156),(92,127),(163,225),(71,98),(121,167),(171,236),(50,69),(179,247),(129,178),(79,109),(108,149),(137,189),(166,229),(29,40),(182,251),(153,211),(124,171),(95,131),(161,222),(66,91),(169,233),(103,142),(140,193),(177,244),(37,51),(156,215),(119,164),(82,113),(127,175),(172,237),(45,62),(143,197),(98,135),(151,208),(53,73),(167,230),(114,157),(175,241),(61,84),(130,179),(69,95),(146,201),(77,106),(162,223),(85,117),(178,245),(93,128),(101,139),(109,150),(117,161),(125,172),(133,183),(141,194),(149,205),(157,216),(165,227),(173,238),(181,249),(8,11),(179,246),(171,235),(163,224),(155,213),(147,202),(139,191),(131,180),(123,169),(115,158),(107,147),(99,136),(91,125),(174,239),(83,114),(158,217),(75,103),(142,195),(67,92),(126,173),(185,254),(59,81),(169,232),(110,151),(161,221),(51,70),(145,199),(94,129),(137,188),(180,247),(43,59),(164,225),(121,166),(78,107),(113,155),(148,203),(183,251),(35,48),(167,229),(132,181),(97,133),(159,218),(62,85),(151,207),(89,122),(116,159),(143,196),(170,233),(27,37),(181,248),(154,211),(127,174),(100,137),(173,237),(73,100),(119,163),(165,226),(46,63),(157,215),(111,152),(176,241),(65,89),(149,204),(84,115),(187,256),(103,141),(122,167),(141,193),(160,219),(179,245),(19,26),(182,249),(163,223),(144,197),(125,171),(106,145),(87,119),(155,212),(68,93),(185,253),(117,160),(166,227),(49,67),(177,242),(128,175),(79,108),(109,149),(139,190),(169,231),(30,41),(161,220),(131,179),(101,138),(172,235),(71,97),(183,250),(112,153),(153,209),(41,56),(175,239),(134,183),(93,127),(145,198),(52,71),(167,228),(115,157),(178,243),(63,86),(137,187),(74,101),(159,217),(85,116),(181,247),(96,131),(107,146),(118,161),(129,176),(140,191),(151,206),(162,221),(173,236),(184,251),(11,15),(179,244),(168,229),(157,214),(146,199),(135,184),(124,169),(113,154),(102,139),(91,124),(171,233),(80,109),(149,203),(69,94),(127,173),(185,252),(58,79),(163,222),(105,143),(152,207),(47,64),(177,241),(130,177),(83,113),(119,162),(155,211),(36,49),(169,230),(133,181),(97,132),(158,215),(61,83),(147,200),(86,117),(111,151),(136,185),(161,219),(186,253),(25,34),(164,223),(139,189),(114,155),(89,121),(153,208),(64,87),(167,227),(103,140),(142,193),(181,246),(39,53),(170,231),(131,178),(92,125),(145,197),(53,72),(173,235),(120,163),(187,254),(67,91),(148,201),(81,110),(176,239),(95,129),(109,148),(123,167),(137,186),(151,205),(165,224),(179,243),(14,19),(185,251),(171,232),(157,213),(143,194),(129,175),(115,156),(101,137),(188,255),(87,118),(160,217),(73,99),(132,179),(59,80),(163,221),(104,141),(149,202),(45,61),(166,225),(121,164),(76,103),(183,248),(107,145),(138,187),(169,229),(31,42),(172,233),(141,191),(110,149),(189,256),(79,107),(127,172),(175,237),(48,65),(161,218),(113,153),(178,241),(65,88),(147,199),(82,111),(181,245),(99,134),(116,157),(133,180),(150,203),(167,226),(184,249),(17,23),(173,234),(156,211),(139,188),(122,165),(105,142),(88,119),(159,215),(71,96),(125,169),(179,242),(54,73),(145,196),(91,123),(128,173),(165,223),(37,50),(168,227),(131,177),(94,127),(151,204),(57,77),(134,181),(77,104),(174,235),(97,131),(117,158),(137,185),(157,212),(177,239),(20,27),(183,247),(163,220),(143,193),(123,166),(103,139),(186,251),(83,112),(146,197),(63,85),(169,228),(106,143),(149,201),(43,58),(152,205),(109,147),(175,236),(66,89),(155,209),(89,120),(112,151),(135,182),(158,213),(181,244),(23,31),(187,252),(164,221),(141,190),(118,159),(95,128),(167,225),(72,97),(121,163),(170,229),(49,66),(173,233),(124,167),(75,101),(176,237),(101,136),(127,171),(153,206),(179,241),(26,35),(185,249),(159,214),(133,179),(107,144),(188,253),(81,109),(136,183),(55,74),(139,187),(84,113),(113,152),(142,191),(171,230),(29,39),(177,238),(148,199),(119,160),(90,121),(151,203),(61,82),(154,207),(93,125),(125,168),(157,211),(189,254),(32,43),(163,219),(131,176),(99,133),(166,223),(67,90),(169,227),(102,137),(137,184),(172,231),(35,47),(178,239),(143,192),(108,145),(181,243),(73,98),(184,247),(111,149),(149,200),(187,251),(38,51),(155,208),(117,157),(79,106),(120,161),(161,216),(41,55),(167,224),(126,169),(85,114),(129,173),(173,232),(44,59),(179,240),(135,181),(91,122),(138,185),(185,248),(47,63),(191,256),(144,193),(97,130),(147,197),(50,67),(153,205),(103,138),(156,209),(53,71),(162,217),(109,146),(165,221),(56,75),(171,229),(115,154),(174,233),(59,79),(180,241),(121,162),(183,245),(62,83),(189,253),(127,170),(65,87),(133,178),(68,91),(139,186),(71,95),(145,194),(74,99),(151,202),(77,103),(157,210),(80,107),(163,218),(83,111),(169,226),(86,115),(175,234),(89,119),(181,242),(92,123),(187,250),(95,127),(98,131),(101,135),(104,139),(107,143),(110,147),(113,151),(116,155),(119,159),(122,163),(125,167),(128,171),(131,175),(134,179),(137,183),(140,187),(143,191),(146,195),(149,199),(152,203),(155,207),(158,211),(161,215),(164,219),(167,223),(170,227),(173,231),(176,235),(179,239),(182,243),(185,247),(188,251),(191,255),(3,4),(190,253),(187,249),(184,245),(181,241),(178,237),(175,233),(172,229),(169,225),(166,221),(163,217),(160,213),(157,209),(154,205),(151,201),(148,197),(145,193),(142,189),(139,185),(136,181),(133,177),(130,173),(127,169),(124,165),(121,161),(118,157),(115,153),(112,149),(109,145),(106,141),(103,137),(100,133),(97,129),(191,254),(94,125),(185,246),(91,121),(179,238),(88,117),(173,230),(85,113),(167,222),(82,109),(161,214),(79,105),(155,206),(76,101),(149,198),(73,97),(143,190),(70,93),(137,182),(67,89),(131,174),(64,85),(189,251),(125,166),(186,247),(61,81),(180,239),(119,158),(177,235),(58,77),(171,227),(113,150),(168,223),(55,73),(162,215),(107,142),(159,211),(52,69),(153,203),(101,134),(150,199),(49,65),(193,256),(144,191),(95,126),(141,187),(187,248),(46,61),(181,240),(135,179),(89,118),(132,175),(175,232),(43,57),(169,224),(126,167),(83,110),(123,163),(163,216),(40,53),(157,208),(117,155),(77,102),(191,253),(114,151),(151,200),(188,249),(37,49),(182,241),(145,192),(108,143),(179,237),(71,94),(176,233),(105,139),(139,184),(173,229),(34,45),(167,221),(133,176),(99,131),(164,217),(65,86),(161,213),(96,127),(127,168),(158,209),(189,250),(31,41),(183,242),(152,201),(121,160),(90,119),(149,197),(59,78),(146,193),(87,115),(115,152),(143,189),(171,226),(28,37),(193,255),(165,218),(137,181),(109,144),(190,251),(81,107),(134,177),(187,247),(53,70),(184,243),(131,173),(78,103),(181,239),(103,136),(128,169),(153,202),(178,235),(25,33),(172,227),(147,194),(122,161),(97,128),(169,223),(72,95),(191,252),(119,157),(166,219),(47,62),(163,215),(116,153),(185,244),(69,91),(160,211),(91,120),(113,149),(135,178),(157,207),(179,236),(22,29),(173,228),(151,199),(129,170),(107,141),(192,253),(85,112),(148,195),(63,83),(167,220),(104,137),(145,191),(186,245),(41,54),(183,241),(142,187),(101,133),(161,212),(60,79),(139,183),(79,104),(177,233),(98,129),(117,154),(136,179),(155,204),(174,229),(193,254),(19,25),(187,246),(168,221),(149,196),(130,171),(111,146),(92,121),(165,217),(73,96),(127,167),(181,238),(54,71),(143,188),(89,117),(124,163),(159,209),(194,255),(35,46),(191,251),(156,205),(121,159),(86,113),(137,180),(188,247),(51,67),(169,222),(118,155),(185,243),(67,88),(150,197),(83,109),(182,239),(99,130),(115,151),(131,172),(147,193),(163,214),(179,235),(195,256),(16,21),(189,248),(173,227),(157,206),(141,185),(125,164),(109,143),(93,122),(170,223),(77,101),(138,181),(61,80),(167,219),(106,139),(151,198),(45,59),(164,215),(119,156),(193,253),(74,97),(177,232),(103,135),(132,173),(161,211),(190,249),(29,38),(187,245),(158,207),(129,169),(100,131),(171,224),(71,93),(184,241),(113,148),(155,203),(42,55),(181,237),(139,182),(97,127),(152,199),(55,72),(178,233),(123,161),(191,250),(68,89),(149,195),(81,106),(175,229),(94,123),(107,140),(120,157),(133,174),(146,191),(159,208),(172,225),(185,242),(13,17),(192,251),(179,234),(166,217),(153,200),(140,183),(127,166),(114,149),(101,132),(189,247),(88,115),(163,213),(75,98),(137,179),(62,81),(173,226),(111,145),(160,209),(49,64),(183,239),(134,175),(85,111),(121,158),(157,205),(193,252),(36,47),(167,218),(131,171),(95,124),(154,201),(59,77),(141,184),(82,107),(187,244),(105,137),(128,167),(151,197),(174,227),(23,30),(194,253),(171,223),(148,193),(125,163),(102,133),(181,236),(79,103),(135,176),(191,249),(56,73),(145,189),(89,116),(122,159),(155,202),(188,245),(33,43),(175,228),(142,185),(109,142),(185,241),(76,99),(195,254),(119,155),(162,211),(43,56),(182,237),(139,181),(96,125),(149,194),(53,69),(169,220),(116,151),(179,233),(63,82),(136,177),(73,95),(156,203),(83,108),(176,229),(93,121),(196,255),(103,134),(113,147),(123,160),(133,173),(143,186),(153,199),(163,212),(173,225),(183,238),(193,251),(10,13),(197,256),(187,243),(177,230),(167,217),(157,204),(147,191),(137,178),(127,165),(117,152),(107,139),(97,126),(184,239),(87,113),(164,213),(77,100),(144,187),(67,87),(191,248),(124,161),(181,235),(57,74),(161,209),(104,135),(151,196),(47,61),(178,231),(131,170),(84,109),(121,157),(158,205),(195,253),(37,48),(175,227),(138,179),(101,131),(165,214),(64,83),(155,201),(91,118),(118,153),(145,188),(172,223),(27,35),(179,232),(152,197),(125,162),(98,127),(169,219),(71,92),(186,241),(115,149),(159,206),(44,57),(193,250),(149,193),(105,136),(166,215),(61,79),(139,180),(78,101),(173,224),(95,123),(112,145),(129,167),(146,189),(163,211),(180,233),(197,255),(17,22),(194,251),(177,229),(160,207),(143,185),(126,163),(109,141),(92,119),(167,216),(75,97),(133,172),(191,247),(58,75),(157,203),(99,128),(140,181),(181,234),(41,53),(188,243),(147,190),(106,137),(171,221),(65,84),(154,199),(89,115),(113,146),(137,177),(161,208),(185,239),(24,31),(175,226),(151,195),(127,164),(103,133),(182,235),(79,102),(134,173),(189,244),(55,71),(196,253),(141,182),(86,111),(117,151),(148,191),(179,231),(31,40),(193,249),(162,209),(131,169),(100,129),(169,218),(69,89),(176,227),(107,138),(145,187),(183,236),(38,49),(197,254),(159,205),(121,156),(83,107),(128,165),(173,223),(45,58),(187,241),(142,183),(97,125),(149,192),(52,67),(163,210),(111,143),(170,219),(59,76),(184,237),(125,161),(191,246),(66,85),(139,179),(73,94),(153,197),(80,103),(167,215),(87,112),(181,233),(94,121),(195,251),(101,130),(108,139),(115,148),(122,157),(129,166),(136,175),(143,184),(150,193),(157,202),(164,211),(171,220),(178,229),(185,238),(192,247),(199,256),(7,9),(193,248),(186,239),(179,230),(172,221),(165,212),(158,203),(151,194),(144,185),(137,176),(130,167),(123,158),(116,149),(109,140),(102,131),(197,253),(95,122),(183,235),(88,113),(169,217),(81,104),(155,199),(74,95),(141,181),(67,86),(194,249),(127,163),(187,240),(60,77),(173,222),(113,145),(166,213),(53,68),(152,195),(99,127),(145,186),(191,245),(46,59),(177,227),(131,168),(85,109),(124,159),(163,209),(39,50),(188,241),(149,191),(110,141),(181,232),(71,91),(174,223),(103,132),(135,173),(167,214),(199,255),(32,41),(185,237),(153,196),(121,155),(89,114),(146,187),(57,73),(196,251),(139,178),(82,105),(189,242),(107,137),(132,169),(157,201),(182,233),(25,32),(193,247),(168,215),(143,183),(118,151),(93,119),(161,206),(68,87),(179,229),(111,142),(154,197),(197,252),(43,55),(190,243),(147,188),(104,133),(165,211),(61,78),(140,179),(79,101),(176,225),(97,124),(115,147),(133,170),(151,193),(169,216),(187,239),(18,23),(191,244),(173,221),(155,198),(137,175),(119,152),(101,129),(184,235),(83,106),(148,189),(65,83),(177,226),(112,143),(159,203),(47,60),(170,217),(123,157),(199,254),(76,97),(181,231),(105,134),(134,171),(163,208),(192,245),(29,37),(185,236),(156,199),(127,162),(98,125),(167,213),(69,88),(178,227),(109,139),(149,190),(189,241),(40,51),(171,218),(131,167),(91,116),(142,181),(193,246),(51,65),(164,209),(113,144),(175,223),(62,79),(197,251),(135,172),(73,93),(157,200),(84,107),(179,228),(95,121),(201,256),(106,135),(117,149),(128,163),(139,177),(150,191),(161,205),(172,219),(183,233),(194,247),(11,14),(191,243),(180,229),(169,215),(158,201),(147,187),(136,173),(125,159),(114,145),(103,131),(195,248),(92,117),(173,220),(81,103),(151,192),(70,89),(199,253),(129,164),(188,239),(59,75),(166,211),(107,136),(155,197),(48,61),(181,230),(133,169),(85,108),(122,155),(159,202),(196,249),(37,47),(174,221),(137,174),(100,127),(163,207),(63,80),(152,193),(89,113),(115,146),(141,179),(167,212),(193,245),(26,33),(197,250),(171,217),(145,184),(119,151),(93,118),(160,203),(67,85),(175,222),(108,137),(149,189),(190,241),(41,52),(179,227),(138,175),(97,123),(153,194),(56,71),(183,232),(127,161),(198,251),(71,90),(157,199),(86,109),(187,237),(101,128),(116,147),(131,166),(146,185),(161,204),(176,223),(191,242),(15,19),(199,252),(184,233),(169,214),(154,195),(139,176),(124,157),(109,138),(94,119),(173,219),(79,100),(143,181),(64,81),(177,224),(113,143),(162,205),(49,62),(181,229),(132,167),(83,105),(200,253),(117,148),(151,191),(185,234),(34,43),(189,239),(155,196),(121,153),(87,110),(140,177),(193,244),(53,67),(178,225),(125,158),(197,249),(72,91),(163,206),(91,115),(201,254),(110,139),(129,163),(148,187),(167,211),(186,235),(19,24),(194,245),(175,221),(156,197),(137,173),(118,149),(99,125),(179,226),(80,101),(141,178),(202,255),(61,77),(164,207),(103,130),(145,183),(187,236),(42,53),(191,241),(149,188),(107,135),(172,217),(65,82),(153,193),(88,111),(199,251),(111,140),(134,169),(157,198),(180,227),(203,256),(23,29),(188,237),(165,208),(142,179),(119,150),(96,121),(169,213),(73,92),(196,247),(123,155),(173,218),(50,63),(177,223),(127,160),(77,97),(181,228),(104,131),(131,165),(158,199),(185,233),(27,34),(193,243),(166,209),(139,175),(112,141),(197,248),(85,107),(143,180),(201,253),(58,73),(147,185),(89,112),(120,151),(151,190),(182,229),(31,39),(190,239),(159,200),(128,161),(97,122),(163,205),(66,83),(167,210),(101,127),(136,171),(171,215),(35,44),(179,225),(144,181),(109,137),(183,230),(74,93),(187,235),(113,142),(152,191),(191,240),(39,49),(199,250),(160,201),(121,152),(203,255),(82,103),(125,157),(168,211),(43,54),(176,221),(133,167),(90,113),(137,172),(184,231),(47,59),(192,241),(145,182),(98,123),(149,187),(200,251),(51,64),(157,197),(106,133),(161,202),(55,69),(169,212),(114,143),(173,217),(59,74),(181,227),(122,153),(185,232),(63,79),(193,242),(130,163),(197,247),(67,84),(138,173),(71,89),(146,183),(75,94),(154,193),(79,99),(162,203),(83,104),(170,213),(87,109),(178,223),(91,114),(186,233),(95,119),(194,243),(99,124),(202,253),(103,129),(107,134),(111,139),(115,144),(119,149),(123,154),(127,159),(131,164),(135,169),(139,174),(143,179),(147,184),(151,189),(155,194),(159,199),(163,204),(167,209),(171,214),(175,219),(179,224),(183,229),(187,234),(191,239),(195,244),(199,249),(203,254),(4,5),(205,256),(201,251),(197,246),(193,241),(189,236),(185,231),(181,226),(177,221),(173,216),(169,211),(165,206),(161,201),(157,196),(153,191),(149,186),(145,181),(141,176),(137,171),(133,166),(129,161),(125,156),(121,151),(117,146),(113,141),(109,136),(105,131),(101,126),(198,247),(97,121),(190,237),(93,116),(182,227),(89,111),(174,217),(85,106),(166,207),(81,101),(158,197),(77,96),(150,187),(73,91),(142,177),(69,86),(203,253),(134,167),(199,248),(65,81),(191,238),(126,157),(187,233),(61,76),(179,223),(118,147),(175,218),(57,71),(167,208),(110,137),(163,203),(53,66),(155,193),(102,127),(151,188),(200,249),(49,61),(192,239),(143,178),(94,117),(139,173),(184,229),(45,56),(176,219),(131,163),(86,107),(127,158),(168,209),(41,51),(201,250),(160,199),(119,148),(197,245),(78,97),(193,240),(115,143),(152,189),(189,235),(37,46),(181,225),(144,179),(107,133),(177,220),(70,87),(173,215),(103,128),(136,169),(169,210),(202,251),(33,41),(194,241),(161,200),(128,159),(95,118),(157,195),(62,77),(153,190),(91,113),(120,149),(149,185),(178,221),(29,36),(199,247),(170,211),(141,175),(112,139),(195,242),(83,103),(137,170),(191,237),(54,67),(187,232),(133,165),(79,98),(183,227),(104,129),(129,160),(154,191),(179,222),(204,253),(25,31),(196,243),(171,212),(146,181),(121,150),(96,119),(167,207),(71,88),(188,233),(117,145),(163,202),(46,57),(205,254),(159,197),(113,140),(180,223),(67,83),(155,192),(88,109),(197,244),(109,135),(130,161),(151,187),(172,213),(193,239),(21,26),(206,255),(185,229),(164,203),(143,177),(122,151),(101,125),(181,224),(80,99),(139,172),(198,245),(59,73),(156,193),(97,120),(135,167),(173,214),(38,47),(207,256),(169,209),(131,162),(93,115),(148,183),(203,251),(55,68),(182,225),(127,157),(199,246),(72,89),(161,199),(89,110),(195,241),(106,131),(123,152),(140,173),(157,194),(174,215),(191,236),(17,21),(200,247),(183,226),(166,205),(149,184),(132,163),(115,142),(98,121),(179,221),(81,100),(145,179),(64,79),(175,216),(111,137),(158,195),(205,253),(47,58),(171,211),(124,153),(201,248),(77,95),(184,227),(107,132),(137,169),(167,206),(197,243),(30,37),(193,238),(163,201),(133,164),(103,127),(176,217),(73,90),(189,233),(116,143),(159,196),(202,249),(43,53),(185,228),(142,175),(99,122),(155,191),(56,69),(181,223),(125,154),(194,239),(69,85),(151,186),(82,101),(177,218),(95,117),(203,250),(108,133),(121,149),(134,165),(147,181),(160,197),(173,213),(186,229),(199,245),(13,16),(204,251),(191,235),(178,219),(165,203),(152,187),(139,171),(126,155),(113,139),(100,123),(187,230),(87,107),(161,198),(74,91),(135,166),(196,241),(61,75),(170,209),(109,134),(157,193),(205,252),(48,59),(179,220),(131,161),(83,102),(201,247),(118,145),(153,188),(188,231),(35,43),(197,242),(162,199),(127,156),(92,113),(149,183),(206,253),(57,70),(193,237),(136,167),(79,97),(180,221),(101,124),(123,151),(145,178),(167,205),(189,232),(22,27),(207,254),(185,227),(163,200),(141,173),(119,146),(97,119),(172,211),(75,92),(203,249),(128,157),(181,222),(53,65),(190,233),(137,168),(84,103),(199,244),(115,141),(146,179),(177,217),(208,255),(31,38),(195,239),(164,201),(133,163),(102,125),(173,212),(71,87),(182,223),(111,136),(151,185),(191,234),(40,49),(209,256),(169,207),(129,158),(89,109),(138,169),(187,229),(49,60),(205,251),(156,191),(107,131),(165,202),(58,71),(183,224),(125,153),(192,235),(67,82),(143,175),(76,93),(161,197),(85,104),(179,219),(94,115),(197,241),(103,126),(112,137),(121,148),(130,159),(139,170),(148,181),(157,192),(166,203),(175,214),(184,225),(193,236),(202,247),(9,11),(203,248),(194,237),(185,226),(176,215),(167,204),(158,193),(149,182),(140,171),(131,160),(122,149),(113,138),(104,127),(199,243),(95,116),(181,221),(86,105),(163,199),(77,94),(145,177),(68,83),(195,238),(127,155),(186,227),(59,72),(168,205),(109,133),(159,194),(209,255),(50,61),(191,233),(141,172),(91,111),(132,161),(173,211),(41,50),(196,239),(155,189),(114,139),(187,228),(73,89),(178,217),(105,128),(137,167),(169,206),(201,245),(32,39),(183,223),(151,184),(119,145),(206,251),(87,106),(142,173),(197,240),(55,67),(188,229),(133,162),(78,95),(179,218),(101,123),(124,151),(147,179),(170,207),(193,235),(23,28),(198,241),(175,213),(152,185),(129,157),(106,129),(189,230),(83,101),(143,174),(203,247),(60,73),(157,191),(97,118),(134,163),(171,208),(208,253),(37,45),(199,242),(162,197),(125,152),(88,107),(139,169),(190,231),(51,62),(167,203),(116,141),(181,220),(65,79),(209,254),(144,175),(79,96),(172,209),(93,113),(200,243),(107,130),(121,147),(135,164),(149,181),(163,198),(177,215),(191,232),(205,249),(14,17),(201,244),(187,227),(173,210),(159,193),(145,176),(131,159),(117,142),(103,125),(192,233),(89,108),(164,199),(75,91),(211,256),(136,165),(197,239),(61,74),(169,205),(108,131),(155,188),(202,245),(47,57),(174,211),(127,154),(207,251),(80,97),(193,234),(113,137),(146,177),(179,217),(33,40),(184,223),(151,183),(118,143),(203,246),(85,103),(137,166),(189,229),(52,63),(175,212),(123,149),(194,235),(71,86),(161,195),(90,109),(199,241),(109,132),(128,155),(147,178),(166,201),(185,224),(204,247),(19,23),(195,236),(176,213),(157,190),(138,167),(119,144),(100,121),(181,219),(81,98),(143,173),(205,248),(62,75),(167,202),(105,127),(148,179),(191,231),(43,52),(196,237),(153,185),(110,133),(177,214),(67,81),(158,191),(91,110),(206,249),(115,139),(139,168),(163,197),(187,226),(211,255),(24,29),(197,238),(173,209),(149,180),(125,151),(101,122),(178,215),(77,93),(207,250),(130,157),(183,221),(53,64),(188,227),(135,163),(82,99),(193,233),(111,134),(140,169),(169,204),(198,239),(29,35),(208,251),(179,216),(150,181),(121,146),(92,111),(155,187),(63,76),(160,193),(97,117),(131,158),(165,199),(199,240),(34,41),(209,252),(175,211),(141,170),(107,129),(180,217),(73,88),(185,223),(112,135),(151,182),(190,229),(39,47),(200,241),(161,194),(122,147),(205,247),(83,100),(210,253),(127,153),(171,206),(44,53),(181,218),(137,165),(93,112),(142,171),(191,230),(49,59),(201,242),(152,183),(103,124),(157,189),(211,254),(54,65),(167,201),(113,136),(172,207),(59,71),(182,219),(123,148),(187,225),(64,77),(197,237),(133,160),(202,243),(69,83),(212,255),(143,172),(74,89),(153,184),(79,95),(163,196),(84,101),(173,208),(89,107),(183,220),(94,113),(193,232),(99,119),(203,244),(104,125),(213,256),(109,131),(114,137),(119,143),(124,149),(129,155),(134,161),(139,167),(144,173),(149,179),(154,185),(159,191),(164,197),(169,203),(174,209),(179,215),(184,221),(189,227),(194,233),(199,239),(204,245),(209,251),(5,6),(211,253),(206,247),(201,241),(196,235),(191,229),(186,223),(181,217),(176,211),(171,205),(166,199),(161,193),(156,187),(151,181),(146,175),(141,169),(136,163),(131,157),(126,151),(121,145),(116,139),(111,133),(106,127),(207,248),(101,121),(197,236),(96,115),(187,224),(91,109),(177,212),(86,103),(167,200),(81,97),(157,188),(76,91),(147,176),(71,85),(208,249),(137,164),(203,243),(66,79),(193,231),(127,152),(188,225),(61,73),(178,213),(117,140),(173,207),(56,67),(163,195),(107,128),(158,189),(209,250),(51,61),(199,238),(148,177),(97,116),(143,171),(189,226),(46,55),(179,214),(133,159),(87,104),(128,153),(169,202),(210,251),(41,49),(200,239),(159,190),(118,141),(195,233),(77,92),(190,227),(113,135),(149,178),(185,221),(36,43),(211,252),(175,209),(139,166),(103,123),(170,203),(67,80),(165,197),(98,117),(129,154),(160,191),(191,228),(31,37),(212,253),(181,216),(150,179),(119,142),(207,247),(88,105),(145,173),(202,241),(57,68),(197,235),(140,167),(83,99),(192,229),(109,130),(135,161),(161,192),(187,223),(213,254),(26,31),(203,242),(177,211),(151,180),(125,149),(99,118),(172,205),(73,87),(193,230),(120,143),(167,199),(214,255),(47,56),(209,249),(162,193),(115,137),(183,218),(68,81),(157,187),(89,106),(199,237),(110,131),(131,156),(152,181),(173,206),(194,231),(215,256),(21,25),(205,244),(184,219),(163,194),(142,169),(121,144),(100,119),(179,213),(79,94),(137,163),(195,232),(58,69),(211,251),(153,182),(95,113),(132,157),(169,201),(206,245),(37,44),(201,239),(164,195),(127,151),(90,107),(143,170),(196,233),(53,63),(175,208),(122,145),(191,227),(69,82),(154,183),(85,101),(186,221),(101,120),(117,139),(133,158),(149,177),(165,196),(181,215),(197,234),(213,253),(16,19),(203,241),(187,222),(171,203),(155,184),(139,165),(123,146),(107,127),(198,235),(91,108),(166,197),(75,89),(209,248),(134,159),(193,229),(59,70),(161,191),(102,121),(145,172),(188,223),(43,51),(199,236),(156,185),(113,134),(183,217),(70,83),(167,198),(97,115),(124,147),(151,179),(178,211),(205,243),(27,32),(200,237),(173,205),(146,173),(119,141),(211,250),(92,109),(157,186),(65,77),(168,199),(103,122),(141,167),(179,212),(38,45),(201,238),(163,193),(125,148),(212,251),(87,103),(136,161),(185,219),(49,58),(207,245),(158,187),(109,129),(169,200),(60,71),(191,226),(131,155),(202,239),(71,84),(153,181),(82,97),(175,207),(93,110),(197,233),(104,123),(115,136),(126,149),(137,162),(148,175),(159,188),(170,201),(181,214),(192,227),(203,240),(214,253),(11,13),(215,254),(204,241),(193,228),(182,215),(171,202),(160,189),(149,176),(138,163),(127,150),(116,137),(105,124),(199,235),(94,111),(177,209),(83,98),(155,183),(72,85),(205,242),(133,157),(194,229),(61,72),(172,203),(111,131),(161,190),(211,249),(50,59),(189,223),(139,164),(89,105),(217,256),(128,151),(167,197),(206,243),(39,46),(184,217),(145,171),(106,125),(173,204),(67,79),(162,191),(95,112),(123,145),(151,178),(179,211),(207,244),(28,33),(213,251),(185,218),(157,185),(129,152),(101,119),(174,205),(73,86),(191,225),(118,139),(163,192),(208,245),(45,53),(197,232),(152,179),(107,126),(169,199),(62,73),(203,239),(141,166),(79,93),(175,206),(96,113),(209,246),(113,133),(130,153),(147,173),(164,193),(181,213),(198,233),(215,253),(17,20),(210,247),(193,227),(176,207),(159,187),(142,167),(125,147),(108,127),(199,234),(91,107),(165,194),(74,87),(205,241),(131,154),(188,221),(57,67),(211,248),(154,181),(97,114),(137,161),(177,208),(217,255),(40,47),(183,215),(143,168),(103,121),(166,195),(63,74),(212,249),(149,175),(86,101),(195,229),(109,128),(132,155),(155,182),(178,209),(201,236),(23,27),(213,250),(190,223),(167,196),(144,169),(121,142),(98,115),(173,203),(75,88),(202,237),(127,149),(179,210),(52,61),(185,217),(133,156),(214,251),(81,95),(191,224),(110,129),(139,163),(168,197),(197,231),(29,34),(209,245),(180,211),(151,177),(122,143),(215,252),(93,109),(157,184),(64,75),(163,191),(99,116),(134,157),(169,198),(204,239),(35,41),(216,253),(181,212),(146,171),(111,130),(187,219),(76,89),(193,226),(117,137),(158,185),(199,233),(41,48),(211,247),(170,199),(129,151),(217,254),(88,103),(135,158),(182,213),(47,55),(194,227),(147,172),(100,117),(153,179),(206,241),(53,62),(218,255),(165,193),(112,131),(171,200),(59,69),(183,214),(124,145),(189,221),(65,76),(201,235),(136,159),(207,242),(71,83),(219,256),(148,173),(77,90),(160,187),(83,97),(172,201),(89,104),(184,215),(95,111),(196,229),(101,118),(208,243),(107,125),(113,132),(119,139),(125,146),(131,153),(137,160),(143,167),(149,174),(155,181),(161,188),(167,195),(173,202),(179,209),(185,216),(191,223),(197,230),(203,237),(209,244),(215,251),(6,7),(217,253),(211,246),(205,239),(199,232),(193,225),(187,218),(181,211),(175,204),(169,197),(163,190),(157,183),(151,176),(145,169),(139,162),(133,155),(127,148),(121,141),(115,134),(109,127),(212,247),(103,120),(200,233),(97,113),(188,219),(91,106),(176,205),(85,99),(164,191),(79,92),(152,177),(73,85),(213,248),(140,163),(207,241),(67,78),(195,227),(128,149),(189,220),(61,71),(177,206),(116,135),(171,199),(55,64),(214,249),(159,185),(104,121),(153,178),(202,235),(49,57),(190,221),(141,164),(92,107),(135,157),(178,207),(43,50),(209,243),(166,193),(123,143),(203,236),(80,93),(197,229),(117,136),(154,179),(191,222),(37,43),(216,251),(179,208),(142,165),(105,122),(173,201),(68,79),(167,194),(99,115),(130,151),(161,187),(192,223),(31,36),(211,245),(180,209),(149,173),(118,137),(205,238),(87,101),(143,166),(199,231),(56,65),(193,224),(137,159),(218,253),(81,94),(187,217),(106,123),(131,152),(156,181),(181,210),(206,239),(25,29),(219,254),(194,225),(169,196),(144,167),(119,138),(213,247),(94,109),(163,189),(69,80),(182,211),(113,131),(157,182),(201,233),(44,51),(195,226),(151,175),(107,124),(170,197),(63,73),(208,241),(145,168),(82,95),(183,212),(101,117),(221,256),(120,139),(139,161),(158,183),(177,205),(196,227),(215,249),(19,22),(203,235),(184,213),(165,191),(146,169),(127,147),(108,125),(197,228),(89,103),(159,184),(70,81),(191,221),(121,140),(172,199),(51,59),(185,214),(134,155),(217,251),(83,96),(198,229),(115,133),(147,170),(179,207),(211,244),(32,37),(205,237),(173,200),(141,163),(109,126),(186,215),(77,89),(199,230),(122,141),(167,193),(212,245),(45,52),(193,223),(148,171),(103,119),(161,186),(219,253),(58,67),(187,216),(129,149),(200,231),(71,82),(155,179),(84,97),(181,209),(97,112),(207,239),(110,127),(123,142),(136,157),(149,172),(162,187),(175,202),(188,217),(201,232),(214,247),(13,15),(215,248),(202,233),(189,218),(176,203),(163,188),(150,173),(137,158),(124,143),(111,128),(209,241),(98,113),(183,211),(85,98),(157,181),(72,83),(203,234),(131,151),(190,219),(59,68),(164,189),(105,121),(151,174),(197,227),(46,53),(217,250),(171,197),(125,144),(204,235),(79,91),(191,220),(112,129),(145,167),(178,205),(211,243),(33,38),(218,251),(185,213),(152,175),(119,137),(205,236),(86,99),(139,160),(192,221),(53,61),(179,206),(126,145),(199,229),(73,84),(166,191),(93,107),(206,237),(113,130),(133,153),(153,176),(173,199),(193,222),(213,245),(20,23),(207,238),(187,215),(167,192),(147,169),(127,146),(107,123),(194,223),(87,100),(154,177),(221,254),(67,77),(181,208),(114,131),(161,185),(208,239),(47,54),(215,247),(168,193),(121,139),(195,224),(74,85),(175,201),(101,116),(128,147),(155,178),(182,209),(209,240),(27,31),(223,256),(196,225),(169,194),(142,163),(115,132),(203,233),(88,101),(149,171),(210,241),(61,70),(217,249),(156,179),(95,109),(129,148),(163,187),(197,226),(34,39),(211,242),(177,203),(143,164),(109,125),(184,211),(75,86),(191,219),(116,133),(157,180),(198,227),(41,47),(212,243),(171,196),(130,149),(219,251),(89,102),(137,157),(185,212),(48,55),(199,228),(151,173),(103,118),(158,181),(213,244),(55,63),(172,197),(117,134),(179,205),(62,71),(193,221),(131,150),(200,229),(69,79),(214,245),(145,166),(221,253),(76,87),(159,182),(83,95),(173,198),(90,103),(187,214),(97,111),(201,230),(104,119),(215,246),(111,127),(118,135),(125,143),(132,151),(139,159),(146,167),(153,175),(160,183),(167,191),(174,199),(181,207),(188,215),(195,223),(202,231),(209,239),(216,247),(223,255),(7,8),(218,249),(211,241),(204,233),(197,225),(190,217),(183,209),(176,201),(169,193),(162,185),(155,177),(148,169),(141,161),(134,153),(127,145),(120,137),(113,129),(219,250),(106,121),(205,234),(99,113),(191,218),(92,105),(177,202),(85,97),(163,186),(78,89),(149,170),(220,251),(71,81),(206,235),(135,154),(199,227),(64,73),(185,211),(121,138),(178,203),(57,65),(221,252),(164,187),(107,122),(157,179),(207,236),(50,57),(193,220),(143,163),(93,106),(136,155),(179,204),(222,253),(43,49),(208,237),(165,188),(122,139),(201,229),(79,90),(194,221),(115,131),(151,172),(187,213),(223,254),(36,41),(209,238),(173,197),(137,156),(101,115),(166,189),(65,74),(224,255),(159,181),(94,107),(217,247),(123,140),(152,173),(181,206),(210,239),(29,33),(225,256),(196,223),(167,190),(138,157),(109,124),(189,215),(80,91),(211,240),(131,149),(182,207),(51,58),(175,199),(124,141),(197,224),(73,83),(168,191),(95,108),(212,241),(117,133),(139,158),(161,183),(183,208),(205,233),(22,25),(213,242),(191,217),(169,192),(147,167),(125,142),(103,117),(184,209),(81,92),(221,251),(140,159),(199,226),(59,67),(214,243),(155,176),(96,109),(133,151),(170,193),(207,235),(37,42),(200,227),(163,185),(126,143),(215,244),(89,101),(141,160),(193,219),(52,59),(223,253),(171,194),(119,135),(186,211),(67,76),(216,245),(149,169),(82,93),(179,203),(97,110),(209,237),(112,127),(127,144),(142,161),(157,178),(172,195),(187,212),(202,229),(217,246),(15,17),(218,247),(203,230),(188,213),(173,196),(158,179),(143,162),(128,145),(113,128),(211,239),(98,111),(181,205),(83,94),(151,171),(219,248),(68,77),(189,214),(121,137),(174,197),(53,60),(197,223),(144,163),(91,103),(220,249),(129,146),(167,189),(205,232),(38,43),(213,241),(175,198),(137,155),(99,112),(160,181),(221,250),(61,69),(206,233),(145,164),(84,95),(191,216),(107,121),(130,147),(153,173),(176,199),(199,225),(222,251),(23,26),(215,243),(192,217),(169,191),(146,165),(123,139),(223,252),(100,113),(177,200),(77,87),(208,235),(131,148),(185,209),(54,61),(193,218),(139,157),(224,253),(85,96),(201,227),(116,131),(147,166),(178,201),(209,236),(31,35),(225,254),(194,219),(163,184),(132,149),(101,114),(171,193),(70,79),(179,202),(109,123),(148,167),(187,211),(226,255),(39,44),(203,229),(164,185),(125,141),(211,238),(86,97),(219,247),(133,150),(180,203),(227,256),(47,53),(196,221),(149,168),(102,115),(157,177),(212,239),(55,62),(173,195),(118,133),(181,204),(63,71),(197,222),(134,151),(205,231),(71,80),(221,249),(150,169),(79,89),(166,187),(87,98),(182,205),(95,107),(198,223),(103,116),(214,241),(111,125),(119,134),(127,143),(135,152),(143,161),(151,170),(159,179),(167,188),(175,197),(183,206),(191,215),(199,224),(207,233),(215,242),(223,251),(8,9),(225,253),(217,244),(209,235),(201,226),(193,217),(185,208),(177,199),(169,190),(161,181),(153,172),(145,163),(137,154),(129,145),(121,136),(113,127),(218,245),(105,118),(202,227),(97,109),(186,209),(89,100),(170,191),(81,91),(154,173),(227,255),(73,82),(211,237),(138,155),(203,228),(65,73),(187,210),(122,137),(179,201),(57,64),(220,247),(163,183),(106,119),(155,174),(204,229),(49,55),(188,211),(139,156),(90,101),(221,248),(131,147),(172,193),(213,239),(41,46),(197,221),(156,175),(115,129),(189,212),(74,83),(181,203),(107,120),(140,157),(173,194),(206,231),(33,37),(223,250),(190,213),(157,176),(124,139),(215,241),(91,102),(149,167),(207,232),(58,65),(199,223),(141,158),(224,251),(83,93),(191,214),(108,121),(133,149),(158,177),(183,205),(208,233),(25,28),(217,243),(192,215),(167,187),(142,159),(117,131),(209,234),(92,103),(159,178),(226,253),(67,75),(176,197),(109,122),(151,169),(193,216),(42,47),(227,254),(185,207),(143,160),(101,113),(160,179),(219,245),(59,66),(194,217),(135,151),(211,236),(76,85),(169,189),(93,104),(203,227),(110,123),(127,142),(144,161),(161,180),(178,199),(195,218),(212,237),(229,256),(17,19),(213,238),(196,219),(179,200),(162,181),(145,162),(128,143),(111,124),(205,229),(94,105),(171,191),(77,86),(214,239),(137,153),(197,220),(60,67),(223,249),(163,182),(103,115),(146,163),(189,211),(43,48),(198,221),(155,173),(112,125),(181,202),(69,77),(164,183),(95,106),(216,241),(121,135),(147,164),(173,193),(199,222),(225,251),(26,29),(217,242),(191,213),(165,184),(139,155),(113,126),(200,223),(87,97),(148,165),(209,233),(61,68),(218,243),(157,175),(96,107),(227,253),(131,146),(166,185),(201,224),(35,39),(219,244),(184,205),(149,166),(114,127),(193,215),(79,88),(202,225),(123,137),(167,186),(211,235),(44,49),(229,255),(185,206),(141,157),(97,108),(150,167),(203,226),(53,59),(221,246),(168,187),(115,128),(177,197),(62,69),(195,217),(133,148),(204,227),(71,79),(222,247),(151,168),(80,89),(169,188),(89,99),(187,208),(98,109),(205,228),(107,119),(223,248),(116,129),(125,139),(134,149),(143,159),(152,169),(161,179),(170,189),(179,199),(188,209),(197,219),(206,229),(215,239),(224,249),(9,10),(226,251),(217,241),(208,231),(199,221),(190,211),(181,201),(172,191),(163,181),(154,171),(145,161),(136,151),(127,141),(118,131),(227,252),(109,121),(209,232),(100,111),(191,212),(91,101),(173,192),(82,91),(155,172),(228,253),(73,81),(210,233),(137,152),(201,223),(64,71),(183,203),(119,132),(174,193),(229,254),(55,61),(211,234),(156,173),(101,112),(147,163),(193,214),(46,51),(221,245),(175,194),(129,143),(212,235),(83,92),(203,225),(120,133),(157,174),(194,215),(231,256),(37,41),(213,236),(176,195),(139,154),(102,113),(167,185),(65,72),(223,247),(158,175),(93,103),(214,237),(121,134),(149,165),(177,196),(205,227),(28,31),(215,238),(187,207),(159,176),(131,145),(103,114),(178,197),(75,83),(197,218),(122,135),(169,187),(216,239),(47,52),(207,229),(160,177),(113,125),(179,198),(66,73),(217,240),(151,167),(85,94),(189,209),(104,115),(227,251),(123,136),(142,157),(161,178),(180,199),(199,220),(218,241),(19,21),(219,242),(200,221),(181,200),(162,179),(143,158),(124,137),(229,253),(105,116),(191,211),(86,95),(153,169),(220,243),(67,74),(182,201),(115,127),(163,180),(211,233),(48,53),(221,244),(173,191),(125,138),(202,223),(77,85),(183,202),(106,117),(135,149),(164,181),(193,213),(222,245),(29,32),(213,235),(184,203),(155,171),(126,139),(223,246),(97,107),(165,182),(68,75),(175,193),(107,118),(146,161),(185,204),(224,247),(39,43),(205,226),(166,183),(127,140),(215,237),(88,97),(225,248),(137,151),(186,205),(49,54),(206,227),(157,173),(108,119),(167,184),(226,249),(59,65),(187,206),(128,141),(197,217),(69,76),(217,239),(148,163),(227,250),(79,87),(168,185),(89,98),(188,207),(99,109),(208,229),(109,120),(228,251),(119,131),(129,142),(139,153),(149,164),(159,175),(169,186),(179,197),(189,208),(199,219),(209,230),(219,241),(229,252),(10,11),(231,254),(221,243),(211,232),(201,221),(191,210),(181,199),(171,188),(161,177),(151,166),(141,155),(131,144),(121,133),(232,255),(111,122),(212,233),(101,111),(192,211),(91,100),(172,189),(81,89),(233,256),(152,167),(223,245),(71,78),(203,223),(132,145),(193,212),(61,67),(173,190),(112,123),(163,179),(214,235),(51,56),(194,213),(143,157),(92,101),(225,247),(133,146),(174,191),(215,236),(41,45),(195,214),(154,169),(113,124),(185,203),(72,79),(175,192),(103,113),(134,147),(165,181),(196,215),(227,249),(31,34),(207,227),(176,193),(145,159),(114,125),(197,216),(83,91),(218,239),(135,148),(187,205),(52,57),(229,251),(177,194),(125,137),(198,217),(73,80),(167,183),(94,103),(209,229),(115,126),(136,149),(157,172),(178,195),(199,218),(220,241),(21,23),(221,242),(200,219),(179,196),(158,173),(137,150),(116,127),(211,231),(95,104),(169,185),(74,81),(201,220),(127,139),(180,197),(233,255),(53,58),(191,209),(138,151),(223,244),(85,93),(202,221),(117,128),(149,163),(181,198),(213,233),(32,35),(203,222),(171,187),(139,152),(107,117),(182,199),(75,82),(193,211),(118,129),(161,176),(204,223),(43,47),(226,247),(183,200),(140,153),(97,106),(151,165),(205,224),(54,59),(227,248),(173,189),(119,130),(184,201),(65,71),(206,225),(141,154),(217,237),(76,83),(163,178),(87,95),(185,202),(98,107),(207,226),(109,119),(229,250),(120,131),(131,143),(142,155),(153,167),(164,179),(175,191),(186,203),(197,215),(208,227),(219,239),(230,251),(11,12),(232,253),(221,241),(210,229),(199,217),(188,205),(177,193),(166,181),(155,169),(144,157),(133,145),(122,133),(233,254),(111,121),(211,230),(100,109),(189,206),(89,97),(167,182),(78,85),(223,243),(145,158),(212,231),(67,73),(190,207),(123,134),(179,195),(235,256),(56,61),(213,232),(157,171),(101,110),(146,159),(191,208),(45,49),(214,233),(169,184),(124,135),(203,221),(79,86),(192,209),(113,123),(147,160),(181,197),(215,234),(34,37),(227,247),(193,210),(159,173),(125,136),(216,235),(91,99),(148,161),(205,223),(57,62),(194,211),(137,149),(217,236),(80,87),(183,199),(103,112),(229,249),(126,137),(149,162),(172,187),(195,212),(218,237),(23,25),(219,238),(196,213),(173,188),(150,163),(127,138),(231,251),(104,113),(185,201),(81,88),(220,239),(139,151),(197,214),(58,63),(209,227),(151,164),(93,101),(221,240),(128,139),(163,177),(198,215),(233,253),(35,38),(222,241),(187,203),(152,165),(117,127),(199,216),(82,89),(211,229),(129,140),(176,191),(223,242),(47,51),(200,217),(153,166),(106,115),(165,179),(224,243),(59,64),(189,205),(130,141),(201,218),(71,77),(225,244),(154,167),(83,90),(178,193),(95,103),(202,219),(107,116),(226,245),(119,129),(131,142),(143,155),(155,168),(167,181),(179,194),(191,207),(203,220),(215,233),(227,246),(12,13),(229,248),(217,235),(205,222),(193,209),(181,196),(169,183),(157,170),(145,157),(133,144),(121,131),(230,249),(109,118),(206,223),(97,105),(182,197),(85,92),(158,171),(231,250),(73,79),(207,224),(134,145),(195,211),(61,66),(232,251),(171,185),(110,119),(159,172),(208,225),(49,53),(233,252),(184,199),(135,146),(221,239),(86,93),(209,226),(123,133),(160,173),(197,213),(234,253),(37,40),(210,227),(173,187),(136,147),(235,254),(99,107),(161,174),(223,241),(62,67),(211,228),(149,161),(236,255),(87,94),(199,215),(112,121),(137,148),(162,175),(187,202),(212,229),(237,256),(25,27),(213,230),(188,203),(163,176),(138,149),(113,122),(201,217),(88,95),(151,163),(214,231),(63,68),(227,245),(164,177),(101,109),(139,150),(177,191),(215,232),(38,41),(203,219),(165,178),(127,137),(216,233),(89,96),(229,247),(140,151),(191,206),(51,55),(217,234),(166,179),(115,124),(179,193),(64,69),(205,221),(141,152),(218,235),(77,83),(167,180),(90,97),(193,208),(103,111),(219,236),(116,125),(129,139),(142,153),(155,167),(168,181),(181,195),(194,209),(207,223),(220,237),(233,251),(13,14),(235,253),(222,239),(209,225),(196,211),(183,197),(170,183),(157,169),(144,155),(131,141),(118,127),(223,240),(105,113),(197,212),(92,99),(171,184),(79,85),(224,241),(145,156),(211,227),(66,71),(185,199),(119,128),(172,185),(225,242),(53,57),(199,214),(146,157),(93,100),(226,243),(133,143),(173,186),(213,229),(40,43),(227,244),(187,201),(147,158),(107,115),(174,187),(67,72),(228,245),(161,173),(94,101),(215,231),(121,130),(148,159),(175,188),(202,217),(229,246),(27,29),(230,247),(203,218),(176,189),(149,160),(122,131),(217,233),(95,102),(163,175),(231,248),(68,73),(177,190),(109,117),(150,161),(191,205),(232,249),(41,44),(219,235),(178,191),(137,147),(233,250),(96,103),(151,162),(206,221),(55,59),(234,251),(179,192),(124,133),(193,207),(69,74),(221,237),(152,163),(235,252),(83,89),(180,193),(97,104),(208,223),(111,119),(236,253),(125,134),(139,149),(153,164),(167,179),(181,194),(195,209),(209,224),(223,239),(237,254),(14,15),(239,256),(225,241),(211,226),(197,211),(183,196),(169,181),(155,166),(141,151),(127,136),(113,121),(212,227),(99,106),(184,197),(85,91),(156,167),(227,243),(71,76),(199,213),(128,137),(185,198),(57,61),(214,229),(157,168),(100,107),(143,153),(186,199),(229,245),(43,46),(201,215),(158,169),(115,123),(187,200),(72,77),(173,185),(101,108),(231,247),(130,139),(159,170),(188,201),(217,232),(29,31),(218,233),(189,202),(160,171),(131,140),(233,249),(102,109),(175,187),(73,78),(190,203),(117,125),(161,172),(205,219),(44,47),(235,251),(191,204),(147,157),(103,110),(162,173),(221,236),(59,63),(192,205),(133,142),(207,221),(74,79),(237,253),(163,174),(89,95),(193,206),(104,111),(223,238),(119,127),(134,143),(149,159),(164,175),(179,191),(194,207),(209,223),(224,239),(239,255),(15,16),(226,241),(211,225),(196,209),(181,193),(166,177),(151,161),(136,145),(121,129),(227,242),(106,113),(197,210),(91,97),(167,178),(76,81),(213,227),(137,146),(198,211),(61,65),(229,244),(168,179),(107,114),(153,163),(199,212),(46,49),(215,229),(169,180),(123,131),(200,213),(77,82),(185,197),(108,115),(139,148),(170,181),(201,214),(232,247),(31,33),(233,248),(202,215),(171,182),(140,149),(109,116),(187,199),(78,83),(203,216),(125,133),(172,183),(219,233),(47,50),(204,217),(157,167),(110,117),(173,184),(236,251),(63,67),(205,218),(142,151),(221,235),(79,84),(174,185),(95,101),(206,219),(111,118),(238,253),(127,135),(143,152),(159,169),(175,186),(191,203),(207,220),(223,237),(239,254),(16,17),(241,256),(225,239),(209,222),(193,205),(177,188),(161,171),(145,154),(129,137),(113,120),(210,223),(97,103),(178,189),(81,86),(227,241),(146,155),(211,224),(65,69),(179,190),(114,121),(163,173),(212,225),(49,52),(229,243),(180,191),(131,139),(213,226),(82,87),(197,209),(115,122),(148,157),(181,192),(214,227),(33,35),(215,228),(182,193),(149,158),(116,123),(199,211),(83,88),(216,229),(133,141),(183,194),(233,247),(50,53),(217,230),(167,177),(117,124),(184,195),(67,71),(218,231),(151,160),(235,249),(84,89),(185,196),(101,107),(219,232),(118,125),(135,143),(152,161),(169,179),(186,197),(203,215),(220,233),(237,251),(17,18),(239,253),(222,235),(205,217),(188,199),(171,181),(154,163),(137,145),(120,127),(223,236),(103,109),(189,200),(86,91),(241,255),(155,164),(224,237),(69,73),(190,201),(121,128),(173,183),(225,238),(52,55),(191,202),(139,147),(226,239),(87,92),(209,221),(122,129),(157,166),(192,203),(227,240),(35,37),(228,241),(193,204),(158,167),(123,130),(211,223),(88,93),(229,242),(141,149),(194,205),(53,56),(230,243),(177,187),(124,131),(195,206),(71,75),(231,244),(160,169),(89,94),(196,207),(107,113),(232,245),(125,132),(143,151),(161,170),(179,189),(197,208),(215,227),(233,246),(18,19),(235,248),(217,229),(199,210),(181,191),(163,172),(145,153),(127,134),(236,249),(109,115),(200,211),(91,96),(164,173),(237,250),(73,77),(201,212),(128,135),(183,193),(238,251),(55,58),(202,213),(147,155),(239,252),(92,97),(221,233),(129,136),(166,175),(203,214),(240,253),(37,39),(241,254),(204,215),(167,176),(130,137),(223,235),(93,98),(242,255),(149,157),(205,216),(56,59),(243,256),(187,197),(131,138),(206,217),(75,79),(169,178),(94,99),(207,218),(113,119),(132,139),(151,159),(170,179),(189,199),(208,219),(227,239),(19,20),(229,241),(210,221),(191,201),(172,181),(153,161),(134,141),(115,121),(211,222),(96,101),(173,182),(77,81),(212,223),(135,142),(193,203),(58,61),(213,224),(155,163),(97,102),(233,245),(136,143),(175,184),(214,225),(39,41),(215,226),(176,185),(137,144),(235,247),(98,103),(157,165),(216,227),(59,62),(197,207),(138,145),(217,228),(79,83),(178,187),(99,104),(218,229),(119,125),(139,146),(159,167),(179,188),(199,209),(219,230),(239,251),(20,21),(241,253),(221,232),(201,211),(181,190),(161,169),(141,148),(121,127),(222,233),(101,106),(182,191),(81,85),(223,234),(142,149),(203,213),(61,64),(224,235),(163,171),(102,107),(143,150),(184,193),(225,236),(41,43),(226,237),(185,194),(144,151),(103,108),(165,173),(227,238),(62,65),(207,217),(145,152),(228,239),(83,87),(187,196),(104,109),(229,240),(125,131),(146,153),(167,175),(188,197),(209,219),(230,241),(21,22),(232,243),(211,221),(190,199),(169,177),(148,155),(127,133),(233,244),(106,111),(191,200),(85,89),(234,245),(149,156),(213,223),(64,67),(235,246),(171,179),(107,112),(150,157),(193,202),(236,247),(43,45),(237,248),(194,203),(151,158),(108,113),(173,181),(238,249),(65,68),(217,227),(152,159),(239,250),(87,91),(196,205),(109,114),(240,251),(131,137),(153,160),(175,183),(197,206),(219,229),(241,252),(22,23),(243,254),(221,231),(199,208),(177,185),(155,162),(133,139),(244,255),(111,116),(200,209),(89,93),(245,256),(156,163),(223,233),(67,70),(179,187),(112,117),(157,164),(202,211),(45,47),(203,212),(158,165),(113,118),(181,189),(68,71),(227,237),(159,166),(91,95),(205,214),(114,119),(137,143),(160,167),(183,191),(206,215),(229,239),(23,24),(231,241),(208,217),(185,193),(162,169),(139,145),(116,121),(209,218),(93,97),(163,170),(233,243),(70,73),(187,195),(117,122),(164,171),(211,220),(47,49),(212,221),(165,172),(118,123),(189,197),(71,74),(237,247),(166,173),(95,99),(214,223),(119,124),(143,149),(167,174),(191,199),(215,224),(239,249),(24,25),(241,251),(217,226),(193,201),(169,176),(145,151),(121,126),(218,227),(97,101),(170,177),(243,253),(73,76),(195,203),(122,127),(171,178),(220,229),(49,51),(221,230),(172,179),(123,128),(197,205),(74,77),(173,180),(99,103),(223,232),(124,129),(149,155),(174,181),(199,207),(224,233),(25,26),(226,235),(201,209),(176,183),(151,157),(126,131),(227,236),(101,105),(177,184),(76,79),(203,211),(127,132),(178,185),(229,238),(51,53),(230,239),(179,186),(128,133),(205,213),(77,80),(180,187),(103,107),(232,241),(129,134),(155,161),(181,188),(207,215),(233,242),(26,27),(235,244),(209,217),(183,190),(157,163),(131,136),(236,245),(105,109),(184,191),(79,82),(211,219),(132,137),(185,192),(238,247),(53,55),(239,248),(186,193),(133,138),(213,221),(80,83),(187,194),(107,111),(241,250),(134,139),(161,167),(188,195),(215,223),(242,251),(27,28),(244,253),(217,225),(190,197),(163,169),(136,141),(245,254),(109,113),(191,198),(82,85),(219,227),(137,142),(192,199),(247,256),(55,57),(193,200),(138,143),(221,229),(83,86),(194,201),(111,115),(139,144),(167,173),(195,202),(223,231),(28,29),(225,233),(197,204),(169,175),(141,146),(113,117),(198,205),(85,88),(227,235),(142,147),(199,206),(57,59),(200,207),(143,148),(229,237),(86,89),(201,208),(115,119),(144,149),(173,179),(202,209),(231,239),(29,30),(233,241),(204,211),(175,181),(146,151),(117,121),(205,212),(88,91),(235,243),(147,152),(206,213),(59,61),(207,214),(148,153),(237,245),(89,92),(208,215),(119,123),(149,154),(179,185),(209,216),(239,247),(30,31),(241,249),(211,218),(181,187),(151,156),(121,125),(212,219),(91,94),(243,251),(152,157),(213,220),(61,63),(214,221),(153,158),(245,253),(92,95),(215,222),(123,127),(154,159),(185,191),(216,223),(247,255),(31,32),(218,225),(187,193),(156,161),(125,129),(219,226),(94,97),(157,162),(220,227),(63,65),(221,228),(158,163),(95,98),(222,229),(127,131),(159,164),(191,197),(223,230),(32,33),(225,232),(193,199),(161,166),(129,133),(226,233),(97,100),(162,167),(227,234),(65,67),(228,235),(163,168),(98,101),(229,236),(131,135),(164,169),(197,203),(230,237),(33,34),(232,239),(199,205),(166,171),(133,137),(233,240),(100,103),(167,172),(234,241),(67,69),(235,242),(168,173),(101,104),(236,243),(135,139),(169,174),(203,209),(237,244),(34,35),(239,246),(205,211),(171,176),(137,141),(240,247),(103,106),(172,177),(241,248),(69,71),(242,249),(173,178),(104,107),(243,250),(139,143),(174,179),(209,215),(244,251),(35,36),(246,253),(211,217),(176,181),(141,145),(247,254),(106,109),(177,182),(248,255),(71,73),(249,256),(178,183),(107,110),(143,147),(179,184),(215,221),(36,37),(217,223),(181,186),(145,149),(109,112),(182,187),(73,75),(183,188),(110,113),(147,151),(184,189),(221,227),(37,38),(223,229),(186,191),(149,153),(112,115),(187,192),(75,77),(188,193),(113,116),(151,155),(189,194),(227,233),(38,39),(229,235),(191,196),(153,157),(115,118),(192,197),(77,79),(193,198),(116,119),(155,159),(194,199),(233,239),(39,40),(235,241),(196,201),(157,161),(118,121),(197,202),(79,81),(198,203),(119,122),(159,163),(199,204),(239,245),(40,41),(241,247),(201,206),(161,165),(121,124),(202,207),(81,83),(203,208),(122,125),(163,167),(204,209),(245,251),(41,42),(247,253),(206,211),(165,169),(124,127),(207,212),(83,85),(208,213),(125,128),(167,171),(209,214),(42,43),(211,216),(169,173),(127,130),(212,217),(85,87),(213,218),(128,131),(171,175),(214,219),(43,44),(216,221),(173,177),(130,133),(217,222),(87,89),(218,223),(131,134),(175,179),(219,224),(44,45),(221,226),(177,181),(133,136),(222,227),(89,91),(223,228),(134,137),(179,183),(224,229),(45,46),(226,231),(181,185),(136,139),(227,232),(91,93),(228,233),(137,140),(183,187),(229,234),(46,47),(231,236),(185,189),(139,142),(232,237),(93,95),(233,238),(140,143),(187,191),(234,239),(47,48),(236,241),(189,193),(142,145),(237,242),(95,97),(238,243),(143,146),(191,195),(239,244),(48,49),(241,246),(193,197),(145,148),(242,247),(97,99),(243,248),(146,149),(195,199),(244,249),(49,50),(246,251),(197,201),(148,151),(247,252),(99,101),(248,253),(149,152),(199,203),(249,254),(50,51),(251,256),(201,205),(151,154),(101,103),(152,155),(203,207),(51,52),(205,209),(154,157),(103,105),(155,158),(207,211),(52,53),(209,213),(157,160),(105,107),(158,161),(211,215),(53,54),(213,217),(160,163),(107,109),(161,164),(215,219),(54,55),(217,221),(163,166),(109,111),(164,167),(219,223),(55,56),(221,225),(166,169),(111,113),(167,170),(223,227),(56,57),(225,229),(169,172),(113,115),(170,173),(227,231),(57,58),(229,233),(172,175),(115,117),(173,176),(231,235),(58,59),(233,237),(175,178),(117,119),(176,179),(235,239),(59,60),(237,241),(178,181),(119,121),(179,182),(239,243),(60,61),(241,245),(181,184),(121,123),(182,185),(243,247),(61,62),(245,249),(184,187),(123,125),(185,188),(247,251),(62,63),(249,253),(187,190),(125,127),(188,191),(251,255),(63,64),(190,193),(127,129),(191,194),(64,65),(193,196),(129,131),(194,197),(65,66),(196,199),(131,133),(197,200),(66,67),(199,202),(133,135),(200,203),(67,68),(202,205),(135,137),(203,206),(68,69),(205,208),(137,139),(206,209),(69,70),(208,211),(139,141),(209,212),(70,71),(211,214),(141,143),(212,215),(71,72),(214,217),(143,145),(215,218),(72,73),(217,220),(145,147),(218,221),(73,74),(220,223),(147,149),(221,224),(74,75),(223,226),(149,151),(224,227),(75,76),(226,229),(151,153),(227,230),(76,77),(229,232),(153,155),(230,233),(77,78),(232,235),(155,157),(233,236),(78,79),(235,238),(157,159),(236,239),(79,80),(238,241),(159,161),(239,242),(80,81),(241,244),(161,163),(242,245),(81,82),(244,247),(163,165),(245,248),(82,83),(247,250),(165,167),(248,251),(83,84),(250,253),(167,169),(251,254),(84,85),(253,256),(169,171),(85,86),(171,173),(86,87),(173,175),(87,88),(175,177),(88,89),(177,179),(89,90),(179,181),(90,91),(181,183),(91,92),(183,185),(92,93),(185,187),(93,94),(187,189),(94,95),(189,191),(95,96),(191,193),(96,97),(193,195),(97,98),(195,197),(98,99),(197,199),(99,100),(199,201),(100,101),(201,203),(101,102),(203,205),(102,103),(205,207),(103,104),(207,209),(104,105),(209,211),(105,106),(211,213),(106,107),(213,215),(107,108),(215,217),(108,109),(217,219),(109,110),(219,221),(110,111),(221,223),(111,112),(223,225),(112,113),(225,227),(113,114),(227,229),(114,115),(229,231),(115,116),(231,233),(116,117),(233,235),(117,118),(235,237),(118,119),(237,239),(119,120),(239,241),(120,121),(241,243),(121,122),(243,245),(122,123),(245,247),(123,124),(247,249),(124,125),(249,251),(125,126),(251,253),(126,127),(253,255),(127,128),(128,129),(129,130),(130,131),(131,132),(132,133),(133,134),(134,135),(135,136),(136,137),(137,138),(138,139),(139,140),(140,141),(141,142),(142,143),(143,144),(144,145),(145,146),(146,147),(147,148),(148,149),(149,150),(150,151),(151,152),(152,153),(153,154),(154,155),(155,156),(156,157),(157,158),(158,159),(159,160),(160,161),(161,162),(162,163),(163,164),(164,165),(165,166),(166,167),(167,168),(168,169),(169,170),(170,171),(171,172),(172,173),(173,174),(174,175),(175,176),(176,177),(177,178),(178,179),(179,180),(180,181),(181,182),(182,183),(183,184),(184,185),(185,186),(186,187),(187,188),(188,189),(189,190),(190,191),(191,192),(192,193),(193,194),(194,195),(195,196),(196,197),(197,198),(198,199),(199,200),(200,201),(201,202),(202,203),(203,204),(204,205),(205,206),(206,207),(207,208),(208,209),(209,210),(210,211),(211,212),(212,213),(213,214),(214,215),(215,216),(216,217),(217,218),(218,219),(219,220),(220,221),(221,222),(222,223),(223,224),(224,225),(225,226),(226,227),(227,228),(228,229),(229,230),(230,231),(231,232),(232,233),(233,234),(234,235),(235,236),(236,237),(237,238),(238,239),(239,240),(240,241),(241,242),(242,243),(243,244),(244,245),(245,246),(246,247),(247,248),(248,249),(249,250),(250,251),(251,252),(252,253),(253,254),(254,255),(255,256)]
lPrimes256 = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251]


class CyclicList(list):
    """ 
    A simple subclass of a list to allow for iteration by offset indefinitely over a repeating series
    """

    def __getitem__(self, i):
        if len(self) and i >= len(self):
            return self[i % len(self)]
        return list.__getitem__(self, i)
    


def reduceFraction(num, den):
    if num == 0 or den == 0:
        return 0, 0
    if abs(num) == 1:
        return num, den

    if abs(num) < abs(den):		smaller = abs(num)
    else:						smaller = abs(den)

    l = list(range(2, smaller+1))
    l.reverse()

    i = smaller+1
    while i >= 2:
        if i > smaller:
            i-=1
            continue
        if num != 0 and abs(num) % i == 0 and abs(den) % i == 0:
            num /= i
            den /= i
            smaller /= i
        i-=1

    return num, den


def enableHTMLDisplay():
    global g_sTableStart, g_sTableEnd, g_sTableHeaderStart, g_sTableHeaderEnd, g_sTableRowStart, g_sTableRowEnd, g_sTableRowBorder

    g_sTableStart = '<table>'
    g_sTableEnd = '</table>'
    g_sTableHeaderStart = '<th>'
    g_sTableHeaderEnd = '</th>'
    g_sTableRowStart = '<tr><td>'
    g_sTableRowEnd = '</td></tr>'
    g_sTableRowBorder = '</td><td>'


# Basic note class.
class Named:
    def __init__(self, *lNames):
        self.lNames = None
        self.setName(*lNames)
    
    def name(self):
        if self.lNames is None:
            return ''
        if isinstance(self.lNames, tuple) or isinstance(self.lNames, list):
            return join(self.lNames)
        return self.lNames
        
    def setName(self, *lNames):
        if isinstance(lNames, str):
            if lNames != '':
                self.lNames = (lNames)
        elif isinstance(lNames, tuple) or isinstance(lNames, list):
            if isinstance(lNames[0], tuple) or isinstance(lNames[0], list) and lNames[0] and lNames[0] != '':
                self.lNames = lNames[0]
            elif lNames[0] != '' and lNames[0] is not None:
                self.lNames = lNames[0]

    def setDescription(self, d):
        self.description = d
        
    def getDescription(self):
        if 'description' in self.__dict__:
            return self.description
        else:
            return self.name()
            
    def ___eq__(self, other):    # FIXME
        if self is other:
            return True
        if len(self.lNames) and str(other) in self.lNames:
            return True
        return False



class Pitch:
    def __init__(self, hertz):
        '''Initialized with the tenth octave of a standard pitch'''

        self.hertz = float(hertz)
        
    def getHertz(self, octave = 2):
        return self.hertz / 2**(10-octave)
        
C =  Pitch(16744.036)
Db = Pitch(17739.688)
D =  Pitch(18794.545)
Eb = Pitch(19912.127)
E =  Pitch(21096.164)
F =  Pitch(22350.607)
Gb = Pitch(23679.643)
G =  Pitch(25087.708)
Ab = Pitch(26579.501)
A =  Pitch(28160.000)
Bb = Pitch(29834.481)
B =  Pitch(31608.531)


class Note(Named):
    dNotes = {}    # This becomes a registry for all known notes

    @staticmethod
    def factory(*args):
        """A factory function which generates a musical note as appropriate."""

        noteName = None
        note = None
        desc = None
        n = None
        d = None

        try:    
            noteName = args[0].name()
        except: 
            if len(args) > 1 and isinstance(args[0], int) and isinstance(args[1], int):
                n = args[0]
                d = args[1]
                noteName = '%s/%s' % (n, d)
            elif isinstance(args[0], tuple):
                n = args[0][0]
                d = args[0][1]
                noteName = '%s/%s' % (n, d)
            else:
                noteName = str(args[0])
                n = args[0]

        # If we have already generated this note, use it - we're treating notes like singletons
        if noteName in Note.dNotes:
            return Note.dNotes[noteName]

        if isinstance(args[-1], str):
            desc = args[-1]
        else:
            desc = ''

        if d:
            # We've detected the second number necessary for a ratio
            note = JustNote(n, d, desc)
        else:
            note = Note(n, desc)
        
        Note.dNotes[noteName] = note
        return note
        

    #   1  2  3  4  5  6  7  8  9 10 11 12

    #   0  1  2  3  4  5  6  7  8  9 10 11
    #      C#    D#       F#    G#    A#
    #   C     D     E  F     G     A    B 
    def __init__(self, cents, *lNames):
        self.cents = float(cents)
        Named.__init__(self, *lNames)
        
    def __repr__(self):
        '''Basic string reprentation by name with an option to fill in sharps or flats'''
        if self.lNames:
            return self.name()
        return str(self.cents)

    def __str__(self):
        '''Basic string reprentation by name with an option to fill in sharps or flats'''
        if self.lNames:
            return self.name()
        return str(self.cents)

    def getCents(self):         return self.cents

    def __int__(self):          return int(self.cents)
    def __float__(self):        return self.cents
    def __cmp__(self, o):       return cmp(self.cents, o)
    def __eq__(self, other):
        if self is other or int(self) == int(other):
            return True
        return False
        
    def scalaOutput(self, bDescription = 0):
        if bDescription:    return ' %-12f\t\t! %s' % (self.cents, self.name())
        return ' %-12f' % (self.cents)

    def thumbjamOutput(self):
        return '<Interval cents="%f"/>' % (self.cents)

    def getInverse(self):
        return self


class JustNote(Note):
    def __init__(self, n, d, *lNames):
        self.n = n
        self.d = d
        Note.__init__(self, 1200.0 * math.log(float(n)/float(d)) / math.log(2), *lNames)

    def __repr__(self):
        return '%d/%d' % (self.n, self.d)

    def __str__(self):
        return '%d/%d' % (self.n, self.d)
        
    def getInverse(self):
        n, d = reduceFraction(self.d*2, self.n)
        return Note.factory(n, d)
        
    def scalaOutput(self, bDescription = 0):
        if bDescription:    return ' %-12s\t! %30s  %12.3f' % ('%d/%d' % (self.n, self.d), self.name(), self.cents)
        return ' %-12s' % ('%d/%d' % (self.n, self.d))


class NoteOffset:
    def __init__(self, note, offset):
        self.note = note
        self.offset = offset
    
    def getCents(self):         return self.note.cents
    def __repr__(self):         return str(self.offset)
    def __str__(self):          return self.note.__str__()
    def __int__(self):          return int(self.note)
    def __float__(self):        return self.note.cents
    def __cmp__(self, o):       return cmp(self.note, other.note)
    def __eq__(self, other):    return self.note == other.note    # Look out - changes here can break everything
    def __hash__(self):         return int(self.note.cents)

    def scalaOutput(self, bDescription = 0):
        return self.note.scalaOutput(bDescription)

    def thumbjamOutput(self):
        return self.note.thumbjamOutput()
    


Note.factory(1, 1, 'unison')
Note.factory(2, 1, 'octave')
Note.factory(0, 'unison')
Note.factory(1200, 'octave')


class Scale(Named, CyclicList):
    '''
    '''
    
    dScales = {}
    lModeNames = ()
    emptyCyclic = CyclicList()
    
    def __init__(self, name = 'unnamed'):
        Named.__init__(self, (name))
        self.oParentScale = None
        self.length = 0
        self.flags = 0

    def getParent(self):
        if self.oParentScale:
            return self.oParentScale
        return self

    def generateNoteOffset(self, offset, *args):
        """A factory function which generates a musical note as appropriate."""
        return NoteOffset(Note.factory(*args), offset)

    def setNoteMapping(self, d):
        self.dNoteMapping = d
        
    def getNoteMapping(self):
        if 'dNoteMapping' in self.__class__.__dict__:
            return self.__class__dNoteMapping
        return self.dNoteMapping

    def getIntervalShifters(self):
        try:    return self.dIntervalShifters
        except:
            try:    return self.__class__.dIntervalShifters
            except: return self.dIntervalShifters

    def __repr__(self):
        l = self.getParent()
        return '[ %s ] %s' % (join([ repr(i) for i in l if self.has(i.offset) ], ', '), repr(self.__dict__))

    def __str__(self):
        l = self.getParent()
        return '%-16s [ %s ]' % (self.name(), join([ str(i) for i in l if self.has(i.offset) ], ', '))

    def __ge__(self, other):
        'Return true if all of the notes in lNotes are present in this interval'
        if self.flags:
            return (self.flags & other) == other

    def __le__(self, other):
        'Return true if all of the notes in lNotes are present in this interval'
        if self.flags:
            return (self.flags & other) == self
            
    def __getitem__(self, offset):
        l = self.getParent()
        if l != self:
            return l[offset]
        return list.__getitem__(self, offset)

    def __len__(self):
        if self.length:
            return self.length
        n = CyclicList.__len__(self)
        if n:
            return n - 1
        return n
        
    def setLengthByBits(self):
        # Count the number of bits to set the length
        l = self.getParent()
        offset = 0
        for i in range(0, len(l)):
            if self.flags & (1 << i):
                offset += 1
        self.length = offset

    # This takes a parent scale and a tuple of string arguments to run through adjust()
    def build(self, oParentScale):
        self.oParentScale = oParentScale
        if oParentScale:
            self.flags = 1<<len(oParentScale);
        
        dParentMapping = oParentScale.getNoteMapping()
        lIntervalNames = oParentScale.getIntervalNames()

        # Fetch the mode dictionary and set bits by interval names
        setup = self.getIntervalNames()
        for n in setup:
            self.set(dParentMapping[n])

        return self

    def adjust(self, lStrings):
        lNotes = self.getParent()
        # self.setName('%s %s' % (self.name(), join(lStrings)))
        dNamesToSemitones = lNotes.getNoteMapping()
        dIntervalShifters = lNotes.getIntervalShifters()

        for s in lStrings:
            if s[0] == 's':
                note, shift, interval = self.parseInterval(s[1:])
                newVal = self.rotateRight(interval)  
                setVal = newVal
            elif s[0] == '+':
                note, shift, interval = self.parseInterval(s[1:])
                self.set(interval)
            elif s[0] == 'n':
                note, shift, intervalClear = self.parseInterval(s[1]+'b')
                self.clear(intervalClear)
                self.set(note)
            elif s[0] == '-':
                note, shift, interval = self.parseInterval(s[1:])
                self.clear(note+shift)
            else:
                note, shift, interval = self.parseInterval(s)
                self.clear(note)
                self.set(interval)
            
        self.setLengthByBits()


    def parseNotesToFlags(self, s, root):
        oParent = self.getParent()
        s.strip(' ')
        s = re.sub(r'([A-G][b#kr]{0,2})', r' \1', s)
        
        lSplit = str.split(s)
        flags = 0
        
        for intervalName in lSplit:
            note, shift, interval = self.parseInterval(intervalName)
            if interval >= root:
                flags |= (1 << (interval - root))
            else:
                flags |= (1 << (len(oParent) + interval - root))

        return flags

    def parseNotesToOffsets(self, s, root):
        oParent = self.getParent()
        s.strip(' ')
        s = re.sub(r'([A-G][b#kr]{0,2})', r' \1', s)
        
        lSplit = str.split(s)
        flags = 0
        
        dNamesToSemitones = oParent.getNoteMapping()
        dOutput = {}

        for letter in lSplit:
            note = dNamesToSemitones[letter]    # Fixme - maybe the dictionary lookup should have just a starting point and #, b, k, r, ##, and bb should just walk up or down the list
            if note >= root:
                dOutput[note - root] = None
            else:
                dOutput[len(oParent) - 1 + note - root] = None

        return list(dOutput.keys())

    def parseNotesToOffsetList(self, s, root):
        oParent = self.getParent()
        s.strip(' ')
        s = re.sub(r'([A-G][b#]?)', r' \1', s)
        
        lSplit = str.split(s)
        flags = 0
        
        dNamesToSemitones = oParent.getNoteMapping()
        lOutput = []

        for letter in lSplit:
            note = dNamesToSemitones[letter]    # Fixme - maybe the dictionary lookup should have just a starting point and #, b, k, r, ##, and bb should just walk up or down the list
            if note >= root:
                lOutput.append(note - root)
            else:
                lOutput.append(len(oParent) - 1 + note - root)

        return lOutput

    def getIntervalNames(self):
        return self.lIntervalNames

    def parseInterval(self, intervalName):
        oParent = self.getParent()
        dNamesToSemitones = oParent.getNoteMapping()
        dIntervalShifters = oParent.getIntervalShifters()

        if len(intervalName) == 1:
            note = dNamesToSemitones[intervalName]
            return note, 0, note

        mod = 0
        note = 0
        for i in intervalName:
            if i in dNamesToSemitones:
                note = dNamesToSemitones[i]
                continue
            mod += dIntervalShifters[i]                    
        
        interval = note + mod
        if interval > len(oParent):
            interval = interval % len(oParent)
        return (note, mod, interval)

    def parseRoot(self, s):
        oParent = self.getParent()
        s.strip(' ')
        s = re.sub(r'([A-G][b#kr]?)', r' \1', s)
        
        lSplit = split(s)
        dNamesToSemitones = oParent.getNoteMapping()
        return dNamesToSemitones[lSplit[0]]
        return (1 << dNamesToSemitones[lSplit[0]])

    def register(self):
        Scale.dScales[self.name()] = self
        return self
    
    def setNotes(self, *lNotes):
        if len(self):
            del self[0:len(self)]

        self.append(self.generateNoteOffset(0, (0) ))
        
        offset = 1
        for n in lNotes:
            self.append(self.generateNoteOffset(offset, *n))
            offset += 1
        return self

    def getNoteOffset(self, s):
        return self.lScaleIntervals[self.dNotesSemitones[s]]

    def getModeList(self):
        return self.__class__.lModeNames

    def getNoteNames(self):
        return self.lNoteNames

    @staticmethod
    def factory(sName, oParentScale, *lArgs):
        '''
        This is intended to be the focal point for building scales.
        '''
    
        if sName in Scale.dScales:
            return Scale.dScales[sName]
        elif sName in dScaleRecipes:
            oClass, oDefaultParent, lModes, family = dScaleRecipes[sName]
            
            # lArgs = list(lModes + lArgs)
            if (oDefaultParent is not None) and oParentScale is None:
                oParentScale = oDefaultParent

            oScale = oClass()
            oScale.setName(sName)
            oScale.build(oParentScale)
            oScale.adjust(lArgs)
            oScale.setLengthByBits()
            oScale.setName(', '.join([sName] + list(lArgs)))

            # Set the description with respect to the base and elements
            lDesc = [ str.capitalize(oScale.name()) ]
            if oParentScale is not EqualTempered:
                lDesc.append('based on %s tuning' % (oParentScale.name()))
            oScale.setDescription(', '.join(lDesc))

            return oScale
        
        raise KeyError("Invalid scale specified %s" % (sName))
        return None

    def scalaOutput(self, bDescription = 0):
        lNotes = self.getParent()

        if lNotes is not self and lNotes is not EqualTempered:
            lOutput = [ '! %s %s\n! \n%s\n %d\n!' % (capitalize(lNotes.name()), capitalize(self.name()), self.getDescription(), len(self)) ]
        else:
            lOutput = [ '! %s\n! \n%s\n %d\n!' % (capitalize(self.name()), self.getDescription(), len(self)) ]

        for i in range(1, len(lNotes)):
            if self.has(i):
                lOutput.append(lNotes[i].scalaOutput(bDescription))

        lOutput.append(lNotes[-1].scalaOutput())

        return join(lOutput, '\n')
        print('\n')

    def thumbjamOutput(self):
        lNotes = self.getParent()
        lOutput = []
        sName = join([capitalize(i) for i in split(self.name())])

        # Infer the tuning
        tuning = lNotes
        while tuning != tuning.getParent():
            tuning = tuning.getParent()

        sTuning = None            
        if tuning is not self:
            if tuning is EqualTempered:
                sTuning = 'equal'
            elif tuning is Just:
                sTuning = 'just'
            elif tuning is Pythagorean:
                sTuning = 'pythag'
            else:
                sTuning = tuning.name()
        else:
            sTuning = ''
                
        if 0: # sTuning and (isinstance(self, ChromaticScale) or isinstance(lNotes, ChromaticScale)):
            flags = 2048
            i = 1
            while i < len(lNotes):
                if self.has(i):
                    flags |= (1 << (12-i))
                i += 1
            lOutput.append('  <Scale name="%s %s" tags="User" tuning="%s" numnotes="%d" pitchset="%d"/>' % (capitalize(sTuning), sName, sTuning, len(self), flags))
        else:
            if tuning is self:
                lOutput.append('  <Scale name="%s" tags="%s" pitchset="0">\n    <Intervals>' % (sName, capitalize(sTuning)))
            else:
                lOutput.append('  <Scale name="%s %s" tags="%s" pitchset="0">\n    <Intervals>' % (capitalize(sTuning), sName, capitalize(sTuning)))
            for i in range(0, len(lNotes)):
                if self.has(i):
                    lOutput.append('      %s' % (lNotes[i].thumbjamOutput()))
            lOutput.append('      %s' % (lNotes[-1].thumbjamOutput()))
            lOutput.append('    </Intervals>\n  </Scale>')

        return join(lOutput, '\n')

    def shortList(self, rootNote = 0):
        l = self.getParent()
        return '%-20s %s' % (self.name(), join([ '%-2s' % (i) for i in l ], ' '))

    def __iand__(self, other):            return self.flags & other
    def __ixor__(self, other):            return self.flags ^ other
    def __ior__(self, other):            return self.flags | other
    def __long__(self):                    return self.flags
    def __eq__(self, other):            return self.flags == other

    def setAll(self, num):
        self.flags = int(num)

    def clearAll(self):
        self.flags = int(0)

    def has(self, num):
        if self.flags:
            return self.flags & (1 << num)
        return 1

    def toggle(self, num):
        self.flags ^= (1 << num)

    def set(self, num):
        self.flags |= (1 << num)

    def clear(self, num):
        if self.flags & (1 << num):
            self.flags ^= (1 << num)

    def rotateRight(self, shiftBy):
        mask = (2**shiftBy) - 1
        bitMask = self.flags & mask  
        self.flags = (self.flags >> shiftBy) | (bitMask << (self.length - shiftBy))
        return self.flags

    def applyEqualTemperedNotes(self, num):
        if len(self):
            del self[0:len(self)]
        interval = 1200 / num
        for i in range(1, num):
            self.append(NoteOffset(Note.factory(interval * i), i))


class Chord(Scale):
    dChords = {}

    dChordIntervals = {
        'major':                (('1', '3', '5')),
        'minor':                (('1', '3b', '5')),

        'major 6th':            (('1', '3', '5', '6')),
        'major 7th':            (('1', '3', '5', '7')),
        'major 6/9th':          (('1', '3', '5', '6', '9')),

        'major sus4':            (('1', '4', '5')),
        'major sus2':            (('1', '2', '5')),

        'diminished':           (('1', '3b', '5b')),
        'diminished 7th':       (('1', '3b', '5b', '7')),
        'augmented':            (('1', '3', '6b')),
        'augmented 6th':        (('1', '3', '5b', '7b')),
    }

    
    def __init__(self, name = 'unnamed'):
        Named.__init__(self, (name))
        self.oParentScale = None
        self.length = 0
        self.flags = 0

    def register(self):
        Chord.dChords[self.name()] = self
        return self
    
    @staticmethod
    def factory(sName, oParentScale, *lArgs):
        '''
        This is intended to be the focal point for building scales.
        '''
    
        if sName in Chord.dChords:
            return Chord.dChords[sName]
        elif sName in dChordRecipes:
            lArgs = dChordRecipes[sName]
            
            # lArgs = list(lModes + lArgs)
            if (oDefaultParent is not None) and oParentScale is None:
                oParentScale = oDefaultParent

            oChord = Chord()
            oChord.setName(sName)
            oChord.build(oParentScale)
            oChord.adjust(lArgs)
            oChord.setLengthByBits()
            oChord.setName(join([sName] + list(lArgs)))

            # Set the description with respect to the base and elements
            lDesc = [ capitalize(oChord.name()) ]
            if oParentScale is not EqualTempered:
                lDesc.append('based on %s tuning' % (oParentScale.name()))
            oChord.setDescription(join(lDesc))

            return oChord
        
        raise KeyError("Invalid scale specified %s" % (sName))
        return None


class QuarterScale(Scale):
    # lQuarterNoteNames = CyclicList(('C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B' ))
    lNoteNames = CyclicList(('C', 'Ck', 'C#', 'Dr', 'D', 'Dk', 'D#', 'Er', 'E', 'Ek', 'F', 'Fk', 'F#', 'Gr', 'G', 'Gk', 'G#', 'Ar', 'A', 'Ak', 'A#', 'Br', 'B', 'Bk' ))
    lIntervalNames = CyclicList(('1', '1k', '2b', '2r', '2', '2k', '3b', '3r', '3', '3k', '4', '4k', '5b', '5r', '5', '5k', '6b', '6r', '6', '6k', '7b', '7r', '7', '7k' ))
    dNoteMapping = {
        'C': 0,  'Ck': 1, 'Db': 2,  'Dr': 3,  'D': 4,  'Dk': 5, 'Eb': 6,  'Er': 7, 'E': 8,  'Ek': 9, 'F': 10, 'Fk': 11,  'Gb': 12,  'Gr': 13,  'G': 14,  'Gk': 15,  'Ab': 16,  'Ar': 17, 'A': 18,  'Ak': 19,  'Bb': 20,  'Br': 21, 'B': 22,  'Bk': 23, 'Cr': 24,
        'B#': 0,          'C#': 2,                              'D#': 6,                    'Fr': 9, 'E#': 10,           'F#': 12,                                  'G#': 16,                                 'A#': 20,
        '1': 0,  '1k': 1, '2b': 2,  '2r': 3,  '2': 4,  '2k': 5, '3b': 6,  '3r': 7, '3': 8,  '3k': 9, '4': 10, '4k': 11,  '5b': 12,  '5r': 13,  '5': 14,  '5k': 15,  '6b': 16,  '6r': 17, '6': 18,  '6k': 19,  '7b': 20,  '7r': 21, '7': 22,  '7k': 23, '8r': 24, '8': 25,
                          '1#': 2,                              '2#': 6,                    '4r': 9,                     '4#': 12,                                  '5#': 16,                                 '6#': 20, 
    }
    dIntervalShifters = {
        '#': 2, 'b': -2,
        'k': 1, 'r': -1,
        '+': 1, '-': -1,
    }
    dModes = {
        'octave':                ((), (1), ()),
    }
    
    def getModes(self):
        return self.__class__.dModes
    def getModeList(self):
        return QuarterScale.dModes[self.name()][0]
    def getIntervalNames(self):
        return QuarterScale.dModes[self.name()][1]


    lIntervalNumbersToOffsets = CyclicList(( 0, 4, 8, 10, 14, 18, 22 ))
    lCircleOfFifths = CyclicList(( 0, 14, 4, 18, 8, 22, 12, 2, 16, 6, 20, 10 ))
    # lIntervalsToBitPositions = CyclicList(( 0, 5, 9, 11, 15, 19, 23 ))
    lSubsetIntervals = CyclicList(list(range(0, 25)))
    
    # This takes a parent scale and a tuple of string arguments to run through adjust()
    def adjust(self, lStrings):
        dModes = self.getModes()
        lAdjusts = []

        for s in dModes[self.name()][2]:
            if s in dModes:
                lAdjusts += list(dModes[s][2])
            else:
                lAdjusts.append(s)

        for s in lStrings:
            if s in dModes:
                if dModes[self.name()][0] is dModes[s][0]:    # They have the same list of modes
                    scale = Scale.factory(s, self.oParentScale)
                    self.flags |= scale.flags
                lAdjusts += list(dModes[s][2])
            else:
                lAdjusts.append(s)
        
        Scale.adjust(self, lAdjusts)

    def getNoteMapping(self):
        return QuarterScale.dNoteMapping        

    def getIntervalNames(self):
        return QuarterScale.lIntervalNames

    def getNoteNames(self):
        return QuarterScale.lNoteNames

    def getIntervalShifters(self):
        return QuarterScale.dIntervalShifters

    def shortList(self, rootNote = 0):
        l = self.getParent()
        names = l.getNoteNames()
        scaleName = '%s %s' % (names[rootNote], self.name())
        scaleDetails = ', '.join([ '%-2s' % (names[i.offset + rootNote]) for i in l if self.has(i.offset) ])
        return '%-20s %s' % (scaleName, scaleDetails)



class ChromaticScale(QuarterScale):
    lNoteNames = CyclicList(('C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B' ))
    lIntervalNames = CyclicList(('1', '2b', '2', '3b', '3', '4', '5b', '5', '6b', '6', '7b', '7' ))
    dNoteMapping = {
        'C': 0, 'Db': 1, 'D': 2,  'Eb': 3,  'E': 4,  'F':  5, 'Gb': 6,  'G': 7,  'Ab': 8,  'A': 9,  'Bb': 10, 'B': 11,
        'B#':0, 'C#': 1,          'D#': 3,           'E#': 5, 'F#': 6,           'G#': 8,           'A#': 10,
        '1': 0, '2b': 1, '2': 2,  '3b': 3,  '3': 4,  '4':  5, '5b': 6,  '5': 7,  '6b': 8,  '6': 9,  '7b': 10, '7': 11, '8': 12,
                '1#': 1,          '2#': 3,                    '4#': 6,           '5#': 8,           '6#': 10,
    }
    dIntervalShifters = {
        '#': 1, 'b': -1,
        'k': 0, 'r': 0,
        '+': 0, '-': 0,
    }

    dModes = {
        'octave':                ((), (1), ()),
    }

    def getNoteMapping(self):
        return ChromaticScale.dNoteMapping        

    def getIntervalNames(self):
        return ChromaticScale.lIntervalNames

    def getNoteNames(self):
        return ChromaticScale.lNoteNames

    def getIntervalShifters(self):
        return ChromaticScale.dIntervalShifters


class DiatonicScale(ChromaticScale):
    lNoteNames = CyclicList(( 'do', 're', 'mi', 'fa', 'so', 'la', 'ti' ))
    lModeNamesMajor = ( 'lydian', 'ionian', 'mixolydian', 'dorian', 'aeolian', 'phrygian', 'locrian' )
    lModeNamesMesopotamian = ( 'lydian', 'ionian', 'mixolydian', 'dorian', 'aeolian', 'phrygian', 'locrian' )
    lIntervalsMajor = ('1', '2', '3', '4', '5', '6', '7')
    lIntervalsMajorPentatonic = ('1', '2', '3', '5', '6' )
    lIntervalsMinorPentatonic = ('1', '3b', '4', '5', '7b' )
    lModeNamesHarmonicMinor = ( 'lydian #2', 'ionian #5', 'ultra locrian', 'romanian', 'harmonic minor', 'hijaz', 'locrian #6' )
    lModeNamesMelodicMinor = ( 'lydian dominant', 'mixolydian b6', 'locrian #2', 'altered', 'melodic minor', 'dorian b2', 'lydian augmented' )
    
    dModes = {
        'major':                ((), lIntervalsMajor, ()),
        'minor':                ((), lIntervalsMajor, ('7b', '3b', '6b', )),

        'octave':            (lModeNamesMajor, ('1'), ()),
        'chromatic':            (lModeNamesMajor, ('1', '2b', '2', '3b', '3', '4', '5b', '5', '6b', '6', '7b', '7'), ()),

        'lydian':               (lModeNamesMajor, lIntervalsMajor, ('4#', )),
        'ionian':               (lModeNamesMajor, lIntervalsMajor, ()),
        'mixolydian':           (lModeNamesMajor, lIntervalsMajor, ('7b', )),
        'dorian':               (lModeNamesMajor, lIntervalsMajor, ('7b', '3b', )),
        'aeolian':              (lModeNamesMajor, lIntervalsMajor, ('7b', '3b', '6b', )),
        'phrygian':             (lModeNamesMajor, lIntervalsMajor, ('7b', '3b', '6b', '2b', )),
        'locrian':              (lModeNamesMajor, lIntervalsMajor, ('7b', '3b', '6b', '2b', '5b', )),

        'arabian':              ((),  lIntervalsMajor, ('5b', '6b', '7b', )),
        'enigmatic':            ((),  lIntervalsMajor, ('2b', '4#', '5#', '6#', )),
        'fifth mode':           ((),  lIntervalsMajor, ('6b', '7b', )),
        'hindu':                ((),  lIntervalsMajor, ('6b', )),
        'half diminished':      ((),  lIntervalsMajor, ('3b', '5b', '6b', '7b', )),
        'major locrian':        ((),  lIntervalsMajor, ('5b', '6b', '7b', )),
        'minor locrian':        ((),  lIntervalsMajor, ('3b', '5b', '6b', '7b', )),
        
        'blues':                ((),  lIntervalsMajor, ('-2', '3b', '+5b', '-6', '7b')),
        'major blues':          ((),  lIntervalsMajor, ('+3b', '-4')),
        'minor blues':          ((),  lIntervalsMajor, ('-2', '3b', '+5b', '-6', '7b')),

        'major pentatonic':     ((),  lIntervalsMajorPentatonic,    ()),
        'minor pentatonic':     ((),  lIntervalsMinorPentatonic,    ()),
        'ake bono':             ((),  lIntervalsMajorPentatonic,    ('harmonic minor',)),
        'balinese pelog':       ((),  lIntervalsMajorPentatonic,    ('2b', '3b')),

        'major minor':          ((),  lIntervalsMajor, ('6b', '7b', )),

        'lydian #2':            (lModeNamesHarmonicMinor, lIntervalsMajor, ('2#', '4#', )),
        'ionian #5':            (lModeNamesHarmonicMinor, lIntervalsMajor, ('5#', )),
        'ultra locrian':        (lModeNamesHarmonicMinor, lIntervalsMajor, ('2b', '3b', '+3', '4#', '5#', '6b', '+6', '-7' )),
        'romanian':             (lModeNamesHarmonicMinor, lIntervalsMajor, ('3b', '4#', '7b', )),
        'harmonic minor':       (lModeNamesHarmonicMinor, lIntervalsMajor, ('3b', '6b', )),
        'hijaz':                (lModeNamesHarmonicMinor, lIntervalsMajor, ('2b', '6b', '7b', )),
        'locrian #6':           (lModeNamesHarmonicMinor, lIntervalsMajor, ('2b', '3b', '5b', '7b', )),

        'melodic minor':        (lModeNamesMelodicMinor,  lIntervalsMajor, ('3b',)),
        'dorian b2':            (lModeNamesMelodicMinor,  lIntervalsMajor, ('2b', '3b', '7b', )),
        'lydian augmented':     (lModeNamesMelodicMinor,  lIntervalsMajor, ('4#', '5#')),
        'lydian dominant':      (lModeNamesMelodicMinor,  lIntervalsMajor, ('4#', '7b')),
        'mixolydian b6':        (lModeNamesMelodicMinor,  lIntervalsMajor, ('6b', '7b')),
        'locrian #2':           (lModeNamesMelodicMinor,  lIntervalsMajor, ('7b', '3b', '6b', '5b',)),
        'altered':              (lModeNamesMelodicMinor,  lIntervalsMajor, ('2b', '3b', '4b', '5b', '6b', '7b', )),

        'phrygian major':       ((), lIntervalsMajor, ('2b', '6b', '7b', )),
        'spanish 8 tone':       ((), lIntervalsMajor, ('2b', '3b', '+3', '5b', '6b', '7b')),
        'flamenco':             ((), lIntervalsMajor, ('2b', '3b', '+3', '6b', '7b')),
        'symmetrical':          ((), lIntervalsMajor, ('2b', '3b', '+3', '4#', '7b')),
        'neapolitan major':     ((), lIntervalsMajor, ('2b', '3b', )),
        'neapolitan minor':     ((), lIntervalsMajor, ('2b', '3b', '6b', )),
        'javanese':             ((), lIntervalsMajor, ('2b', '3b', '7b', )),
        'oriental':             ((), lIntervalsMajor, ('2b', '5b', '7b', )),
        'double harmonic':      ((), lIntervalsMajor, ('2b', '6b', )),
        
        'shur':         ((), lIntervalsMajor, ('2bk', '3b', '6b', '7b', )),
        'chahargah':    ((), lIntervalsMajor, ('2bk', '6k', )),
        'mahur':        ((), lIntervalsMajor, ()),
        'homayon':      ((), lIntervalsMajor, ('2bk', '6b', '7b', )),
        'esfahan':      ((), lIntervalsMajor, ('3b', '6r')),
        'nava':         ((), lIntervalsMajor, ('3b', '6r', '7b', )),
        'sagah':        ((), lIntervalsMajor, ('2bk', '3r', '5r', '6r', '7r')),

        'rast panjgah':   ((), lIntervalsMajor, ()),
        'dashti':           ((), lIntervalsMajor, ('7r', )),
        'bayate tork':           ((), lIntervalsMajor, ('7b', )),
        'ashfari':           ((), lIntervalsMajor, ('3k', '7b', )),
        'abu ata':           ((), lIntervalsMajor, ('2bk', '3b', '4k', '6b', '7b', )),
        
    }
    
    def getModes(self):
        return DiatonicScale.dModes

    def getModeList(self):
        return DiatonicScale.dModes[self.name()][0]

    def getIntervalNames(self):
        return DiatonicScale.dModes[self.name()][1]

    # This takes a parent scale and a tuple of string arguments to run through adjust()
    def adjust(self, lStrings):
        dModes = DiatonicScale.dModes
        lAdjusts = []

        for s in dModes[self.name()][2]:
            if s in dModes:
                lAdjusts += list(dModes[s][2])
            else:
                lAdjusts.append(s)

        for s in lStrings:
            if s in dModes:
                if dModes[self.name()][0] is dModes[s][0]:    # They have the same list of modes
                    scale = Scale.factory(s, self.oParentScale)
                    self.flags |= scale.flags
                lAdjusts += list(dModes[s][2])
            else:
                lAdjusts.append(s)
        
        Scale.adjust(self, lAdjusts)


class DiminishedScale(ChromaticScale):
    lModeNames = ('diminished', 'diminished locrian')
    dModes = {
        'diminished':             (lModeNames, ('1', '2', '2#', '4', '4#', '5#', '6', '7'), ()),
        'diminished locrian':     (lModeNames, ('1', '1#', '2#', '3', '4#', '5', '6', '7b'), ()),
    }
    def getModeList(self):
        return DiminishedScale.dModes[self.name()][0]
    def getIntervalNames(self):
        return DiminishedScale.dModes[self.name()][1]


class AugmentedScale(ChromaticScale):
    lModeNames = ('augmented', 'augmented phrygian')
    dModes = {
        'augmented':              (lModeNames, ('1', '2#', '3', '5', '6b', '7'), ()),
        'augmented phrygian':     (lModeNames, ('1', '2b', '3', '4', '6', '7b', '6', '7b'), ()),
    }
    def getModeList(self):
        return AugmentedScale.dModes[self.name()][0]
    def getIntervalNames(self):
        return AugmentedScale.dModes[self.name()][1]


def centsDistance(numerator, denominator, cents):
    distance = int(1200.0 * math.log(float(numerator)/float(denominator)) / math.log(2)) % cents
    if distance > (cents / 2):
        return cents - distance
    return distance
    

def makeFractionalScale(ceiling=512, centsBound=2, cents=100, denominator=10935, filterCents=True, bInverses=True):
    # lFavoredDenominators = [2,3,4,5,6,7,8,9,10,12,14,15,16,20,24,28,30,32,36,40,42,45,48,54,56,60,64,80,96,105,125,128,160,243,256,375]
    # lFavoredDenominators = [2,3,4,5,6,8,10,12,16,18,24,32]
    lFavoredDenominators =   [2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,20,22,23,24,25,27,30,31,32,33,34,35,36,40,42,44,45,48,50,54,60,62,64,65,70,72,75,80,81,88,96,100,105,120,124,125,128 ] #,135,160,166,180,182,192,202,243,256,375,512 ]
    
    
    import pickle as pickle
    dRatios = {}
    bNew = False

    if not denominator:
        return None
        
    try:
        with open(g_serialized, 'r') as serialized:
            dRatios = pickle.load(serialized)
        l = dRatios[denominator]
    except:
        l = [ reduceFraction(numerator,denominator) for numerator in range(denominator+1, denominator*2+1) ]

        if bInverses:
            l += [ reduceFraction(i[1]*2,i[0]) for i in l ]
            dRatios[denominator] = l
        
        with open(g_serialized, "wb" ) as serialized:
            pickle.dump( dRatios, serialized )

    if ceiling:
        l = [ i for i in l if i[1] <= ceiling ] # or i[1] in lFavoredDenominators ]    

    l = tuple(set( [ i for i in l if i[0] != 1 ] ))
    
    if cents:
        if not centsBound:
            centsBound = int(cents/90.0)*100.0
        l = [ i for i in l if centsDistance(i[0], i[1], cents) <= centsBound ]
        
        if filterCents:
            lCents = []
            lOutput = []
            for i in l:
                lCents.append([i[0], i[1], 1200.0 * math.log(float(i[0])/float(i[1])) / math.log(2)])

            count = 1
            while (cents * count) <= 1200.0:
                centRating = cents * count
                val = sorted(lCents, key=lambda i: abs(centRating - i[2]))[0]
                lOutput.append(tuple([val[0], val[1]]))
                count += 1
                
            l = tuple(set( [ i for i in lOutput ] ))

    scale = Scale("%d-denominator Fractional Scale" % (denominator))
    scale.setNotes(*l)
    scale.sort(key=float)

    return scale



################################################################################
# Scale generation.

EqualTempered24 = QuarterScale('equal 24').setNotes(
    (  50, ),
    ( 100, 'minor second'),
    ( 150, ),
    ( 200, 'major second'),
    ( 250, ),
    ( 300, 'minor third'),
    ( 350, ),
    ( 400, 'major third'),
    ( 450, ),
    ( 500, 'fourth'),
    ( 550, ),
    ( 600, 'flat fifth'),
    ( 650, ),
    ( 700, 'fifth'),
    ( 750, ),
    ( 800, 'minor sixth'),
    ( 850, ),
    ( 900, 'major sixth'),
    ( 950, ),
    (1000, 'minor seventh'),
    (1050, ),
    (1100, 'major seventh'),
    (1150, ),
    (1200, 'octave'),
).register()

EqualTempered = ChromaticScale('equal').setNotes(
    ( 100, 'minor second'),
    ( 200, 'major second'),
    ( 300, 'minor third'),
    ( 400, 'major third'),
    ( 500, 'fourth'),
    ( 600, 'flat fifth'),
    ( 700, 'fifth'),
    ( 800, 'minor sixth'),
    ( 900, 'major sixth'),
    (1000, 'minor seventh'),
    (1100, 'major seventh'),
    (1200, 'octave'),
).register()

Blues = ChromaticScale('blues').setNotes(
    ( 25,  24, 'minor second'),
    (  9,   8, 'major second'),
    (  7,   6, 'septimal minor third'),
    (  5,   4, 'major third'),
    (  4,   3, 'fourth'),
    (  7,   5, 'septimal tritone'),
    (  3,   2, 'fifth'),
    (  8,   5, 'minor sixth'),
    (  5,   3, 'major sixth'),
    (  7,   4, 'harmonic minor seventh'),
    ( 15,   8, 'major seventh'),
    (   2,  1),
).register()


Just = ChromaticScale('just').setNotes(
    ( 25,  24, 'minor second'),
    (  9,   8, 'major second'),
    (  6,   5, 'minor third'),
    (  5,   4, 'major third'),
    (  4,   3, 'fourth'),
    ( 45,  32, 'flat fifth'),
    (  3,   2, 'fifth'),
    (  8,   5, 'minor sixth'),
    (  5,   3, 'major sixth'),
    (  9,   5, 'minor seventh'),
    ( 15,   8, 'major seventh'),
    (   2,  1),
).register()

Pythagorean = ChromaticScale('pythagorean').setNotes(
    (256, 243, 'pythagorean minor second'),
    (  9,   8, 'pythagorean major second'),
    ( 32,  27, 'pythagorean minor third'),
    ( 81,  64, 'pythagorean major third'),
    (  4,   3, 'fourth'),
    (1024,729, 'pythagorean flat fifth'),
    (  3,   2, 'fifth'),
    (128,  81, 'pythagorean minor sixth'),
    ( 27,  16, 'pythagorean major sixth'),
    ( 16,   9, 'pythagorean minor seventh'),
    (243, 128, 'pythagorean major seventh'),
    (  2,   1),
).register()

Mesopotamian = ChromaticScale('mesopotamian').setNotes(
    (2187,2048, 'mesopotamian minor second'),
    (  9,   8, 'mesopotamian major second'),
    (19683,16384, 'mesopotamian minor third'),
    ( 81,  64, 'mesopotamian major third'),
    (177147,131072, 'mesopotamian fourth'),
    (729,512, 'mesopotamian flat fifth'),
    (  3,   2, 'fifth'),
    (6561,4096, 'mesopotamian minor sixth'),
    ( 27,  16, 'mesopotamian major sixth'),
    (59049,32768, 'mesopotamian minor seventh'),
    (243, 128, 'mesopotamian major seventh'),
    (  2,   1),
).register().setDescription("The Mesopotamian temperament as analyzed and presented at http://www.lightbridgemusic.com/mohmt.htm")

Partch43 = Scale('partch43').setNotes(
    (81, 80, 'partch'),
    (33, 32, 'partch'),
    (21, 20, 'partch'),
    (16, 15, 'partch'),
    (12, 11, 'partch'),
    (11, 10, 'partch'),
    (10, 9, 'partch'),
    (9, 8, 'partch'),
    (8, 7, 'partch'),
    (7, 6, "blues minor third"), 
    (32, 27, 'partch'),
    (6, 5, 'partch'),
    (11, 9, 'blues third'),
    (5, 4, 'partch'),
    (14, 11, 'partch'),
    (9, 7, 'partch'),
    (21, 16, 'partch'),
    (4, 3, 'partch'),
    (27, 20, 'partch'),
    (11, 8, 'partch'),
    (7, 5, "septimal tritone"), 
    (10, 7, 'partch'),
    (16, 11, 'partch'),
    (40, 27, 'partch'),
    (3, 2, 'partch'),
    (32, 21, 'partch'),
    (14, 9 , 'partch'),
    (11, 7 , 'partch'),
    (8, 5  , 'partch'),
    (18, 11, 'partch'),
    (5, 3  , 'partch'),
    (27, 16, 'partch'),
    (12, 7, 'partch'),
    (7, 4, "harmonic minor seventh"), 
    (16, 9, 'partch'),
    (9, 5  , 'partch'),
    (20, 11, 'partch'),
    (11, 6, 'partch'),
    (15, 8, 'partch'),
    (40, 21, 'partch'),
    (64, 33, 'partch'),
    (160, 81, 'partch'),
    (2, 1), 
).register()
Partch43.setNoteMapping({
    '1': 0, '1k': 2, '2b': 4,  '2r': 5,  '2': 8,  '2k': 10, '3b': 14, '3r': 14, '3': 14, '3k': 16, '4': 18, '4k': 20,  '5b': 22,  '5r': 23,  '5': 25,  '5k': 27,  '6b': 30,  '6r': 32, '6': 32,  '6k': 33,  '7b': 36,  '7r': 38, '7': 39,  '7k': 41, '1r': 43,
                     '1#': 4,                               '2#': 14,                    '4r': 16,                     '4#': 22,                                  '5#': 30,                                 '6#': 36, 
})
Partch43.setDescription("Harry Partch's 43-tone pure scale")
Partch43.lIntervalNames = CyclicList(('1', '1k', '2b', '2r', '2', '2k', '3b', '3r', '3', '3k', '4', '4k', '5b', '5r', '5', '5k', '6b', '6r', '6', '6k', '7b', '7r', '7', '7k' ))
Partch43.dIntervalShifters = dIntervalShifters = {
        '#': 4, 'b': -4,
        'k': 2, 'r': -2,
        '+': 1, '-': -1,
}

MarkDeutschHarmonicGrid = Scale('harmonic grid').setNotes(
    (81, 80,            'grid'),
    (46, 45,            'grid'),              
    (31, 30,            'grid'),              
    (25, 24,            'grid'),               #
    (256, 243,          'grid'),
    (16, 15,            'grid'),       #E
    (27, 25,            'grid'),
    (135, 124,          'grid'),
    (11, 10,            'grid'),
    (10, 9,             'grid'),
    (9, 8,          'grid'),         #F      #
    (256, 225,          'grid'),
    (15, 13,            'grid'),
    (93, 80,            'grid'),
    (75, 64,            'grid'),
    (32, 27,            'grid'),
    (6, 5,          'grid'),         #F#
    (75, 62,            'grid'),
    (128, 105,          'grid'),
    (100, 81,           'grid'),
    (5, 4,          'grid'),
    (81, 64,            'grid'),       #G
    (32, 25,            'grid'),
    (31, 24,            'grid'),
    (125, 96,           'grid'),
    (320, 243,          'grid'),
    (4, 3,          'grid'),
    (27, 20,            'grid'),       #G#
    (512, 375,          'grid'),
    (62, 45,            'grid'),
    (25, 18,            'grid'),
    (45, 32,            'grid'),
    (64, 45,            'grid'),       #A
    (36, 25,            'grid'),
    (90, 62,            'grid'),
    (375, 256,          'grid'),
    (40, 27,            'grid'),
    (3, 2,          'grid'),         #A#     
    (243, 160,          'grid'),             #
    (192, 125,          'grid'),
    (31, 20,            'grid'),
    (25, 16,            'grid'),               #
    (128, 81,           'grid'),
    (8, 5,          'grid'),         #B      
    (50, 31,            'grid'),              
    (81, 50,            'grid'),
    (400, 243,          'grid'),             
    (5, 3,          'grid'),
    (27, 16,            'grid'),       #C
    (128, 75,           'grid'),              #
    (31, 18,            'grid'),               
    (125, 72,           'grid'),
    (225, 128,          'grid'),             #
    (16, 9,             'grid'),    
    (9, 5,          'grid'),         #C#     #
    (29, 16,            'grid'),               
    (11, 6,             'grid'),
    (50, 27,            'grid'),
    (15, 8,             'grid'),
    (243, 128,          'grid'),     #D
    (48, 25,            'grid'),
    (31, 16,            'grid'),           
    (125, 64,           'grid'),              #    
    (160, 81,           'grid'),
    (2, 1),
).register()
MarkDeutschHarmonicGrid.setDescription("Mark Deutsch's harmonic grid")
MarkDeutschHarmonicGrid.setNoteMapping({
    '1': 0, '1k': 3, '2b': 6,  '2r': 9,  '2': 11, '2k': 14, '3b': 18, '3r': 19, '3': 21, '3k': 24, '4': 27, '4k': 30,  '5b': 32,  '5r': 35,  '5': 38,  '5k': 41,  '6b': 44,  '6r': 47, '6': 49,  '6k': 52,  '7b': 54,  '7r': 57, '7': 60,  '7k': 63, '1r': 65,
                     '1#': 6,                               '2#': 18,                    '4r': 24,                     '4#': 32,                                  '5#': 44,                                 '6#': 54, 
})
MarkDeutschHarmonicGrid.lIntervalNames = CyclicList(('1', '1k', '2b', '2r', '2', '2k', '3b', '3r', '3', '3k', '4', '4k', '5b', '5r', '5', '5k', '6b', '6r', '6', '6k', '7b', '7r', '7', '7k' ))
MarkDeutschHarmonicGrid.dIntervalShifters = dIntervalShifters = {
        '#': 5, 'b': -5,
        'k': 2, 'r': -2,
        '+': 1, '-': -1,
}
MarkDeutschHarmonicGrid.lNoteNames = QuarterScale.lNoteNames


GreekMixolydian = Scale('greek mixolydian').setNotes(
    (9, 8),
    (81, 64),
    (729, 512, 'greek mixolydian tritone'),
    (3, 2),
    (27, 16),
    (243, 128),
    (2, 1),
).register()
GreekMixolydian.setDescription('Ancient Greek "mixed lydian", AKA Church Lydian or the Moon scale')
GreekDorian = Scale('greek dorian').setNotes(
    (9, 8),
    (81, 64),
    (4, 3),
    (3, 2),
    (27, 16),
    (243, 128),
    (2, 1),
).register()
GreekDorian.setDescription('Ancient Greek Dorian, AKA Church Ionian or the Sun scale')
GreekHypodorian = Scale('greek hypodorian').setNotes(
    (9, 8),
    (81, 64),
    (4, 3),
    (3, 2),
    (27, 16),
    (16, 9),
    (2, 1),
).register()
GreekHypodorian.setDescription('Ancient Greek Hypodorian, AKA Church Mixolydian or the Saturn scale')
GreekPhrygian = Scale('greek phrygian').setNotes(
    (9, 8),
    (32, 27),
    (4, 3),
    (3, 2),
    (27, 16),
    (16, 9),
    (2, 1),
).register()
GreekPhrygian.setDescription('Ancient Greek Phrygian, AKA Church Dorian or the Venus scale')
GreekHypophrygian = Scale('greek hypophrygian').setNotes(
    (9, 8),
    (32, 27),
    (4, 3),
    (3, 2),
    (128, 81),
    (16, 9),
    (2, 1),
).register()
GreekHypophrygian.setDescription('Ancient Greek Hypophrygian, AKA Church Aeolian or the Jupiter scale')
GreekLydian = Scale('greek lydian').setNotes(
    (256, 243 ),
    (32, 27),
    (4, 3),
    (3, 2),
    (128, 81),
    (16, 9),
    (2, 1),
).register()
GreekLydian.setDescription('Ancient Greek Lydian, AKA Church Phrygian or the Mercury scale')
GreekHypolydian = Scale('greek hypolydian').setNotes(
    (256, 243),
    (32, 27),
    (4, 3),
    (1024, 729),
    (128, 81),
    (16, 9),
    (2, 1),
).register()
GreekHypolydian.setDescription('Ancient Greek Hypolydian, AKA Church Locrian or the Mars scale')


BaileyEBWT = ChromaticScale("ebwt").setNotes(
    (256, 243,       'equally beating minor second'),
    (12224, 10935,   'equally beating major second'),
    (32, 27,         'equally beating minor third'),
    (13696, 10935,   'equally beating major third'),
    (4, 3,           'equally beating fourth'),
    (1024, 729,      'equally beating flat fifth'),
    (16348, 10935,   'equally beating fifth'),
    (128, 81,        'equally beating minor sixth'),
    (18304, 10935,   'equally beating major sixth'),
    (16, 9,          'equally beating minor seventh'),
    (4096, 2187,     'equally beating major seventh'),
    (2, 1),
).register()
BaileyEBWT.setDescription("Paul Bailey's equal beating well temperament")


EBWT24 = QuarterScale("ebwt24").setNotes(
    (139, 135),
    (143, 135),
    (265, 243),
    (91, 81),
    (52, 45),
    (289, 243),
    (496, 405),
    (919, 729),
    (35, 27),
    (243, 182),
    (334, 243),
    (1031, 729),
    (118, 81),
    (3, 2),
    (54, 35),
    (27, 17),
    (662, 405),
    (409, 243),
    (729, 421),
    (433, 243),
    (743, 405),
    (270, 143),
    (243, 125),
    (2, 1),
).register()
EBWT24.setDescription("Daniel Rolling's attempt at quarter-tonal equal-beating well tempered scale")



EBAF = QuarterScale("ebaf").setNotes(
    (49.94274 ,),
    (100.30106,),
    (150.16035,),
    (200.43693,),
    (250.21760,),
    (300.41714,),
    (350.12371,),
    (400.25066,),
    (449.88739,),
    (499.94589 ,),
    (549.51678 ,),
    (599.51077 ,),
    (649.91927 ,),
    (699.82685 ,),
    (750.15071 ,),
    (799.97687 ,),
    (850.22098 ,),
    (899.97043 ,),
    (950.13937 ,),
    (999.81652 ,),
    (1049.91462,),
    (1099.52361,),
    (1149.55493,),
    (1200      ,),
).register()
EBAF.setDescription("Cycle of 24 equal beating 11/8's")

TYoung = ChromaticScale("young").setNotes(
    (94.13500 ,),
    (196.09000   ,),
    (298.04500    ,),
    (392.18000  ,),
    (500.00000    ,),
    (592.18000    ,),
    (698.04500   ,),
    (796.09000   ,),
    (894.13500   ,),
    (1000.00000   ,),
    (1092.18000 ,),
    (1200.0 ,),
).register()
TYoung.setDescription("Thomas Young's 1799 well-tempered tuning")

Setar = Scale('setar').setNotes(
    (13, 12),
    (9, 8),
    (19, 16),
    (49, 40),
    (81, 64),
    (43, 32),
    (7, 5),
    (61, 42),
    (3, 2),
    (19, 12),
    (59, 36),
    (17, 10),
    (25, 14),
    (59, 32),
    (61, 32),
    (2, 1),
).register()
Setar.setDescription("Just approximation of setar scale")
Setar.lNoteNames = QuarterScale.lNoteNames

SetarEBWT = Scale('setarebwt').setNotes(
    (135, 124),
    (12224, 10935,   'equally beating major second'),
    (32, 27,         'equally beating minor third'),
    ( 11, 9),
    (13696, 10935,   'equally beating major third'),
    (4, 3,           'equally beating fourth'),
    (128, 105),
    (1024, 729,      'equally beating flat fifth'),
    (16348, 10935,   'equally beating fifth'),
    (128, 81,        'equally beating minor sixth'),
    (44, 27),
    (18304, 10935,   'equally beating major sixth'),
    (16, 9,          'equally beating minor seventh'),
    (11, 6),
    (4096, 2187,     'equally beating major seventh'),
    (2, 1),
).register()
SetarEBWT.setDescription("Equally beating well-tempered approximation of setar scale")
SetarEBWT.lNoteNames = QuarterScale.lNoteNames


'''
Tweaked = QuarterScale('tweaked')
Tweaked.build(EBAF)
# Tweaked.applyEqualTemperedNotes(19)
Tweaked.setDescription("Daniel's experimental well-tempered quarter-tone scale")
Tweaked.setName("Tweaked 24-tone scale")
Tweaked.register()
'''

STSISurakarta = Scale('surakarta').setNotes(
    (25, 24),               #
    (9, 8),         #F      #
    (243, 160),             #
    (25, 16),               #
    (128, 75),              #
    (225, 128),             #
    (9, 5),         #C#     #
    (125, 64),              #    
    (2, 1),
).register()
STSISurakarta.setDescription("STSI Surakarta")



dScaleRecipes = {
    'major':             (DiatonicScale, EqualTempered, ('major',), None),
    'minor':             (DiatonicScale, EqualTempered, ('minor',), None),

    'chromatic':         (DiatonicScale, EqualTempered, ('chromatic',), 'tunings'),
    'octave':         (DiatonicScale, EqualTempered, ('octave',), 'tunings'),
    # 'tweaked':           (Tweaked, EBAF, ()),

    'major pentatonic':  (DiatonicScale, EqualTempered, ('pentatonic',), None),
    'minor pentatonic':  (DiatonicScale, EqualTempered, ('minor pentatonic',), None),

    'major minor':  (DiatonicScale, EqualTempered, ('major minor',), None),

    'ake bono':          (DiatonicScale, Just, ('ake bono',), 'exotic'),

    'lydian':            (DiatonicScale, Pythagorean, ('lydian',), 'major'),
    'ionian':            (DiatonicScale, Pythagorean, ('ionian',), 'major'),
    'mixolydian':        (DiatonicScale, Pythagorean, ('mixolydian',), 'major'),
    'dorian':            (DiatonicScale, Pythagorean, ('dorian',), 'major'),
    'aeolian':           (DiatonicScale, Pythagorean, ('aeolian',), 'major'),
    'phrygian':          (DiatonicScale, Pythagorean, ('phrygian',), 'major'),
    'locrian':           (DiatonicScale, Pythagorean, ('locrian',), 'major'),

    'lydian #2':         (DiatonicScale, Just, ('lydian #2',), 'harmonic minor'),
    'ionian #5':         (DiatonicScale, Just, ('ionian #5',), 'harmonic minor'),
    'ultra locrian':     (DiatonicScale, Just, ('ultra locrian',), 'harmonic minor'),
    'romanian':          (DiatonicScale, Just, ('romanian',), 'harmonic minor'),
    'harmonic minor':    (DiatonicScale, Just, ('harmonic minor',), 'harmonic minor'),
    'hijaz':             (DiatonicScale, Just, ('hijaz',), 'harmonic minor'),
    'locrian #6':        (DiatonicScale, Just, ('locrian #6',), 'harmonic minor'),

    'melodic minor':     (DiatonicScale, Just, ('melodic minor',), 'melodic minor'),
    # 'dorian b2':         (DiatonicScale, Just, ('dorian b2',), 'melodic minor'),
    # 'lydian augmented':  (DiatonicScale, Just, ('lydian augmented',), 'melodic minor'),
    # 'lydian dominant':   (DiatonicScale, Just, ('lydian dominant',), 'melodic minor'),
    # 'mixolydian b6':     (DiatonicScale, Just, ('mixolydian b6',), 'melodic minor'),
    # 'locrian #2':        (DiatonicScale, Just, ('locrian #2',), 'melodic minor'),
    'altered':           (DiatonicScale, Just, ('altered',), 'melodic minor'),

    'arabian':           (DiatonicScale, Just, ('arabian',), 'exotic'),
    'enigmatic':         (DiatonicScale, Just, ('enigmatic',), 'exotic'),
    'hindu':             (DiatonicScale, Just, ('hindu',), 'exotic'),
    'major locrian':     (DiatonicScale, Just, ('major locrian',), 'exotic'),
    'minor locrian':     (DiatonicScale, Just, ('minor locrian',), 'exotic'),
    'phrygian major':    (DiatonicScale, Pythagorean, ('phrygian major',), 'exotic'),

    'romanian':          (DiatonicScale, Just, ('romanian',), 'exotic'),
    'spanish 8 tone':    (DiatonicScale, Just, ('spanish 8 tone',), 'exotic'),
    'flamenco':          (DiatonicScale, Just, ('flamenco',), 'exotic'),
    'symmetrical':       (DiatonicScale, Just, ('symmetrical',), 'exotic'),
    'neapolitan major':  (DiatonicScale, Just, ('neapolitan major',), 'exotic'),
    'neapolitan minor':  (DiatonicScale, Just, ('neapolitan minor',), 'exotic'),
    'javanese':          (DiatonicScale, Just, ('javanese',), 'exotic'),
    'oriental':          (DiatonicScale, Just, ('oriental',), 'exotic'),
    'double harmonic':   (DiatonicScale, Just, ('double harmonic',), 'exotic'),

    'augmented':         (AugmentedScale, Just, ('augmented',), None),
    'augmented phrygian': (AugmentedScale, Just, ('phrygian',), 'exotic'),

    'diminished':        (DiminishedScale, Just, ('diminished',), None),
    'diminished locrian': (DiminishedScale, Just, ('locrian',), 'exotic'),

    'blues':             (DiatonicScale, Just, ('minor',), 'blues'),
    'major blues':       (DiatonicScale, Just, ('major',), 'blues'),
    'minor blues':       (DiatonicScale, Just, ('minor',), 'blues'),

    'harmonic grid':     (Scale, None, (), 'tunings'),
    'partch43':          (Scale, None, (), 'tunings'),
    'young':          (Scale, None, (), 'tunings'),

    'greek mixolydian':  (Scale, None, (), 'ancient greek'),
    'greek lydian':  (Scale, None, (), 'ancient greek'),
    'greek phrygian':  (Scale, None, (), 'ancient greek'),
    'greek dorian':  (Scale, None, (), 'ancient greek'),
    'greek hypolydian':  (Scale, None, (), 'ancient greek'),
    'greek hypophrygian':  (Scale, None, (), 'ancient greek'),
    'greek hypodorian':  (Scale, None, (), 'ancient greek'),
    
    'chahargah':           (DiatonicScale, Just, ('persian',), 'persian'),
    'shur':           (DiatonicScale, Just, ('persian',), 'persian'),
    'mahur':           (DiatonicScale, Just, ('persian',), 'persian'),
    'homayon':           (DiatonicScale, Just, ('persian',), 'persian'),
    'esfahan':           (DiatonicScale, Just, ('persian',), 'persian'),
    'nava':           (DiatonicScale, Just, ('persian',), 'persian'),
    'rast panjgah':           (DiatonicScale, Just, ('persian',), 'persian'),
    'sagah':           (DiatonicScale, Just, ('persian',), 'persian'),
    'dashti':           (DiatonicScale, Just, ('persian',), 'persian'),
    'bayate tork':           (DiatonicScale, Just, ('persian',), 'persian'),
    'ashfari':           (DiatonicScale, Just, ('persian',), 'persian'),
    'abu ata':           (DiatonicScale, Just, ('persian',), 'persian'),

}

dChordRecipes = {
    'major':                (('1', '3', '5')),
    'minor':                (('1', '3b', '5')),

    'major 6th':            (('1', '3', '5', '6')),
    'major 7th':            (('1', '3', '5', '7')),
    'major 6/9th':          (('1', '3', '5', '6', '9')),

    'major sus4':            (('1', '4', '5')),
    'major sus2':            (('1', '2', '5')),

    'diminished':           (('1', '3b', '5b')),
    'diminished 7th':       (('1', '3b', '5b', '7')),
    'augmented':            (('1', '3', '6b')),
    'augmented 6th':        (('1', '3', '5b', '7b')),
}


class StringWithFrets:
    '''A class to display the notes of a musical string over even-tempered fretting'''
    def __init__(self, offset):
        self.offset = offset

    def __repr__(self):
        '''Basic string reprentation by name with an option to fill in sharps or flats'''
        return str(self.offset)

    def play(self, oScale, lNames, key, frets):
        offset = self.offset
        length = len(lNames)
        fret = 0
        lOutput = []
        
        while fret <= frets:
            n = (offset+fret-key) % length
            if oScale.has(n):
                lOutput.append('%-2s' % lNames[(offset+fret) % length]) 
            else:
                lOutput.append('  ')
            fret += 1
        
        return g_sTableRowStart + join(lOutput, g_sTableRowBorder) + g_sTableRowEnd

    def playIntervals(self, oScale, lNames, key, frets):
        offset = self.offset
        length = len(lNames)
        fret = 0
        lOutput = []
        
        while fret <= frets:
            n = (offset+fret-key) % length
            if oScale.has(n):
                lOutput.append('%-2s' % lNames[n]) 
            else:
                lOutput.append('  ')
            fret += 1
        
        return g_sTableRowStart + join(lOutput, g_sTableRowBorder) + g_sTableRowEnd


class MusicalStringInstrument(Named):
    '''A class with an arbitrary list of MusicalStrings'''
    
    dInstruments = {}
    def __init__(self, name, oScale, lPitches):
        Named.__init__(self, name)
        self.scale = oScale
        self.lMusicalStrings = [ StringWithFrets(i) for i in lPitches ]
    
    def play(self, oScale, key, frets):
        lOutput = []
        
        l = self.lMusicalStrings
        num = len(l) - 1
        while num >= 0:
            musicalString = l[num]
            lOutput.append('%-3s' % (musicalString.play(oScale, self.scale.getNoteNames(), key, frets)))
            num -= 1
            
        sHeader = self.name()
        return '%s\n  %s%s\n    %s%s' % (g_sTableStart, g_sTableHeaderStart, sHeader,  join(lOutput, '\n    ') + g_sTableEnd, g_sTableHeaderEnd)

    def playIntervals(self, oScale, key, frets):
        lOutput = []
        
        l = self.lMusicalStrings
        num = len(l) - 1
        while num >= 0:
            musicalString = l[num]
            lOutput.append('%-3s' % (musicalString.playIntervals(oScale, self.scale.getIntervalNames(), key, frets)))
            num -= 1
            
        sHeader = self.name()
        return '%s\n  %s%s\n    %s%s' % (g_sTableStart, g_sTableHeaderStart, sHeader,  join(lOutput, '\n    ') + g_sTableEnd, g_sTableHeaderEnd)

    def register(self):
        MusicalStringInstrument.dInstruments[str.lower(self.name())] = self
        return self
    


MusicalStringInstrument('guitar', EqualTempered, EqualTempered.parseNotesToOffsetList('EADGBE', 0)).register()
MusicalStringInstrument('DADF#AD', EqualTempered, EqualTempered.parseNotesToOffsetList( 'DADF#AD', 0)).register()
MusicalStringInstrument('DADGAD', EqualTempered, EqualTempered.parseNotesToOffsetList('DADGAD', 0)).register()
MusicalStringInstrument('cello', EqualTempered, EqualTempered.parseNotesToOffsetList('CGDA', 0)).register()
MusicalStringInstrument('mandolin', EqualTempered, EqualTempered.parseNotesToOffsetList('GDAE', 0)).register()
MusicalStringInstrument('violin', EqualTempered, EqualTempered.parseNotesToOffsetList('GDAE', 0)).register()
# FIXME - This is obviously not an Equal-Tempered instrument
MusicalStringInstrument('setar', EqualTempered, EqualTempered.parseNotesToOffsetList('CCGC', 0)).register()



def uniqFromListOfList(lSequences):
    seen = set()
    for l in lSequences:
        for n in l:        seen.add(n)
    return seen

def FindIntervals(lInput, rootNote, lScales):
    return [ scale for scale in lScales if scale >= lInput ]

def ParseNoteSequences(lNotes, rootNote, lActiveScales):
    if rootNote is None:
        rootNote = EqualTempered.parseRoot(lNotes[0])
    lSequences = [ EqualTempered.parseNotesToFlags(s, rootNote) for s in lNotes ]

    # Are we matching the notes to scales and chords?  Display them if so
    if len(lSequences) > 0:
        allNoteFlags = 0
        for i in lSequences:
            allNoteFlags |= i
        
        if allNoteFlags:
            return FindIntervals(allNoteFlags, rootNote, lActiveScales), rootNote

    return [], 0



def getArgsParser():
    'Return an arguments parser with a basic setup'
    import optparse

    args_parser = optparse.OptionParser()

    args_parser.add_option("-s", "--scales", action = "store", dest = "scales", type="string",
        help = "Scales to limit to", default = None)
    args_parser.add_option("-c", "--chords", action = "store", dest = "chords", type="string",
        help = "Chords to limit to", default = None)
    args_parser.add_option("-k", "--keys", action = "store", dest = "keys", type="string",
        help = "Keys to limit to", default = None)
    args_parser.add_option("-C", "--chords-only", action = "store_true", dest = "chordsOnly",
        help = "Display only chords", default = False)
    args_parser.add_option("-S", "--scales-only", action = "store_true", dest = "scalesOnly",
        help = "Display only scales", default = False)
    args_parser.add_option("-F", "--family", action = "store", dest = "family", type="string",
        help = "Display scales of a family, available types %s" % 
        (', '.join(set([str(i[3]) for i in list(dScaleRecipes.values()) if i[3] is not None])))
        , default = None)
    args_parser.add_option("-A", "--all-scales", action = "store_true", dest = "all_scales",
        help = "Display all scales", default = False)
    args_parser.add_option("-M", "--modal", action = "store_true", dest = "modal",
        help = "Include modal scales", default = False)
    # args_parser.add_option("", "--triads", action = "store_true", dest = "triads",
    #     help = "Display triads", default = False)
    # args_parser.add_option("-i", "--instruments", action = "store", dest = "instruments", type="string",
    #     # help = "List instruments", default = "Standard Guitar,EADGBE,DGCFAD,DGCFAD,DADGAD,DADGAD,Cello,CGDA,Violin,GDAE,Setar,DDAD")
    #     help = "List instruments", default = "guitar")
    args_parser.add_option("", "--fingercharts", action = "store", dest = "fingercharts", type="string",
        help = "Print fingercharts", default = None)
    # args_parser.add_option("", "--nomatch", action = "store_true", dest = "nomatch",
    #     help = "Print nomatch", default = False)
    args_parser.add_option("-I", "--intervals", action = "store_true", dest = "intervals",
        help = "Print fingercharts in intervals", default = False)
    args_parser.add_option("-f", "--frets", action = "store", dest = "numFrets", type="int",
        help = "Frets to display", default = 12)
    args_parser.add_option("", "--html", action = "store_true", dest = "html",
        help = "Do fingercharts in HTML", default = False)

    args_parser.add_option("", "--scala", action = "store_true", dest = "scalaOutput",
        help = "Print scala output of scales", default = False)
    args_parser.add_option("", "--tuning", action = "store", dest = "tuningScale", type="string",
        help = "Scale to use for intervals", default = None)
    args_parser.add_option("", "--thumbjam", action = "store_true", dest = "thumbjamOutput",
        help = "Print thumbjam output of scales", default = False)
    args_parser.add_option("", "--modes", action = "store_true", dest = "modes",
        help = "Include all related modal scales", default = False)
    args_parser.add_option("", "--write", action = "store_true", dest = "write",
        help = "Write scales", default = False)
    # args_parser.add_option("", "--playMIDI", action = "store_true", dest = "playMIDI",
    #     help = "Write scales", default = False)
    args_parser.add_option("", "--shell", action = "store_true", dest = "shell",
        help = "Interactive shell\n", default = False)
    args_parser.add_option("", "--fractional", action = "store", dest = "fractional", type="string",
        help = "Make a fractional scale with denominator up to this", default = None)

    return args_parser        


def inputLoop(options, oParentScale, args, *largs, **kwargs):
    # scale = QuarterScale('octave').setNotes(
    scale = ChromaticScale('octave').setNotes(
        (2, 1),
    )   
    scale.build(oParentScale)
    prompt = scale.scalaOutput
    scale.flags = 1<<(len(oParentScale))

    while True:
        print((prompt(bDescription = 1)))
        input = eval(input("> "))
        if not len(input):
            continue

        if input == 'clear':
            scale.flags = 1<<(len(oParentScale))
        elif input == 'write':
            with open('%s.scl' % (scale.name().strip(' ')), 'w') as file:
                file.write(scale.scalaOutput())
        else:
            try:
                lInput = split(input)
                scale.adjust(lInput)
            except:
                print("ERROR")


# For command-line invocation
def main():
    options, args = getArgsParser().parse_args()
    # import pdb

    oParentScale = None
    if options.tuningScale:
        oParentScale = Scale.factory(options.tuningScale, None)

    lActiveScales = []
    lActiveChords = []
    lActiveKeys = []
    lInstruments = []
    lMatches = []

    if options.html:
        enableHTMLDisplay()

    if options.fingercharts:
        for name in split(options.fingercharts, ','):
            sName = lower(name)
            if sName in MusicalStringInstrument.dInstruments:
                lInstruments.append(MusicalStringInstrument.dInstruments[sName])
            else:
                lInstruments.append(MusicalStringInstrument(sName, EqualTempered, EqualTempered.parseNotesToOffsetList(name, 0)))

    if options.scales:
        for s in split(options.scales, ','):
            lScaleNames = split(s, ':')
            scale = Scale.factory(lScaleNames[0], oParentScale, *lScaleNames[1:])
            if options.modes:
                try:
                    for mode in scale.getModeList():
                        lActiveScales.append(Scale.factory(mode, oParentScale, *lScaleNames[1:]))
                except:
                    pass
            else:
                lActiveScales.append(scale)
    elif options.fractional:
        l = [ int(i) for i in split(options.fractional, ':') ]
        l = tuple(l)
        lActiveScales = [ makeFractionalScale(*l) ]
    else:
        lScaleNames = sorted(dScaleRecipes.keys())
        lActiveScales = [ Scale.factory(scale, oParentScale) for scale in lScaleNames 
            if dScaleRecipes[scale][3] != 'tunings' and
            (options.all_scales or options.family == dScaleRecipes[scale][3])
        ]

    if options.chords:
        for s in split(options.scales, ','):
            lChordNames = split(s, ':')
            chord = Chord.factory(lChordNames[0], EqualTempered)
            lActiveChords.append(chord)
    elif 0: #
        lChordNames = sorted(dChordRecipes.keys())
        lActiveChords = [ Chord.factory(chord, EqualTempered) for chord in lChordNames ]
    
    for scale in lActiveScales:
        scale.register()
    for chord in lActiveChords:
        chord.register()
            
    if options.scalaOutput:
        for scale in lActiveScales:
            if options.write:
                with open('%s.scl' % (scale.name().strip(' ')), 'w') as file:
                    file.write(scale.scalaOutput())
            else:               
                print((scale.scalaOutput(1)))
                print()

    if options.thumbjamOutput:
        if not len(lActiveScales):
            l = sorted(dScaleRecipes.keys())
            for s in l:
                lActiveScales.append(Scale.factory(s, oParentScale, *args))

        lOutput = [ '''<?xml version="1.0"?>\n<Scales>''' ]
        for scale in lActiveScales:
            if options.tuningScale and scale.oParentScale is None:
                continue
            lOutput.append(scale.thumbjamOutput())
        lOutput.append('''</Scales>\n''')
        if options.write:
            if options.tuningScale:
                file = open('%s.sxml' % (options.tuningScale), 'w')
            else:
                file = open('thumbjam.sxml', 'w')
            file.write(join(lOutput, '\n'))
            file.close()
        else:
            print((join(lOutput, '\n')))
            print("\n\n")

    if options.keys:
        lActiveKeys = EqualTempered.parseNotesToOffsets(options.keys, 0)
    else:
        lActiveKeys = EqualTempered.parseNotesToOffsets('CDbDEbEFF#GAbABbB', 0)

    # Are we pulling fingercharts for whatever instruments?

    lSequences = ', '.join(args).split(',')
    if len(args) >= 1:
        lOutput = []
        if not options.chordsOnly:  
            for key in lActiveKeys:
                lMatches, root = ParseNoteSequences( lSequences, key, lActiveScales )
                if len(lMatches) > 0:
                    lOutput.append(', '.join([s.shortList(root) for s in lMatches]))
                    print("\n\t")

            if len(lOutput):
                print("Matches scales:\n\t")
                print(', '.join(lOutput))
                print("\n\t")
                print()

            for scale in lMatches:
                for instrument in lInstruments:
                    print(scale.shortList(key))
                    print("\n")
                    if options.intervals:
                        print((instrument.playIntervals(scale, key, options.numFrets)))
                    else:
                        print((instrument.play(scale, key, options.numFrets)))

        for lNotes in lSequences:
            if len(lNotes) <= 1:    continue
            if not options.scalesOnly:  
                lOutput = []
                for key in lActiveKeys:
                    lMatches, root = ParseNoteSequences( [lNotes], key, lActiveChords )
                    if len(lMatches) > 0:
                        lOutput.append(join([s.shortList(root) for s in lMatches], '\n\t'))
                    
                        if options.fingercharts:
                            for scale in lMatches:
                                print((scale.shortList(key)))
                                for instrument in lInstruments:
                                    if options.intervals:
                                        print((instrument.playIntervals(scale, key, options.numFrets)))
                                    else:
                                        print((instrument.play(scale, key, options.numFrets)))

                if len(lOutput):
                    print(("Matches chords:\n\t%s" % (join(lOutput, '\n\t'))))

        print()

    elif options.fingercharts:
        key = lActiveKeys[0]
        lMatches = lActiveScales
        for scale in lMatches:
            print((scale.shortList(key)))
            for instrument in lInstruments:
                if options.intervals:
                    print((instrument.playIntervals(scale, key, options.numFrets)))
                else:
                    print((instrument.play(scale, key, options.numFrets)))
                   
    if options.shell:    
        if not oParentScale:
            oParentScale = EqualTempered
        inputLoop(options, oParentScale, args, locals())
        

if __name__ == "__main__":
    import sys
    sys.exit(main())

'''

TODO:

Redo scales to use new intervalParse for construction
Implement mode bitshifts
Fix buggy fingercharts for harmonic grid

'''
